// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/notebook_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_NotebookService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_NotebookService
    public enum Method {
        public enum CreateNotebookRuntimeTemplate {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "CreateNotebookRuntimeTemplate"
            )
        }
        public enum GetNotebookRuntimeTemplate {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "GetNotebookRuntimeTemplate"
            )
        }
        public enum ListNotebookRuntimeTemplates {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "ListNotebookRuntimeTemplates"
            )
        }
        public enum DeleteNotebookRuntimeTemplate {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "DeleteNotebookRuntimeTemplate"
            )
        }
        public enum UpdateNotebookRuntimeTemplate {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "UpdateNotebookRuntimeTemplate"
            )
        }
        public enum AssignNotebookRuntime {
            public typealias Input = Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "AssignNotebookRuntime"
            )
        }
        public enum GetNotebookRuntime {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NotebookRuntime
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "GetNotebookRuntime"
            )
        }
        public enum ListNotebookRuntimes {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "ListNotebookRuntimes"
            )
        }
        public enum DeleteNotebookRuntime {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "DeleteNotebookRuntime"
            )
        }
        public enum UpgradeNotebookRuntime {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "UpgradeNotebookRuntime"
            )
        }
        public enum StartNotebookRuntime {
            public typealias Input = Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "StartNotebookRuntime"
            )
        }
        public enum CreateNotebookExecutionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "CreateNotebookExecutionJob"
            )
        }
        public enum GetNotebookExecutionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NotebookExecutionJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "GetNotebookExecutionJob"
            )
        }
        public enum ListNotebookExecutionJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "ListNotebookExecutionJobs"
            )
        }
        public enum DeleteNotebookExecutionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_NotebookService.descriptor.fullyQualifiedService,
                method: "DeleteNotebookExecutionJob"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateNotebookRuntimeTemplate.descriptor,
            GetNotebookRuntimeTemplate.descriptor,
            ListNotebookRuntimeTemplates.descriptor,
            DeleteNotebookRuntimeTemplate.descriptor,
            UpdateNotebookRuntimeTemplate.descriptor,
            AssignNotebookRuntime.descriptor,
            GetNotebookRuntime.descriptor,
            ListNotebookRuntimes.descriptor,
            DeleteNotebookRuntime.descriptor,
            UpgradeNotebookRuntime.descriptor,
            StartNotebookRuntime.descriptor,
            CreateNotebookExecutionJob.descriptor,
            GetNotebookExecutionJob.descriptor,
            ListNotebookExecutionJobs.descriptor,
            DeleteNotebookExecutionJob.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_NotebookService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_NotebookService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_NotebookService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "NotebookService"
    )
}

/// The interface for Vertex Notebook service (a.k.a. Colab on Workbench).
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_NotebookService_ClientProtocol: Sendable {
    /// Creates a NotebookRuntimeTemplate.
    func createNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a NotebookRuntimeTemplate.
    func getNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists NotebookRuntimeTemplates in a Location.
    func listNotebookRuntimeTemplates<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a NotebookRuntimeTemplate.
    func deleteNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a NotebookRuntimeTemplate.
    func updateNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
    /// method will either returns an existing assignment or generates a new one.
    func assignNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a NotebookRuntime.
    func getNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntime>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntime>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists NotebookRuntimes in a Location.
    func listNotebookRuntimes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a NotebookRuntime.
    func deleteNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Upgrades a NotebookRuntime.
    func upgradeNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Starts a NotebookRuntime.
    func startNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a NotebookExecutionJob.
    func createNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a NotebookExecutionJob.
    func getNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists NotebookExecutionJobs in a Location.
    func listNotebookExecutionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a NotebookExecutionJob.
    func deleteNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_NotebookService.ClientProtocol {
    public func createNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createNotebookRuntimeTemplate(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getNotebookRuntimeTemplate(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>(),
            options: options,
            body
        )
    }
    
    public func listNotebookRuntimeTemplates<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listNotebookRuntimeTemplates(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteNotebookRuntimeTemplate(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func updateNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateNotebookRuntimeTemplate(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>(),
            options: options,
            body
        )
    }
    
    public func assignNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.assignNotebookRuntime(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntime>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getNotebookRuntime(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntime>(),
            options: options,
            body
        )
    }
    
    public func listNotebookRuntimes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listNotebookRuntimes(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteNotebookRuntime(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func upgradeNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.upgradeNotebookRuntime(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func startNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.startNotebookRuntime(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func createNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createNotebookExecutionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getNotebookExecutionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>(),
            options: options,
            body
        )
    }
    
    public func listNotebookExecutionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listNotebookExecutionJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteNotebookExecutionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_NotebookService.ClientProtocol {
    /// Creates a NotebookRuntimeTemplate.
    public func createNotebookRuntimeTemplate<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createNotebookRuntimeTemplate(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a NotebookRuntimeTemplate.
    public func getNotebookRuntimeTemplate<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getNotebookRuntimeTemplate(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists NotebookRuntimeTemplates in a Location.
    public func listNotebookRuntimeTemplates<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listNotebookRuntimeTemplates(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a NotebookRuntimeTemplate.
    public func deleteNotebookRuntimeTemplate<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteNotebookRuntimeTemplate(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a NotebookRuntimeTemplate.
    public func updateNotebookRuntimeTemplate<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateNotebookRuntimeTemplate(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
    /// method will either returns an existing assignment or generates a new one.
    public func assignNotebookRuntime<Result>(
        _ message: Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.assignNotebookRuntime(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a NotebookRuntime.
    public func getNotebookRuntime<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntime>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getNotebookRuntime(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists NotebookRuntimes in a Location.
    public func listNotebookRuntimes<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listNotebookRuntimes(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a NotebookRuntime.
    public func deleteNotebookRuntime<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteNotebookRuntime(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Upgrades a NotebookRuntime.
    public func upgradeNotebookRuntime<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.upgradeNotebookRuntime(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Starts a NotebookRuntime.
    public func startNotebookRuntime<Result>(
        _ message: Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.startNotebookRuntime(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a NotebookExecutionJob.
    public func createNotebookExecutionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createNotebookExecutionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a NotebookExecutionJob.
    public func getNotebookExecutionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getNotebookExecutionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists NotebookExecutionJobs in a Location.
    public func listNotebookExecutionJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listNotebookExecutionJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a NotebookExecutionJob.
    public func deleteNotebookExecutionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteNotebookExecutionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// The interface for Vertex Notebook service (a.k.a. Colab on Workbench).
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_NotebookService_Client: Google_Cloud_Aiplatform_V1_NotebookService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates a NotebookRuntimeTemplate.
    public func createNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.CreateNotebookRuntimeTemplate.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a NotebookRuntimeTemplate.
    public func getNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.GetNotebookRuntimeTemplate.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists NotebookRuntimeTemplates in a Location.
    public func listNotebookRuntimeTemplates<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimeTemplatesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.ListNotebookRuntimeTemplates.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a NotebookRuntimeTemplate.
    public func deleteNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.DeleteNotebookRuntimeTemplate.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a NotebookRuntimeTemplate.
    public func updateNotebookRuntimeTemplate<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateNotebookRuntimeTemplateRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntimeTemplate>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.UpdateNotebookRuntimeTemplate.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
    /// method will either returns an existing assignment or generates a new one.
    public func assignNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AssignNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.AssignNotebookRuntime.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a NotebookRuntime.
    public func getNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookRuntime>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookRuntime>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.GetNotebookRuntime.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists NotebookRuntimes in a Location.
    public func listNotebookRuntimes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookRuntimesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.ListNotebookRuntimes.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a NotebookRuntime.
    public func deleteNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.DeleteNotebookRuntime.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Upgrades a NotebookRuntime.
    public func upgradeNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpgradeNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.UpgradeNotebookRuntime.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Starts a NotebookRuntime.
    public func startNotebookRuntime<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StartNotebookRuntimeRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.StartNotebookRuntime.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a NotebookExecutionJob.
    public func createNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.CreateNotebookExecutionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a NotebookExecutionJob.
    public func getNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NotebookExecutionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.GetNotebookExecutionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists NotebookExecutionJobs in a Location.
    public func listNotebookExecutionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNotebookExecutionJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.ListNotebookExecutionJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a NotebookExecutionJob.
    public func deleteNotebookExecutionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNotebookExecutionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_NotebookService.Method.DeleteNotebookExecutionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}