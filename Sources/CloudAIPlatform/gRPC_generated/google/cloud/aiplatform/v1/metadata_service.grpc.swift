// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/metadata_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_MetadataService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_MetadataService
    public enum Method {
        public enum CreateMetadataStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "CreateMetadataStore"
            )
        }
        public enum GetMetadataStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_MetadataStore
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "GetMetadataStore"
            )
        }
        public enum ListMetadataStores {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "ListMetadataStores"
            )
        }
        public enum DeleteMetadataStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "DeleteMetadataStore"
            )
        }
        public enum CreateArtifact {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateArtifactRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Artifact
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "CreateArtifact"
            )
        }
        public enum GetArtifact {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetArtifactRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Artifact
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "GetArtifact"
            )
        }
        public enum ListArtifacts {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListArtifactsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListArtifactsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "ListArtifacts"
            )
        }
        public enum UpdateArtifact {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateArtifactRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Artifact
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "UpdateArtifact"
            )
        }
        public enum DeleteArtifact {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteArtifactRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "DeleteArtifact"
            )
        }
        public enum PurgeArtifacts {
            public typealias Input = Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "PurgeArtifacts"
            )
        }
        public enum CreateContext {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateContextRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Context
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "CreateContext"
            )
        }
        public enum GetContext {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetContextRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Context
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "GetContext"
            )
        }
        public enum ListContexts {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListContextsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListContextsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "ListContexts"
            )
        }
        public enum UpdateContext {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateContextRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Context
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "UpdateContext"
            )
        }
        public enum DeleteContext {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteContextRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "DeleteContext"
            )
        }
        public enum PurgeContexts {
            public typealias Input = Google_Cloud_Aiplatform_V1_PurgeContextsRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "PurgeContexts"
            )
        }
        public enum AddContextArtifactsAndExecutions {
            public typealias Input = Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "AddContextArtifactsAndExecutions"
            )
        }
        public enum AddContextChildren {
            public typealias Input = Google_Cloud_Aiplatform_V1_AddContextChildrenRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_AddContextChildrenResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "AddContextChildren"
            )
        }
        public enum RemoveContextChildren {
            public typealias Input = Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "RemoveContextChildren"
            )
        }
        public enum QueryContextLineageSubgraph {
            public typealias Input = Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_LineageSubgraph
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "QueryContextLineageSubgraph"
            )
        }
        public enum CreateExecution {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateExecutionRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Execution
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "CreateExecution"
            )
        }
        public enum GetExecution {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetExecutionRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Execution
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "GetExecution"
            )
        }
        public enum ListExecutions {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListExecutionsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListExecutionsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "ListExecutions"
            )
        }
        public enum UpdateExecution {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateExecutionRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Execution
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "UpdateExecution"
            )
        }
        public enum DeleteExecution {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteExecutionRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "DeleteExecution"
            )
        }
        public enum PurgeExecutions {
            public typealias Input = Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "PurgeExecutions"
            )
        }
        public enum AddExecutionEvents {
            public typealias Input = Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "AddExecutionEvents"
            )
        }
        public enum QueryExecutionInputsAndOutputs {
            public typealias Input = Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_LineageSubgraph
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "QueryExecutionInputsAndOutputs"
            )
        }
        public enum CreateMetadataSchema {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_MetadataSchema
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "CreateMetadataSchema"
            )
        }
        public enum GetMetadataSchema {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_MetadataSchema
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "GetMetadataSchema"
            )
        }
        public enum ListMetadataSchemas {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "ListMetadataSchemas"
            )
        }
        public enum QueryArtifactLineageSubgraph {
            public typealias Input = Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_LineageSubgraph
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_MetadataService.descriptor.fullyQualifiedService,
                method: "QueryArtifactLineageSubgraph"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateMetadataStore.descriptor,
            GetMetadataStore.descriptor,
            ListMetadataStores.descriptor,
            DeleteMetadataStore.descriptor,
            CreateArtifact.descriptor,
            GetArtifact.descriptor,
            ListArtifacts.descriptor,
            UpdateArtifact.descriptor,
            DeleteArtifact.descriptor,
            PurgeArtifacts.descriptor,
            CreateContext.descriptor,
            GetContext.descriptor,
            ListContexts.descriptor,
            UpdateContext.descriptor,
            DeleteContext.descriptor,
            PurgeContexts.descriptor,
            AddContextArtifactsAndExecutions.descriptor,
            AddContextChildren.descriptor,
            RemoveContextChildren.descriptor,
            QueryContextLineageSubgraph.descriptor,
            CreateExecution.descriptor,
            GetExecution.descriptor,
            ListExecutions.descriptor,
            UpdateExecution.descriptor,
            DeleteExecution.descriptor,
            PurgeExecutions.descriptor,
            AddExecutionEvents.descriptor,
            QueryExecutionInputsAndOutputs.descriptor,
            CreateMetadataSchema.descriptor,
            GetMetadataSchema.descriptor,
            ListMetadataSchemas.descriptor,
            QueryArtifactLineageSubgraph.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_MetadataService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_MetadataService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_MetadataService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "MetadataService"
    )
}

/// Service for reading and writing metadata entries.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_MetadataService_ClientProtocol: Sendable {
    /// Initializes a MetadataStore, including allocation of resources.
    func createMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves a specific MetadataStore.
    func getMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataStore>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataStore>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists MetadataStores for a Location.
    func listMetadataStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a single MetadataStore and all its child resources (Artifacts,
    /// Executions, and Contexts).
    func deleteMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates an Artifact associated with a MetadataStore.
    func createArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves a specific Artifact.
    func getArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Artifacts in the MetadataStore.
    func listArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a stored Artifact.
    func updateArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes an Artifact.
    func deleteArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Purges Artifacts.
    func purgeArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a Context associated with a MetadataStore.
    func createContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves a specific Context.
    func getContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Contexts on the MetadataStore.
    func listContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListContextsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListContextsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListContextsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListContextsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a stored Context.
    func updateContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a stored Context.
    func deleteContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Purges Contexts.
    func purgeContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Adds a set of Artifacts and Executions to a Context. If any of the
    /// Artifacts or Executions have already been added to a Context, they are
    /// simply skipped.
    func addContextArtifactsAndExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Adds a set of Contexts as children to a parent Context. If any of the
    /// child Contexts have already been added to the parent Context, they are
    /// simply skipped. If this call would create a cycle or cause any Context to
    /// have more than 10 parents, the request will fail with an INVALID_ARGUMENT
    /// error.
    func addContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Remove a set of children contexts from a parent Context. If any of the
    /// child Contexts were NOT added to the parent Context, they are
    /// simply skipped.
    func removeContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves Artifacts and Executions within the specified Context, connected
    /// by Event edges and returned as a LineageSubgraph.
    func queryContextLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates an Execution associated with a MetadataStore.
    func createExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves a specific Execution.
    func getExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Executions in the MetadataStore.
    func listExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a stored Execution.
    func updateExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes an Execution.
    func deleteExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Purges Executions.
    func purgeExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Adds Events to the specified Execution. An Event indicates whether an
    /// Artifact was used as an input or output for an Execution. If an Event
    /// already exists between the Execution and the Artifact, the Event is
    /// skipped.
    func addExecutionEvents<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Obtains the set of input and output Artifacts for this Execution, in the
    /// form of LineageSubgraph that also contains the Execution and connecting
    /// Events.
    func queryExecutionInputsAndOutputs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a MetadataSchema.
    func createMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves a specific MetadataSchema.
    func getMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists MetadataSchemas.
    func listMetadataSchemas<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Retrieves lineage of an Artifact represented through Artifacts and
    /// Executions connected by Event edges and returned as a LineageSubgraph.
    func queryArtifactLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_MetadataService.ClientProtocol {
    public func createMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createMetadataStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataStore>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getMetadataStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_MetadataStore>(),
            options: options,
            body
        )
    }
    
    public func listMetadataStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listMetadataStores(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteMetadataStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func createArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createArtifact(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Artifact>(),
            options: options,
            body
        )
    }
    
    public func getArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetArtifactRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getArtifact(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetArtifactRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Artifact>(),
            options: options,
            body
        )
    }
    
    public func listArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listArtifacts(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateArtifact(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Artifact>(),
            options: options,
            body
        )
    }
    
    public func deleteArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteArtifact(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func purgeArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.purgeArtifacts(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func createContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateContextRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createContext(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateContextRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Context>(),
            options: options,
            body
        )
    }
    
    public func getContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetContextRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getContext(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetContextRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Context>(),
            options: options,
            body
        )
    }
    
    public func listContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListContextsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListContextsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listContexts(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListContextsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListContextsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateContextRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateContext(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateContextRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Context>(),
            options: options,
            body
        )
    }
    
    public func deleteContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteContextRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteContext(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteContextRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func purgeContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.purgeContexts(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func addContextArtifactsAndExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.addContextArtifactsAndExecutions(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>(),
            options: options,
            body
        )
    }
    
    public func addContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.addContextChildren(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>(),
            options: options,
            body
        )
    }
    
    public func removeContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.removeContextChildren(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>(),
            options: options,
            body
        )
    }
    
    public func queryContextLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.queryContextLineageSubgraph(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>(),
            options: options,
            body
        )
    }
    
    public func createExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createExecution(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Execution>(),
            options: options,
            body
        )
    }
    
    public func getExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetExecutionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getExecution(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetExecutionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Execution>(),
            options: options,
            body
        )
    }
    
    public func listExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listExecutions(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateExecution(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Execution>(),
            options: options,
            body
        )
    }
    
    public func deleteExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteExecution(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func purgeExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.purgeExecutions(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func addExecutionEvents<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.addExecutionEvents(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>(),
            options: options,
            body
        )
    }
    
    public func queryExecutionInputsAndOutputs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.queryExecutionInputsAndOutputs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>(),
            options: options,
            body
        )
    }
    
    public func createMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createMetadataSchema(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>(),
            options: options,
            body
        )
    }
    
    public func getMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getMetadataSchema(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>(),
            options: options,
            body
        )
    }
    
    public func listMetadataSchemas<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listMetadataSchemas(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>(),
            options: options,
            body
        )
    }
    
    public func queryArtifactLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.queryArtifactLineageSubgraph(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_MetadataService.ClientProtocol {
    /// Initializes a MetadataStore, including allocation of resources.
    public func createMetadataStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createMetadataStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves a specific MetadataStore.
    public func getMetadataStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataStore>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getMetadataStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists MetadataStores for a Location.
    public func listMetadataStores<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listMetadataStores(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a single MetadataStore and all its child resources (Artifacts,
    /// Executions, and Contexts).
    public func deleteMetadataStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteMetadataStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates an Artifact associated with a MetadataStore.
    public func createArtifact<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateArtifactRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createArtifact(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves a specific Artifact.
    public func getArtifact<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetArtifactRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetArtifactRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getArtifact(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Artifacts in the MetadataStore.
    public func listArtifacts<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListArtifactsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listArtifacts(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a stored Artifact.
    public func updateArtifact<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateArtifactRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateArtifact(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes an Artifact.
    public func deleteArtifact<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteArtifactRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteArtifact(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Purges Artifacts.
    public func purgeArtifacts<Result>(
        _ message: Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.purgeArtifacts(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a Context associated with a MetadataStore.
    public func createContext<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateContextRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateContextRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createContext(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves a specific Context.
    public func getContext<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetContextRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetContextRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getContext(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Contexts on the MetadataStore.
    public func listContexts<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListContextsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListContextsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListContextsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listContexts(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a stored Context.
    public func updateContext<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateContextRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateContextRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateContext(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a stored Context.
    public func deleteContext<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteContextRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteContextRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteContext(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Purges Contexts.
    public func purgeContexts<Result>(
        _ message: Google_Cloud_Aiplatform_V1_PurgeContextsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.purgeContexts(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Adds a set of Artifacts and Executions to a Context. If any of the
    /// Artifacts or Executions have already been added to a Context, they are
    /// simply skipped.
    public func addContextArtifactsAndExecutions<Result>(
        _ message: Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.addContextArtifactsAndExecutions(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Adds a set of Contexts as children to a parent Context. If any of the
    /// child Contexts have already been added to the parent Context, they are
    /// simply skipped. If this call would create a cycle or cause any Context to
    /// have more than 10 parents, the request will fail with an INVALID_ARGUMENT
    /// error.
    public func addContextChildren<Result>(
        _ message: Google_Cloud_Aiplatform_V1_AddContextChildrenRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.addContextChildren(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Remove a set of children contexts from a parent Context. If any of the
    /// child Contexts were NOT added to the parent Context, they are
    /// simply skipped.
    public func removeContextChildren<Result>(
        _ message: Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.removeContextChildren(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves Artifacts and Executions within the specified Context, connected
    /// by Event edges and returned as a LineageSubgraph.
    public func queryContextLineageSubgraph<Result>(
        _ message: Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.queryContextLineageSubgraph(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates an Execution associated with a MetadataStore.
    public func createExecution<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateExecutionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createExecution(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves a specific Execution.
    public func getExecution<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetExecutionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetExecutionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getExecution(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Executions in the MetadataStore.
    public func listExecutions<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListExecutionsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listExecutions(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a stored Execution.
    public func updateExecution<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateExecutionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateExecution(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes an Execution.
    public func deleteExecution<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteExecutionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteExecution(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Purges Executions.
    public func purgeExecutions<Result>(
        _ message: Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.purgeExecutions(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Adds Events to the specified Execution. An Event indicates whether an
    /// Artifact was used as an input or output for an Execution. If an Event
    /// already exists between the Execution and the Artifact, the Event is
    /// skipped.
    public func addExecutionEvents<Result>(
        _ message: Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.addExecutionEvents(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Obtains the set of input and output Artifacts for this Execution, in the
    /// form of LineageSubgraph that also contains the Execution and connecting
    /// Events.
    public func queryExecutionInputsAndOutputs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.queryExecutionInputsAndOutputs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a MetadataSchema.
    public func createMetadataSchema<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createMetadataSchema(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves a specific MetadataSchema.
    public func getMetadataSchema<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getMetadataSchema(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists MetadataSchemas.
    public func listMetadataSchemas<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listMetadataSchemas(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Retrieves lineage of an Artifact represented through Artifacts and
    /// Executions connected by Event edges and returned as a LineageSubgraph.
    public func queryArtifactLineageSubgraph<Result>(
        _ message: Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.queryArtifactLineageSubgraph(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// Service for reading and writing metadata entries.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_MetadataService_Client: Google_Cloud_Aiplatform_V1_MetadataService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Initializes a MetadataStore, including allocation of resources.
    public func createMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.CreateMetadataStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves a specific MetadataStore.
    public func getMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataStore>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataStore>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.GetMetadataStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists MetadataStores for a Location.
    public func listMetadataStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataStoresResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.ListMetadataStores.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a single MetadataStore and all its child resources (Artifacts,
    /// Executions, and Contexts).
    public func deleteMetadataStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteMetadataStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.DeleteMetadataStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates an Artifact associated with a MetadataStore.
    public func createArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.CreateArtifact.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves a specific Artifact.
    public func getArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.GetArtifact.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Artifacts in the MetadataStore.
    public func listArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListArtifactsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListArtifactsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.ListArtifacts.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a stored Artifact.
    public func updateArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Artifact>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Artifact>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.UpdateArtifact.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes an Artifact.
    public func deleteArtifact<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteArtifactRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.DeleteArtifact.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Purges Artifacts.
    public func purgeArtifacts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeArtifactsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.PurgeArtifacts.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a Context associated with a MetadataStore.
    public func createContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.CreateContext.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves a specific Context.
    public func getContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.GetContext.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Contexts on the MetadataStore.
    public func listContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListContextsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListContextsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListContextsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListContextsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.ListContexts.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a stored Context.
    public func updateContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Context>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Context>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.UpdateContext.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a stored Context.
    public func deleteContext<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteContextRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteContextRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.DeleteContext.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Purges Contexts.
    public func purgeContexts<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeContextsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.PurgeContexts.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Adds a set of Artifacts and Executions to a Context. If any of the
    /// Artifacts or Executions have already been added to a Context, they are
    /// simply skipped.
    public func addContextArtifactsAndExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextArtifactsAndExecutionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.AddContextArtifactsAndExecutions.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Adds a set of Contexts as children to a parent Context. If any of the
    /// child Contexts have already been added to the parent Context, they are
    /// simply skipped. If this call would create a cycle or cause any Context to
    /// have more than 10 parents, the request will fail with an INVALID_ARGUMENT
    /// error.
    public func addContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddContextChildrenRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddContextChildrenResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.AddContextChildren.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Remove a set of children contexts from a parent Context. If any of the
    /// child Contexts were NOT added to the parent Context, they are
    /// simply skipped.
    public func removeContextChildren<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveContextChildrenResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.RemoveContextChildren.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves Artifacts and Executions within the specified Context, connected
    /// by Event edges and returned as a LineageSubgraph.
    public func queryContextLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryContextLineageSubgraphRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.QueryContextLineageSubgraph.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates an Execution associated with a MetadataStore.
    public func createExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.CreateExecution.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves a specific Execution.
    public func getExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.GetExecution.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Executions in the MetadataStore.
    public func listExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListExecutionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.ListExecutions.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a stored Execution.
    public func updateExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Execution>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Execution>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.UpdateExecution.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes an Execution.
    public func deleteExecution<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteExecutionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.DeleteExecution.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Purges Executions.
    public func purgeExecutions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PurgeExecutionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.PurgeExecutions.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Adds Events to the specified Execution. An Event indicates whether an
    /// Artifact was used as an input or output for an Execution. If an Event
    /// already exists between the Execution and the Artifact, the Event is
    /// skipped.
    public func addExecutionEvents<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AddExecutionEventsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.AddExecutionEvents.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Obtains the set of input and output Artifacts for this Execution, in the
    /// form of LineageSubgraph that also contains the Execution and connecting
    /// Events.
    public func queryExecutionInputsAndOutputs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryExecutionInputsAndOutputsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.QueryExecutionInputsAndOutputs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a MetadataSchema.
    public func createMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateMetadataSchemaRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.CreateMetadataSchema.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves a specific MetadataSchema.
    public func getMetadataSchema<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetMetadataSchemaRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_MetadataSchema>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_MetadataSchema>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.GetMetadataSchema.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists MetadataSchemas.
    public func listMetadataSchemas<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListMetadataSchemasResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.ListMetadataSchemas.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Retrieves lineage of an Artifact represented through Artifacts and
    /// Executions connected by Event edges and returned as a LineageSubgraph.
    public func queryArtifactLineageSubgraph<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_QueryArtifactLineageSubgraphRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_LineageSubgraph>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_LineageSubgraph>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_MetadataService.Method.QueryArtifactLineageSubgraph.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}