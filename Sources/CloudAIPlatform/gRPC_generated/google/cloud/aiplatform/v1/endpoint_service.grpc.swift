// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/endpoint_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_EndpointService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_EndpointService
    public enum Method {
        public enum CreateEndpoint {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateEndpointRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "CreateEndpoint"
            )
        }
        public enum GetEndpoint {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetEndpointRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Endpoint
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "GetEndpoint"
            )
        }
        public enum ListEndpoints {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListEndpointsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListEndpointsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "ListEndpoints"
            )
        }
        public enum UpdateEndpoint {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateEndpointRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Endpoint
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "UpdateEndpoint"
            )
        }
        public enum DeleteEndpoint {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteEndpointRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "DeleteEndpoint"
            )
        }
        public enum DeployModel {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeployModelRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "DeployModel"
            )
        }
        public enum UndeployModel {
            public typealias Input = Google_Cloud_Aiplatform_V1_UndeployModelRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "UndeployModel"
            )
        }
        public enum MutateDeployedModel {
            public typealias Input = Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_EndpointService.descriptor.fullyQualifiedService,
                method: "MutateDeployedModel"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateEndpoint.descriptor,
            GetEndpoint.descriptor,
            ListEndpoints.descriptor,
            UpdateEndpoint.descriptor,
            DeleteEndpoint.descriptor,
            DeployModel.descriptor,
            UndeployModel.descriptor,
            MutateDeployedModel.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_EndpointService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_EndpointService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_EndpointService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "EndpointService"
    )
}

/// A service for managing Vertex AI's Endpoints.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_EndpointService_ClientProtocol: Sendable {
    /// Creates an Endpoint.
    func createEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets an Endpoint.
    func getEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Endpoints in a Location.
    func listEndpoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates an Endpoint.
    func updateEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes an Endpoint.
    func deleteEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deploys a Model into this Endpoint, creating a DeployedModel within it.
    func deployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeployModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeployModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Undeploys a Model from an Endpoint, removing a DeployedModel from it, and
    /// freeing all resources it's using.
    func undeployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UndeployModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UndeployModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates an existing deployed model. Updatable fields include
    /// `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
    /// `disable_container_logging` (v1 only), and `enable_container_logging`
    /// (v1beta1 only).
    func mutateDeployedModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_EndpointService.ClientProtocol {
    public func createEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createEndpoint(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetEndpointRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getEndpoint(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetEndpointRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>(),
            options: options,
            body
        )
    }
    
    public func listEndpoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listEndpoints(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateEndpoint(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>(),
            options: options,
            body
        )
    }
    
    public func deleteEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteEndpoint(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func deployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeployModelRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deployModel(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeployModelRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func undeployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UndeployModelRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.undeployModel(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UndeployModelRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func mutateDeployedModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.mutateDeployedModel(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_EndpointService.ClientProtocol {
    /// Creates an Endpoint.
    public func createEndpoint<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateEndpointRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createEndpoint(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets an Endpoint.
    public func getEndpoint<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetEndpointRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetEndpointRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getEndpoint(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Endpoints in a Location.
    public func listEndpoints<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListEndpointsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listEndpoints(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates an Endpoint.
    public func updateEndpoint<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateEndpointRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateEndpoint(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes an Endpoint.
    public func deleteEndpoint<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteEndpointRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteEndpoint(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deploys a Model into this Endpoint, creating a DeployedModel within it.
    public func deployModel<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeployModelRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeployModelRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deployModel(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Undeploys a Model from an Endpoint, removing a DeployedModel from it, and
    /// freeing all resources it's using.
    public func undeployModel<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UndeployModelRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UndeployModelRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.undeployModel(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates an existing deployed model. Updatable fields include
    /// `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
    /// `disable_container_logging` (v1 only), and `enable_container_logging`
    /// (v1beta1 only).
    public func mutateDeployedModel<Result>(
        _ message: Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.mutateDeployedModel(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// A service for managing Vertex AI's Endpoints.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_EndpointService_Client: Google_Cloud_Aiplatform_V1_EndpointService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates an Endpoint.
    public func createEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.CreateEndpoint.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets an Endpoint.
    public func getEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.GetEndpoint.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Endpoints in a Location.
    public func listEndpoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListEndpointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListEndpointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.ListEndpoints.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates an Endpoint.
    public func updateEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Endpoint>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Endpoint>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.UpdateEndpoint.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes an Endpoint.
    public func deleteEndpoint<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteEndpointRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.DeleteEndpoint.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deploys a Model into this Endpoint, creating a DeployedModel within it.
    public func deployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeployModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeployModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.DeployModel.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Undeploys a Model from an Endpoint, removing a DeployedModel from it, and
    /// freeing all resources it's using.
    public func undeployModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UndeployModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UndeployModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.UndeployModel.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates an existing deployed model. Updatable fields include
    /// `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`,
    /// `disable_container_logging` (v1 only), and `enable_container_logging`
    /// (v1beta1 only).
    public func mutateDeployedModel<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_MutateDeployedModelRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_EndpointService.Method.MutateDeployedModel.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}