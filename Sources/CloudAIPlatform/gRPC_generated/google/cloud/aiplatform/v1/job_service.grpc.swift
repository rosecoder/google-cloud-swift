// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/job_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf
import SwiftProtobuf

public enum Google_Cloud_Aiplatform_V1_JobService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_JobService
    public enum Method {
        public enum CreateCustomJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateCustomJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_CustomJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateCustomJob"
            )
        }
        public enum GetCustomJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetCustomJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_CustomJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetCustomJob"
            )
        }
        public enum ListCustomJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListCustomJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListCustomJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListCustomJobs"
            )
        }
        public enum DeleteCustomJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteCustomJob"
            )
        }
        public enum CancelCustomJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelCustomJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CancelCustomJob"
            )
        }
        public enum CreateDataLabelingJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DataLabelingJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateDataLabelingJob"
            )
        }
        public enum GetDataLabelingJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DataLabelingJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetDataLabelingJob"
            )
        }
        public enum ListDataLabelingJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListDataLabelingJobs"
            )
        }
        public enum DeleteDataLabelingJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteDataLabelingJob"
            )
        }
        public enum CancelDataLabelingJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CancelDataLabelingJob"
            )
        }
        public enum CreateHyperparameterTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_HyperparameterTuningJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateHyperparameterTuningJob"
            )
        }
        public enum GetHyperparameterTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_HyperparameterTuningJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetHyperparameterTuningJob"
            )
        }
        public enum ListHyperparameterTuningJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListHyperparameterTuningJobs"
            )
        }
        public enum DeleteHyperparameterTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteHyperparameterTuningJob"
            )
        }
        public enum CancelHyperparameterTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CancelHyperparameterTuningJob"
            )
        }
        public enum CreateNasJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateNasJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NasJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateNasJob"
            )
        }
        public enum GetNasJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetNasJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NasJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetNasJob"
            )
        }
        public enum ListNasJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListNasJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListNasJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListNasJobs"
            )
        }
        public enum DeleteNasJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteNasJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteNasJob"
            )
        }
        public enum CancelNasJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelNasJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CancelNasJob"
            )
        }
        public enum GetNasTrialDetail {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_NasTrialDetail
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetNasTrialDetail"
            )
        }
        public enum ListNasTrialDetails {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListNasTrialDetails"
            )
        }
        public enum CreateBatchPredictionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_BatchPredictionJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateBatchPredictionJob"
            )
        }
        public enum GetBatchPredictionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_BatchPredictionJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetBatchPredictionJob"
            )
        }
        public enum ListBatchPredictionJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListBatchPredictionJobs"
            )
        }
        public enum DeleteBatchPredictionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteBatchPredictionJob"
            )
        }
        public enum CancelBatchPredictionJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CancelBatchPredictionJob"
            )
        }
        public enum CreateModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "CreateModelDeploymentMonitoringJob"
            )
        }
        public enum SearchModelDeploymentMonitoringStatsAnomalies {
            public typealias Input = Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "SearchModelDeploymentMonitoringStatsAnomalies"
            )
        }
        public enum GetModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "GetModelDeploymentMonitoringJob"
            )
        }
        public enum ListModelDeploymentMonitoringJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ListModelDeploymentMonitoringJobs"
            )
        }
        public enum UpdateModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "UpdateModelDeploymentMonitoringJob"
            )
        }
        public enum DeleteModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "DeleteModelDeploymentMonitoringJob"
            )
        }
        public enum PauseModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "PauseModelDeploymentMonitoringJob"
            )
        }
        public enum ResumeModelDeploymentMonitoringJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_JobService.descriptor.fullyQualifiedService,
                method: "ResumeModelDeploymentMonitoringJob"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateCustomJob.descriptor,
            GetCustomJob.descriptor,
            ListCustomJobs.descriptor,
            DeleteCustomJob.descriptor,
            CancelCustomJob.descriptor,
            CreateDataLabelingJob.descriptor,
            GetDataLabelingJob.descriptor,
            ListDataLabelingJobs.descriptor,
            DeleteDataLabelingJob.descriptor,
            CancelDataLabelingJob.descriptor,
            CreateHyperparameterTuningJob.descriptor,
            GetHyperparameterTuningJob.descriptor,
            ListHyperparameterTuningJobs.descriptor,
            DeleteHyperparameterTuningJob.descriptor,
            CancelHyperparameterTuningJob.descriptor,
            CreateNasJob.descriptor,
            GetNasJob.descriptor,
            ListNasJobs.descriptor,
            DeleteNasJob.descriptor,
            CancelNasJob.descriptor,
            GetNasTrialDetail.descriptor,
            ListNasTrialDetails.descriptor,
            CreateBatchPredictionJob.descriptor,
            GetBatchPredictionJob.descriptor,
            ListBatchPredictionJobs.descriptor,
            DeleteBatchPredictionJob.descriptor,
            CancelBatchPredictionJob.descriptor,
            CreateModelDeploymentMonitoringJob.descriptor,
            SearchModelDeploymentMonitoringStatsAnomalies.descriptor,
            GetModelDeploymentMonitoringJob.descriptor,
            ListModelDeploymentMonitoringJobs.descriptor,
            UpdateModelDeploymentMonitoringJob.descriptor,
            DeleteModelDeploymentMonitoringJob.descriptor,
            PauseModelDeploymentMonitoringJob.descriptor,
            ResumeModelDeploymentMonitoringJob.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_JobService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_JobService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_JobService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "JobService"
    )
}

/// A service for creating and managing Vertex AI's jobs.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_JobService_ClientProtocol: Sendable {
    /// Creates a CustomJob. A created CustomJob right away
    /// will be attempted to be run.
    func createCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a CustomJob.
    func getCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists CustomJobs in a Location.
    func listCustomJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a CustomJob.
    func deleteCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a CustomJob.
    /// Starts asynchronous cancellation on the CustomJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetCustomJob][google.cloud.aiplatform.v1.JobService.GetCustomJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the CustomJob is not deleted; instead it becomes a job with
    /// a [CustomJob.error][google.cloud.aiplatform.v1.CustomJob.error] value with
    /// a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [CustomJob.state][google.cloud.aiplatform.v1.CustomJob.state] is set to
    /// `CANCELLED`.
    func cancelCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a DataLabelingJob.
    func createDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a DataLabelingJob.
    func getDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists DataLabelingJobs in a Location.
    func listDataLabelingJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a DataLabelingJob.
    func deleteDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
    func cancelDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a HyperparameterTuningJob
    func createHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a HyperparameterTuningJob
    func getHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists HyperparameterTuningJobs in a Location.
    func listHyperparameterTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a HyperparameterTuningJob.
    func deleteHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a HyperparameterTuningJob.
    /// Starts asynchronous cancellation on the HyperparameterTuningJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetHyperparameterTuningJob][google.cloud.aiplatform.v1.JobService.GetHyperparameterTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the HyperparameterTuningJob is not deleted; instead it becomes a job with
    /// a
    /// [HyperparameterTuningJob.error][google.cloud.aiplatform.v1.HyperparameterTuningJob.error]
    /// value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`, and
    /// [HyperparameterTuningJob.state][google.cloud.aiplatform.v1.HyperparameterTuningJob.state]
    /// is set to `CANCELLED`.
    func cancelHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a NasJob
    func createNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a NasJob
    func getNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists NasJobs in a Location.
    func listNasJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a NasJob.
    func deleteNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a NasJob.
    /// Starts asynchronous cancellation on the NasJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetNasJob][google.cloud.aiplatform.v1.JobService.GetNasJob] or
    /// other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the NasJob is not deleted; instead it becomes a job with
    /// a [NasJob.error][google.cloud.aiplatform.v1.NasJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [NasJob.state][google.cloud.aiplatform.v1.NasJob.state] is set to
    /// `CANCELLED`.
    func cancelNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a NasTrialDetail.
    func getNasTrialDetail<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasTrialDetail>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasTrialDetail>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// List top NasTrialDetails of a NasJob.
    func listNasTrialDetails<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a BatchPredictionJob. A BatchPredictionJob once created will
    /// right away be attempted to start.
    func createBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a BatchPredictionJob
    func getBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists BatchPredictionJobs in a Location.
    func listBatchPredictionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a BatchPredictionJob. Can only be called on jobs that already
    /// finished.
    func deleteBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a BatchPredictionJob.
    ///
    /// Starts asynchronous cancellation on the BatchPredictionJob. The server
    /// makes the best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetBatchPredictionJob][google.cloud.aiplatform.v1.JobService.GetBatchPredictionJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On a successful cancellation,
    /// the BatchPredictionJob is not deleted;instead its
    /// [BatchPredictionJob.state][google.cloud.aiplatform.v1.BatchPredictionJob.state]
    /// is set to `CANCELLED`. Any files already outputted by the job are not
    /// deleted.
    func cancelBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a ModelDeploymentMonitoringJob. It will run periodically on a
    /// configured interval.
    func createModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Searches Model Monitoring Statistics generated within a given time window.
    func searchModelDeploymentMonitoringStatsAnomalies<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a ModelDeploymentMonitoringJob.
    func getModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists ModelDeploymentMonitoringJobs in a Location.
    func listModelDeploymentMonitoringJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a ModelDeploymentMonitoringJob.
    func updateModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a ModelDeploymentMonitoringJob.
    func deleteModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
    /// makes a best effort to cancel the job. Will mark
    /// [ModelDeploymentMonitoringJob.state][google.cloud.aiplatform.v1.ModelDeploymentMonitoringJob.state]
    /// to 'PAUSED'.
    func pauseModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
    /// next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
    /// resumed.
    func resumeModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_JobService.ClientProtocol {
    public func createCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createCustomJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>(),
            options: options,
            body
        )
    }
    
    public func getCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getCustomJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>(),
            options: options,
            body
        )
    }
    
    public func listCustomJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listCustomJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteCustomJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func cancelCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelCustomJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func createDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createDataLabelingJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>(),
            options: options,
            body
        )
    }
    
    public func getDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getDataLabelingJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>(),
            options: options,
            body
        )
    }
    
    public func listDataLabelingJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listDataLabelingJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteDataLabelingJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func cancelDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelDataLabelingJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func createHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createHyperparameterTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>(),
            options: options,
            body
        )
    }
    
    public func getHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getHyperparameterTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>(),
            options: options,
            body
        )
    }
    
    public func listHyperparameterTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listHyperparameterTuningJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteHyperparameterTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func cancelHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelHyperparameterTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func createNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createNasJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NasJob>(),
            options: options,
            body
        )
    }
    
    public func getNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getNasJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetNasJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NasJob>(),
            options: options,
            body
        )
    }
    
    public func listNasJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listNasJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteNasJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func cancelNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelNasJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func getNasTrialDetail<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasTrialDetail>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getNasTrialDetail(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_NasTrialDetail>(),
            options: options,
            body
        )
    }
    
    public func listNasTrialDetails<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listNasTrialDetails(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>(),
            options: options,
            body
        )
    }
    
    public func createBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createBatchPredictionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>(),
            options: options,
            body
        )
    }
    
    public func getBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getBatchPredictionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>(),
            options: options,
            body
        )
    }
    
    public func listBatchPredictionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listBatchPredictionJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteBatchPredictionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func cancelBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelBatchPredictionJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func createModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>(),
            options: options,
            body
        )
    }
    
    public func searchModelDeploymentMonitoringStatsAnomalies<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.searchModelDeploymentMonitoringStatsAnomalies(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>(),
            options: options,
            body
        )
    }
    
    public func getModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>(),
            options: options,
            body
        )
    }
    
    public func listModelDeploymentMonitoringJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listModelDeploymentMonitoringJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func deleteModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func pauseModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.pauseModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
    
    public func resumeModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.resumeModelDeploymentMonitoringJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_JobService.ClientProtocol {
    /// Creates a CustomJob. A created CustomJob right away
    /// will be attempted to be run.
    public func createCustomJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateCustomJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createCustomJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a CustomJob.
    public func getCustomJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetCustomJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getCustomJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists CustomJobs in a Location.
    public func listCustomJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListCustomJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listCustomJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a CustomJob.
    public func deleteCustomJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteCustomJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a CustomJob.
    /// Starts asynchronous cancellation on the CustomJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetCustomJob][google.cloud.aiplatform.v1.JobService.GetCustomJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the CustomJob is not deleted; instead it becomes a job with
    /// a [CustomJob.error][google.cloud.aiplatform.v1.CustomJob.error] value with
    /// a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [CustomJob.state][google.cloud.aiplatform.v1.CustomJob.state] is set to
    /// `CANCELLED`.
    public func cancelCustomJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelCustomJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelCustomJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a DataLabelingJob.
    public func createDataLabelingJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createDataLabelingJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a DataLabelingJob.
    public func getDataLabelingJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getDataLabelingJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists DataLabelingJobs in a Location.
    public func listDataLabelingJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listDataLabelingJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a DataLabelingJob.
    public func deleteDataLabelingJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteDataLabelingJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
    public func cancelDataLabelingJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelDataLabelingJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a HyperparameterTuningJob
    public func createHyperparameterTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createHyperparameterTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a HyperparameterTuningJob
    public func getHyperparameterTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getHyperparameterTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists HyperparameterTuningJobs in a Location.
    public func listHyperparameterTuningJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listHyperparameterTuningJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a HyperparameterTuningJob.
    public func deleteHyperparameterTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteHyperparameterTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a HyperparameterTuningJob.
    /// Starts asynchronous cancellation on the HyperparameterTuningJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetHyperparameterTuningJob][google.cloud.aiplatform.v1.JobService.GetHyperparameterTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the HyperparameterTuningJob is not deleted; instead it becomes a job with
    /// a
    /// [HyperparameterTuningJob.error][google.cloud.aiplatform.v1.HyperparameterTuningJob.error]
    /// value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`, and
    /// [HyperparameterTuningJob.state][google.cloud.aiplatform.v1.HyperparameterTuningJob.state]
    /// is set to `CANCELLED`.
    public func cancelHyperparameterTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelHyperparameterTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a NasJob
    public func createNasJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateNasJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createNasJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a NasJob
    public func getNasJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetNasJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getNasJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists NasJobs in a Location.
    public func listNasJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListNasJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listNasJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a NasJob.
    public func deleteNasJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteNasJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteNasJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a NasJob.
    /// Starts asynchronous cancellation on the NasJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetNasJob][google.cloud.aiplatform.v1.JobService.GetNasJob] or
    /// other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the NasJob is not deleted; instead it becomes a job with
    /// a [NasJob.error][google.cloud.aiplatform.v1.NasJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [NasJob.state][google.cloud.aiplatform.v1.NasJob.state] is set to
    /// `CANCELLED`.
    public func cancelNasJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelNasJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelNasJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a NasTrialDetail.
    public func getNasTrialDetail<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasTrialDetail>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getNasTrialDetail(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// List top NasTrialDetails of a NasJob.
    public func listNasTrialDetails<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listNasTrialDetails(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a BatchPredictionJob. A BatchPredictionJob once created will
    /// right away be attempted to start.
    public func createBatchPredictionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createBatchPredictionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a BatchPredictionJob
    public func getBatchPredictionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getBatchPredictionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists BatchPredictionJobs in a Location.
    public func listBatchPredictionJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listBatchPredictionJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a BatchPredictionJob. Can only be called on jobs that already
    /// finished.
    public func deleteBatchPredictionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteBatchPredictionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a BatchPredictionJob.
    ///
    /// Starts asynchronous cancellation on the BatchPredictionJob. The server
    /// makes the best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetBatchPredictionJob][google.cloud.aiplatform.v1.JobService.GetBatchPredictionJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On a successful cancellation,
    /// the BatchPredictionJob is not deleted;instead its
    /// [BatchPredictionJob.state][google.cloud.aiplatform.v1.BatchPredictionJob.state]
    /// is set to `CANCELLED`. Any files already outputted by the job are not
    /// deleted.
    public func cancelBatchPredictionJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelBatchPredictionJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a ModelDeploymentMonitoringJob. It will run periodically on a
    /// configured interval.
    public func createModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Searches Model Monitoring Statistics generated within a given time window.
    public func searchModelDeploymentMonitoringStatsAnomalies<Result>(
        _ message: Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.searchModelDeploymentMonitoringStatsAnomalies(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a ModelDeploymentMonitoringJob.
    public func getModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists ModelDeploymentMonitoringJobs in a Location.
    public func listModelDeploymentMonitoringJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listModelDeploymentMonitoringJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a ModelDeploymentMonitoringJob.
    public func updateModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a ModelDeploymentMonitoringJob.
    public func deleteModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
    /// makes a best effort to cancel the job. Will mark
    /// [ModelDeploymentMonitoringJob.state][google.cloud.aiplatform.v1.ModelDeploymentMonitoringJob.state]
    /// to 'PAUSED'.
    public func pauseModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.pauseModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
    /// next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
    /// resumed.
    public func resumeModelDeploymentMonitoringJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.resumeModelDeploymentMonitoringJob(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// A service for creating and managing Vertex AI's jobs.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_JobService_Client: Google_Cloud_Aiplatform_V1_JobService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates a CustomJob. A created CustomJob right away
    /// will be attempted to be run.
    public func createCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateCustomJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a CustomJob.
    public func getCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_CustomJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_CustomJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetCustomJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists CustomJobs in a Location.
    public func listCustomJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListCustomJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListCustomJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListCustomJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a CustomJob.
    public func deleteCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteCustomJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a CustomJob.
    /// Starts asynchronous cancellation on the CustomJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetCustomJob][google.cloud.aiplatform.v1.JobService.GetCustomJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the CustomJob is not deleted; instead it becomes a job with
    /// a [CustomJob.error][google.cloud.aiplatform.v1.CustomJob.error] value with
    /// a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [CustomJob.state][google.cloud.aiplatform.v1.CustomJob.state] is set to
    /// `CANCELLED`.
    public func cancelCustomJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelCustomJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CancelCustomJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a DataLabelingJob.
    public func createDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateDataLabelingJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a DataLabelingJob.
    public func getDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DataLabelingJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DataLabelingJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetDataLabelingJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists DataLabelingJobs in a Location.
    public func listDataLabelingJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataLabelingJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListDataLabelingJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a DataLabelingJob.
    public func deleteDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteDataLabelingJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a DataLabelingJob. Success of cancellation is not guaranteed.
    public func cancelDataLabelingJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelDataLabelingJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CancelDataLabelingJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a HyperparameterTuningJob
    public func createHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateHyperparameterTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a HyperparameterTuningJob
    public func getHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_HyperparameterTuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetHyperparameterTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists HyperparameterTuningJobs in a Location.
    public func listHyperparameterTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListHyperparameterTuningJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListHyperparameterTuningJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a HyperparameterTuningJob.
    public func deleteHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteHyperparameterTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a HyperparameterTuningJob.
    /// Starts asynchronous cancellation on the HyperparameterTuningJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetHyperparameterTuningJob][google.cloud.aiplatform.v1.JobService.GetHyperparameterTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the HyperparameterTuningJob is not deleted; instead it becomes a job with
    /// a
    /// [HyperparameterTuningJob.error][google.cloud.aiplatform.v1.HyperparameterTuningJob.error]
    /// value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`, and
    /// [HyperparameterTuningJob.state][google.cloud.aiplatform.v1.HyperparameterTuningJob.state]
    /// is set to `CANCELLED`.
    public func cancelHyperparameterTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelHyperparameterTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CancelHyperparameterTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a NasJob
    public func createNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateNasJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a NasJob
    public func getNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetNasJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists NasJobs in a Location.
    public func listNasJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNasJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListNasJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a NasJob.
    public func deleteNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteNasJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a NasJob.
    /// Starts asynchronous cancellation on the NasJob. The server
    /// makes a best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetNasJob][google.cloud.aiplatform.v1.JobService.GetNasJob] or
    /// other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation,
    /// the NasJob is not deleted; instead it becomes a job with
    /// a [NasJob.error][google.cloud.aiplatform.v1.NasJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [NasJob.state][google.cloud.aiplatform.v1.NasJob.state] is set to
    /// `CANCELLED`.
    public func cancelNasJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelNasJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CancelNasJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a NasTrialDetail.
    public func getNasTrialDetail<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetNasTrialDetailRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_NasTrialDetail>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_NasTrialDetail>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetNasTrialDetail.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// List top NasTrialDetails of a NasJob.
    public func listNasTrialDetails<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListNasTrialDetailsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListNasTrialDetails.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a BatchPredictionJob. A BatchPredictionJob once created will
    /// right away be attempted to start.
    public func createBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateBatchPredictionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a BatchPredictionJob
    public func getBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_BatchPredictionJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_BatchPredictionJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetBatchPredictionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists BatchPredictionJobs in a Location.
    public func listBatchPredictionJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListBatchPredictionJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListBatchPredictionJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a BatchPredictionJob. Can only be called on jobs that already
    /// finished.
    public func deleteBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteBatchPredictionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a BatchPredictionJob.
    ///
    /// Starts asynchronous cancellation on the BatchPredictionJob. The server
    /// makes the best effort to cancel the job, but success is not
    /// guaranteed. Clients can use
    /// [JobService.GetBatchPredictionJob][google.cloud.aiplatform.v1.JobService.GetBatchPredictionJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On a successful cancellation,
    /// the BatchPredictionJob is not deleted;instead its
    /// [BatchPredictionJob.state][google.cloud.aiplatform.v1.BatchPredictionJob.state]
    /// is set to `CANCELLED`. Any files already outputted by the job are not
    /// deleted.
    public func cancelBatchPredictionJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelBatchPredictionJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CancelBatchPredictionJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a ModelDeploymentMonitoringJob. It will run periodically on a
    /// configured interval.
    public func createModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.CreateModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Searches Model Monitoring Statistics generated within a given time window.
    public func searchModelDeploymentMonitoringStatsAnomalies<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchModelDeploymentMonitoringStatsAnomaliesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.SearchModelDeploymentMonitoringStatsAnomalies.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a ModelDeploymentMonitoringJob.
    public func getModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ModelDeploymentMonitoringJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.GetModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists ModelDeploymentMonitoringJobs in a Location.
    public func listModelDeploymentMonitoringJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListModelDeploymentMonitoringJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ListModelDeploymentMonitoringJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a ModelDeploymentMonitoringJob.
    public func updateModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.UpdateModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a ModelDeploymentMonitoringJob.
    public func deleteModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.DeleteModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Pauses a ModelDeploymentMonitoringJob. If the job is running, the server
    /// makes a best effort to cancel the job. Will mark
    /// [ModelDeploymentMonitoringJob.state][google.cloud.aiplatform.v1.ModelDeploymentMonitoringJob.state]
    /// to 'PAUSED'.
    public func pauseModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PauseModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.PauseModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Resumes a paused ModelDeploymentMonitoringJob. It will start to run from
    /// next scheduled time. A deleted ModelDeploymentMonitoringJob can't be
    /// resumed.
    public func resumeModelDeploymentMonitoringJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ResumeModelDeploymentMonitoringJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_JobService.Method.ResumeModelDeploymentMonitoringJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}
