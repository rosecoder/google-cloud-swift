// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/prediction_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_PredictionService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_PredictionService
    public enum Method {
        public enum Predict {
            public typealias Input = Google_Cloud_Aiplatform_V1_PredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_PredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "Predict"
            )
        }
        public enum RawPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_RawPredictRequest
            public typealias Output = Google_Api_HttpBody
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "RawPredict"
            )
        }
        public enum StreamRawPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamRawPredictRequest
            public typealias Output = Google_Api_HttpBody
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamRawPredict"
            )
        }
        public enum DirectPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_DirectPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DirectPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "DirectPredict"
            )
        }
        public enum DirectRawPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_DirectRawPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DirectRawPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "DirectRawPredict"
            )
        }
        public enum StreamDirectPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamDirectPredict"
            )
        }
        public enum StreamDirectRawPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamDirectRawPredict"
            )
        }
        public enum StreamingPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamingPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_StreamingPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamingPredict"
            )
        }
        public enum ServerStreamingPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamingPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_StreamingPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "ServerStreamingPredict"
            )
        }
        public enum StreamingRawPredict {
            public typealias Input = Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamingRawPredict"
            )
        }
        public enum Explain {
            public typealias Input = Google_Cloud_Aiplatform_V1_ExplainRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ExplainResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "Explain"
            )
        }
        public enum GenerateContent {
            public typealias Input = Google_Cloud_Aiplatform_V1_GenerateContentRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_GenerateContentResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "GenerateContent"
            )
        }
        public enum StreamGenerateContent {
            public typealias Input = Google_Cloud_Aiplatform_V1_GenerateContentRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_GenerateContentResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_PredictionService.descriptor.fullyQualifiedService,
                method: "StreamGenerateContent"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            Predict.descriptor,
            RawPredict.descriptor,
            StreamRawPredict.descriptor,
            DirectPredict.descriptor,
            DirectRawPredict.descriptor,
            StreamDirectPredict.descriptor,
            StreamDirectRawPredict.descriptor,
            StreamingPredict.descriptor,
            ServerStreamingPredict.descriptor,
            StreamingRawPredict.descriptor,
            Explain.descriptor,
            GenerateContent.descriptor,
            StreamGenerateContent.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_PredictionService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_PredictionService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_PredictionService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "PredictionService"
    )
}

/// A service for online predictions and explanations.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_PredictionService_ClientProtocol: Sendable {
    /// Perform an online prediction.
    func predict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_PredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_PredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform an online prediction with an arbitrary HTTP payload.
    ///
    /// The response includes the following HTTP headers:
    ///
    /// * `X-Vertex-AI-Endpoint-Id`: ID of the
    /// [Endpoint][google.cloud.aiplatform.v1.Endpoint] that served this
    /// prediction.
    ///
    /// * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's
    /// [DeployedModel][google.cloud.aiplatform.v1.DeployedModel] that served this
    /// prediction.
    func rawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Api_HttpBody>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Api_HttpBody>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a streaming online prediction with an arbitrary HTTP payload.
    func streamRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Api_HttpBody>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Api_HttpBody>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    func directPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DirectPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DirectPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// custom containers.
    func directRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    func streamDirectPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// custom containers.
    func streamDirectRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a streaming online prediction request for Vertex first-party
    /// products and frameworks.
    func streamingPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a server-side streaming online prediction request for Vertex
    /// LLM streaming.
    func serverStreamingPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform a streaming online prediction request through gRPC.
    func streamingRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Perform an online explanation.
    ///
    /// If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is specified, the corresponding DeployModel must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated. If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is not specified, all DeployedModels must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated.
    func explain<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExplainRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ExplainRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ExplainResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ExplainResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Generate content with multimodal inputs.
    func generateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Generate content with multimodal inputs with streaming support.
    func streamGenerateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_PredictionService.ClientProtocol {
    public func predict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_PredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.predict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_PredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_PredictResponse>(),
            options: options,
            body
        )
    }
    
    public func rawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RawPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Api_HttpBody>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.rawPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_RawPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Api_HttpBody>(),
            options: options,
            body
        )
    }
    
    public func streamRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Api_HttpBody>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamRawPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Api_HttpBody>(),
            options: options,
            body
        )
    }
    
    public func directPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectPredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.directPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DirectPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DirectPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func directRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.directRawPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func streamDirectPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamDirectPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func streamDirectRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamDirectRawPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func streamingPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamingPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func serverStreamingPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.serverStreamingPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func streamingRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamingRawPredict(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>(),
            options: options,
            body
        )
    }
    
    public func explain<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExplainRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ExplainResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.explain(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ExplainRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ExplainResponse>(),
            options: options,
            body
        )
    }
    
    public func generateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.generateContent(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>(),
            options: options,
            body
        )
    }
    
    public func streamGenerateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.streamGenerateContent(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_PredictionService.ClientProtocol {
    /// Perform an online prediction.
    public func predict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_PredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_PredictResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.predict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform an online prediction with an arbitrary HTTP payload.
    ///
    /// The response includes the following HTTP headers:
    ///
    /// * `X-Vertex-AI-Endpoint-Id`: ID of the
    /// [Endpoint][google.cloud.aiplatform.v1.Endpoint] that served this
    /// prediction.
    ///
    /// * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's
    /// [DeployedModel][google.cloud.aiplatform.v1.DeployedModel] that served this
    /// prediction.
    public func rawPredict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_RawPredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Api_HttpBody>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RawPredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.rawPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a streaming online prediction with an arbitrary HTTP payload.
    public func streamRawPredict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_StreamRawPredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Api_HttpBody>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.streamRawPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    public func directPredict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DirectPredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectPredictResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectPredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.directPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// custom containers.
    public func directRawPredict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DirectRawPredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.directRawPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    public func streamDirectPredict<Result>(
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        requestProducer: @Sendable @escaping (GRPCCore.RPCWriter<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>) async throws -> Void,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>(
            metadata: metadata,
            producer: requestProducer
        )
        return try await self.streamDirectPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// custom containers.
    public func streamDirectRawPredict<Result>(
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        requestProducer: @Sendable @escaping (GRPCCore.RPCWriter<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>) async throws -> Void,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>(
            metadata: metadata,
            producer: requestProducer
        )
        return try await self.streamDirectRawPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a streaming online prediction request for Vertex first-party
    /// products and frameworks.
    public func streamingPredict<Result>(
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        requestProducer: @Sendable @escaping (GRPCCore.RPCWriter<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>) async throws -> Void,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>(
            metadata: metadata,
            producer: requestProducer
        )
        return try await self.streamingPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a server-side streaming online prediction request for Vertex
    /// LLM streaming.
    public func serverStreamingPredict<Result>(
        _ message: Google_Cloud_Aiplatform_V1_StreamingPredictRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.serverStreamingPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform a streaming online prediction request through gRPC.
    public func streamingRawPredict<Result>(
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        requestProducer: @Sendable @escaping (GRPCCore.RPCWriter<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>) async throws -> Void,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>(
            metadata: metadata,
            producer: requestProducer
        )
        return try await self.streamingRawPredict(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Perform an online explanation.
    ///
    /// If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is specified, the corresponding DeployModel must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated. If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is not specified, all DeployedModels must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated.
    public func explain<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ExplainRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ExplainResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExplainRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.explain(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Generate content with multimodal inputs.
    public func generateContent<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GenerateContentRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.generateContent(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Generate content with multimodal inputs with streaming support.
    public func streamGenerateContent<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GenerateContentRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> Result
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.streamGenerateContent(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// A service for online predictions and explanations.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_PredictionService_Client: Google_Cloud_Aiplatform_V1_PredictionService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Perform an online prediction.
    public func predict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_PredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_PredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_PredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_PredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.Predict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform an online prediction with an arbitrary HTTP payload.
    ///
    /// The response includes the following HTTP headers:
    ///
    /// * `X-Vertex-AI-Endpoint-Id`: ID of the
    /// [Endpoint][google.cloud.aiplatform.v1.Endpoint] that served this
    /// prediction.
    ///
    /// * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's
    /// [DeployedModel][google.cloud.aiplatform.v1.DeployedModel] that served this
    /// prediction.
    public func rawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Api_HttpBody>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Api_HttpBody>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.RawPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a streaming online prediction with an arbitrary HTTP payload.
    public func streamRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Api_HttpBody>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Api_HttpBody>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.serverStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamRawPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    public func directPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DirectPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DirectPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectPredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.DirectPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform an unary online prediction request to a gRPC model server for
    /// custom containers.
    public func directRawPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DirectRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DirectRawPredictResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.DirectRawPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// Vertex first-party products and frameworks.
    public func streamDirectPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.bidirectionalStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamDirectPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a streaming online prediction request to a gRPC model server for
    /// custom containers.
    public func streamDirectRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamDirectRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.bidirectionalStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamDirectRawPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a streaming online prediction request for Vertex first-party
    /// products and frameworks.
    public func streamingPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.bidirectionalStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamingPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a server-side streaming online prediction request for Vertex
    /// LLM streaming.
    public func serverStreamingPredict<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.serverStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.ServerStreamingPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform a streaming online prediction request through gRPC.
    public func streamingRawPredict<R>(
        request: GRPCCore.StreamingClientRequest<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_StreamingRawPredictResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.bidirectionalStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamingRawPredict.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Perform an online explanation.
    ///
    /// If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is specified, the corresponding DeployModel must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated. If
    /// [deployed_model_id][google.cloud.aiplatform.v1.ExplainRequest.deployed_model_id]
    /// is not specified, all DeployedModels must have
    /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
    /// populated.
    public func explain<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExplainRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ExplainRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ExplainResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ExplainResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.Explain.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Generate content with multimodal inputs.
    public func generateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.GenerateContent.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Generate content with multimodal inputs with streaming support.
    public func streamGenerateContent<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GenerateContentRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_GenerateContentResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.StreamingClientResponse<Google_Cloud_Aiplatform_V1_GenerateContentResponse>) async throws -> R
    ) async throws -> R where R: Sendable {
        try await self.client.serverStreaming(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_PredictionService.Method.StreamGenerateContent.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}