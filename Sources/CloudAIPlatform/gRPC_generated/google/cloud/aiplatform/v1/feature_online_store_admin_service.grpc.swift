// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/feature_online_store_admin_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_FeatureOnlineStoreAdminService
    public enum Method {
        public enum CreateFeatureOnlineStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "CreateFeatureOnlineStore"
            )
        }
        public enum GetFeatureOnlineStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_FeatureOnlineStore
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "GetFeatureOnlineStore"
            )
        }
        public enum ListFeatureOnlineStores {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "ListFeatureOnlineStores"
            )
        }
        public enum UpdateFeatureOnlineStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "UpdateFeatureOnlineStore"
            )
        }
        public enum DeleteFeatureOnlineStore {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "DeleteFeatureOnlineStore"
            )
        }
        public enum CreateFeatureView {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "CreateFeatureView"
            )
        }
        public enum GetFeatureView {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetFeatureViewRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_FeatureView
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "GetFeatureView"
            )
        }
        public enum ListFeatureViews {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "ListFeatureViews"
            )
        }
        public enum UpdateFeatureView {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "UpdateFeatureView"
            )
        }
        public enum DeleteFeatureView {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "DeleteFeatureView"
            )
        }
        public enum SyncFeatureView {
            public typealias Input = Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "SyncFeatureView"
            )
        }
        public enum GetFeatureViewSync {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_FeatureViewSync
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "GetFeatureViewSync"
            )
        }
        public enum ListFeatureViewSyncs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.descriptor.fullyQualifiedService,
                method: "ListFeatureViewSyncs"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateFeatureOnlineStore.descriptor,
            GetFeatureOnlineStore.descriptor,
            ListFeatureOnlineStores.descriptor,
            UpdateFeatureOnlineStore.descriptor,
            DeleteFeatureOnlineStore.descriptor,
            CreateFeatureView.descriptor,
            GetFeatureView.descriptor,
            ListFeatureViews.descriptor,
            UpdateFeatureView.descriptor,
            DeleteFeatureView.descriptor,
            SyncFeatureView.descriptor,
            GetFeatureViewSync.descriptor,
            ListFeatureViewSyncs.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_FeatureOnlineStoreAdminService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "FeatureOnlineStoreAdminService"
    )
}

/// The service that handles CRUD and List for resources for
/// FeatureOnlineStore.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService_ClientProtocol: Sendable {
    /// Creates a new FeatureOnlineStore in a given project and location.
    func createFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets details of a single FeatureOnlineStore.
    func getFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists FeatureOnlineStores in a given project and location.
    func listFeatureOnlineStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates the parameters of a single FeatureOnlineStore.
    func updateFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not
    /// contain any FeatureViews.
    func deleteFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Creates a new FeatureView in a given FeatureOnlineStore.
    func createFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets details of a single FeatureView.
    func getFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureView>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureView>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists FeatureViews in a given FeatureOnlineStore.
    func listFeatureViews<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates the parameters of a single FeatureView.
    func updateFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a single FeatureView.
    func deleteFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Triggers on-demand sync for the FeatureView.
    func syncFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets details of a single FeatureViewSync.
    func getFeatureViewSync<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureViewSync>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureViewSync>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists FeatureViewSyncs in a given FeatureView.
    func listFeatureViewSyncs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.ClientProtocol {
    public func createFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createFeatureOnlineStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getFeatureOnlineStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>(),
            options: options,
            body
        )
    }
    
    public func listFeatureOnlineStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listFeatureOnlineStores(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>(),
            options: options,
            body
        )
    }
    
    public func updateFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateFeatureOnlineStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func deleteFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteFeatureOnlineStore(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func createFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createFeatureView(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureView>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getFeatureView(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_FeatureView>(),
            options: options,
            body
        )
    }
    
    public func listFeatureViews<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listFeatureViews(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>(),
            options: options,
            body
        )
    }
    
    public func updateFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateFeatureView(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func deleteFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteFeatureView(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func syncFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.syncFeatureView(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>(),
            options: options,
            body
        )
    }
    
    public func getFeatureViewSync<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureViewSync>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getFeatureViewSync(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_FeatureViewSync>(),
            options: options,
            body
        )
    }
    
    public func listFeatureViewSyncs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listFeatureViewSyncs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.ClientProtocol {
    /// Creates a new FeatureOnlineStore in a given project and location.
    public func createFeatureOnlineStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createFeatureOnlineStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets details of a single FeatureOnlineStore.
    public func getFeatureOnlineStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getFeatureOnlineStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists FeatureOnlineStores in a given project and location.
    public func listFeatureOnlineStores<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listFeatureOnlineStores(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates the parameters of a single FeatureOnlineStore.
    public func updateFeatureOnlineStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateFeatureOnlineStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not
    /// contain any FeatureViews.
    public func deleteFeatureOnlineStore<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteFeatureOnlineStore(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Creates a new FeatureView in a given FeatureOnlineStore.
    public func createFeatureView<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createFeatureView(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets details of a single FeatureView.
    public func getFeatureView<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetFeatureViewRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureView>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getFeatureView(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists FeatureViews in a given FeatureOnlineStore.
    public func listFeatureViews<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listFeatureViews(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates the parameters of a single FeatureView.
    public func updateFeatureView<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateFeatureView(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a single FeatureView.
    public func deleteFeatureView<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteFeatureView(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Triggers on-demand sync for the FeatureView.
    public func syncFeatureView<Result>(
        _ message: Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.syncFeatureView(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets details of a single FeatureViewSync.
    public func getFeatureViewSync<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureViewSync>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getFeatureViewSync(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists FeatureViewSyncs in a given FeatureView.
    public func listFeatureViewSyncs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listFeatureViewSyncs(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// The service that handles CRUD and List for resources for
/// FeatureOnlineStore.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService_Client: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates a new FeatureOnlineStore in a given project and location.
    public func createFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.CreateFeatureOnlineStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets details of a single FeatureOnlineStore.
    public func getFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureOnlineStore>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.GetFeatureOnlineStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists FeatureOnlineStores in a given project and location.
    public func listFeatureOnlineStores<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureOnlineStoresResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.ListFeatureOnlineStores.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates the parameters of a single FeatureOnlineStore.
    public func updateFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.UpdateFeatureOnlineStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a single FeatureOnlineStore. The FeatureOnlineStore must not
    /// contain any FeatureViews.
    public func deleteFeatureOnlineStore<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureOnlineStoreRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.DeleteFeatureOnlineStore.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Creates a new FeatureView in a given FeatureOnlineStore.
    public func createFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.CreateFeatureView.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets details of a single FeatureView.
    public func getFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureView>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureView>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.GetFeatureView.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists FeatureViews in a given FeatureOnlineStore.
    public func listFeatureViews<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.ListFeatureViews.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates the parameters of a single FeatureView.
    public func updateFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.UpdateFeatureView.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a single FeatureView.
    public func deleteFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.DeleteFeatureView.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Triggers on-demand sync for the FeatureView.
    public func syncFeatureView<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SyncFeatureViewResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.SyncFeatureView.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets details of a single FeatureViewSync.
    public func getFeatureViewSync<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetFeatureViewSyncRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_FeatureViewSync>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_FeatureViewSync>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.GetFeatureViewSync.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists FeatureViewSyncs in a given FeatureView.
    public func listFeatureViewSyncs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListFeatureViewSyncsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_FeatureOnlineStoreAdminService.Method.ListFeatureViewSyncs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}