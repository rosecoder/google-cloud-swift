// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/publisher_model.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// A Model Garden Publisher Model.
public struct Google_Cloud_Aiplatform_V1_PublisherModel: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the PublisherModel.
  public var name: String = String()

  /// Output only. Immutable. The version ID of the PublisherModel.
  /// A new version is committed when a new model version is uploaded under an
  /// existing model id. It is an auto-incrementing decimal number in string
  /// representation.
  public var versionID: String = String()

  /// Required. Indicates the open source category of the publisher model.
  public var openSourceCategory: Google_Cloud_Aiplatform_V1_PublisherModel.OpenSourceCategory = .unspecified

  /// Optional. Supported call-to-action options.
  public var supportedActions: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction {
    get {return _supportedActions ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction()}
    set {_supportedActions = newValue}
  }
  /// Returns true if `supportedActions` has been explicitly set.
  public var hasSupportedActions: Bool {return self._supportedActions != nil}
  /// Clears the value of `supportedActions`. Subsequent reads from it will return its default value.
  public mutating func clearSupportedActions() {self._supportedActions = nil}

  /// Optional. Additional information about the model's Frameworks.
  public var frameworks: [String] = []

  /// Optional. Indicates the launch stage of the model.
  public var launchStage: Google_Cloud_Aiplatform_V1_PublisherModel.LaunchStage = .unspecified

  /// Optional. Indicates the state of the model version.
  public var versionState: Google_Cloud_Aiplatform_V1_PublisherModel.VersionState = .unspecified

  /// Optional. Output only. Immutable. Used to indicate this model has a
  /// publisher model and provide the template of the publisher model resource
  /// name.
  public var publisherModelTemplate: String = String()

  /// Optional. The schemata that describes formats of the PublisherModel's
  /// predictions and explanations as given and returned via
  /// [PredictionService.Predict][google.cloud.aiplatform.v1.PredictionService.Predict].
  public var predictSchemata: Google_Cloud_Aiplatform_V1_PredictSchemata {
    get {return _predictSchemata ?? Google_Cloud_Aiplatform_V1_PredictSchemata()}
    set {_predictSchemata = newValue}
  }
  /// Returns true if `predictSchemata` has been explicitly set.
  public var hasPredictSchemata: Bool {return self._predictSchemata != nil}
  /// Clears the value of `predictSchemata`. Subsequent reads from it will return its default value.
  public mutating func clearPredictSchemata() {self._predictSchemata = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// An enum representing the open source category of a PublisherModel.
  public enum OpenSourceCategory: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int

    /// The open source category is unspecified, which should not be used.
    case unspecified // = 0

    /// Used to indicate the PublisherModel is not open sourced.
    case proprietary // = 1

    /// Used to indicate the PublisherModel is a Google-owned open source model
    /// w/ Google checkpoint.
    case googleOwnedOssWithGoogleCheckpoint // = 2

    /// Used to indicate the PublisherModel is a 3p-owned open source model w/
    /// Google checkpoint.
    case thirdPartyOwnedOssWithGoogleCheckpoint // = 3

    /// Used to indicate the PublisherModel is a Google-owned pure open source
    /// model.
    case googleOwnedOss // = 4

    /// Used to indicate the PublisherModel is a 3p-owned pure open source model.
    case thirdPartyOwnedOss // = 5
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .proprietary
      case 2: self = .googleOwnedOssWithGoogleCheckpoint
      case 3: self = .thirdPartyOwnedOssWithGoogleCheckpoint
      case 4: self = .googleOwnedOss
      case 5: self = .thirdPartyOwnedOss
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .proprietary: return 1
      case .googleOwnedOssWithGoogleCheckpoint: return 2
      case .thirdPartyOwnedOssWithGoogleCheckpoint: return 3
      case .googleOwnedOss: return 4
      case .thirdPartyOwnedOss: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Google_Cloud_Aiplatform_V1_PublisherModel.OpenSourceCategory] = [
      .unspecified,
      .proprietary,
      .googleOwnedOssWithGoogleCheckpoint,
      .thirdPartyOwnedOssWithGoogleCheckpoint,
      .googleOwnedOss,
      .thirdPartyOwnedOss,
    ]

  }

  /// An enum representing the launch stage of a PublisherModel.
  public enum LaunchStage: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int

    /// The model launch stage is unspecified.
    case unspecified // = 0

    /// Used to indicate the PublisherModel is at Experimental launch stage,
    /// available to a small set of customers.
    case experimental // = 1

    /// Used to indicate the PublisherModel is at Private Preview launch stage,
    /// only available to a small set of customers, although a larger set of
    /// customers than an Experimental launch. Previews are the first launch
    /// stage used to get feedback from customers.
    case privatePreview // = 2

    /// Used to indicate the PublisherModel is at Public Preview launch stage,
    /// available to all customers, although not supported for production
    /// workloads.
    case publicPreview // = 3

    /// Used to indicate the PublisherModel is at GA launch stage, available to
    /// all customers and ready for production workload.
    case ga // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .experimental
      case 2: self = .privatePreview
      case 3: self = .publicPreview
      case 4: self = .ga
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .experimental: return 1
      case .privatePreview: return 2
      case .publicPreview: return 3
      case .ga: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Google_Cloud_Aiplatform_V1_PublisherModel.LaunchStage] = [
      .unspecified,
      .experimental,
      .privatePreview,
      .publicPreview,
      .ga,
    ]

  }

  /// An enum representing the state of the PublicModelVersion.
  public enum VersionState: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int

    /// The version state is unspecified.
    case unspecified // = 0

    /// Used to indicate the version is stable.
    case stable // = 1

    /// Used to indicate the version is unstable.
    case unstable // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .stable
      case 2: self = .unstable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .stable: return 1
      case .unstable: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Google_Cloud_Aiplatform_V1_PublisherModel.VersionState] = [
      .unspecified,
      .stable,
      .unstable,
    ]

  }

  /// Reference to a resource.
  public struct ResourceReference: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var reference: Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference.OneOf_Reference? = nil

    /// The URI of the resource.
    public var uri: String {
      get {
        if case .uri(let v)? = reference {return v}
        return String()
      }
      set {reference = .uri(newValue)}
    }

    /// The resource name of the Google Cloud resource.
    public var resourceName: String {
      get {
        if case .resourceName(let v)? = reference {return v}
        return String()
      }
      set {reference = .resourceName(newValue)}
    }

    /// Use case (CUJ) of the resource.
    ///
    /// NOTE: This field was marked as deprecated in the .proto file.
    public var useCase: String {
      get {
        if case .useCase(let v)? = reference {return v}
        return String()
      }
      set {reference = .useCase(newValue)}
    }

    /// Description of the resource.
    ///
    /// NOTE: This field was marked as deprecated in the .proto file.
    public var description_p: String {
      get {
        if case .description_p(let v)? = reference {return v}
        return String()
      }
      set {reference = .description_p(newValue)}
    }

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum OneOf_Reference: Equatable, Sendable {
      /// The URI of the resource.
      case uri(String)
      /// The resource name of the Google Cloud resource.
      case resourceName(String)
      /// Use case (CUJ) of the resource.
      ///
      /// NOTE: This field was marked as deprecated in the .proto file.
      case useCase(String)
      /// Description of the resource.
      ///
      /// NOTE: This field was marked as deprecated in the .proto file.
      case description_p(String)

    }

    public init() {}
  }

  /// A named piece of documentation.
  public struct Documentation: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA,
    /// NODE.JS, etc..
    public var title: String = String()

    /// Required. Content of this piece of document (in Markdown format).
    public var content: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  /// Actions could take on this Publisher Model.
  public struct CallToAction: @unchecked Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Optional. To view Rest API docs.
    public var viewRestApi: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi {
      get {return _storage._viewRestApi ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi()}
      set {_uniqueStorage()._viewRestApi = newValue}
    }
    /// Returns true if `viewRestApi` has been explicitly set.
    public var hasViewRestApi: Bool {return _storage._viewRestApi != nil}
    /// Clears the value of `viewRestApi`. Subsequent reads from it will return its default value.
    public mutating func clearViewRestApi() {_uniqueStorage()._viewRestApi = nil}

    /// Optional. Open notebook of the PublisherModel.
    public var openNotebook: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openNotebook ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openNotebook = newValue}
    }
    /// Returns true if `openNotebook` has been explicitly set.
    public var hasOpenNotebook: Bool {return _storage._openNotebook != nil}
    /// Clears the value of `openNotebook`. Subsequent reads from it will return its default value.
    public mutating func clearOpenNotebook() {_uniqueStorage()._openNotebook = nil}

    /// Optional. Open notebooks of the PublisherModel.
    public var openNotebooks: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks {
      get {return _storage._openNotebooks ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks()}
      set {_uniqueStorage()._openNotebooks = newValue}
    }
    /// Returns true if `openNotebooks` has been explicitly set.
    public var hasOpenNotebooks: Bool {return _storage._openNotebooks != nil}
    /// Clears the value of `openNotebooks`. Subsequent reads from it will return its default value.
    public mutating func clearOpenNotebooks() {_uniqueStorage()._openNotebooks = nil}

    /// Optional. Create application using the PublisherModel.
    public var createApplication: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._createApplication ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._createApplication = newValue}
    }
    /// Returns true if `createApplication` has been explicitly set.
    public var hasCreateApplication: Bool {return _storage._createApplication != nil}
    /// Clears the value of `createApplication`. Subsequent reads from it will return its default value.
    public mutating func clearCreateApplication() {_uniqueStorage()._createApplication = nil}

    /// Optional. Open fine-tuning pipeline of the PublisherModel.
    public var openFineTuningPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openFineTuningPipeline ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openFineTuningPipeline = newValue}
    }
    /// Returns true if `openFineTuningPipeline` has been explicitly set.
    public var hasOpenFineTuningPipeline: Bool {return _storage._openFineTuningPipeline != nil}
    /// Clears the value of `openFineTuningPipeline`. Subsequent reads from it will return its default value.
    public mutating func clearOpenFineTuningPipeline() {_uniqueStorage()._openFineTuningPipeline = nil}

    /// Optional. Open fine-tuning pipelines of the PublisherModel.
    public var openFineTuningPipelines: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines {
      get {return _storage._openFineTuningPipelines ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines()}
      set {_uniqueStorage()._openFineTuningPipelines = newValue}
    }
    /// Returns true if `openFineTuningPipelines` has been explicitly set.
    public var hasOpenFineTuningPipelines: Bool {return _storage._openFineTuningPipelines != nil}
    /// Clears the value of `openFineTuningPipelines`. Subsequent reads from it will return its default value.
    public mutating func clearOpenFineTuningPipelines() {_uniqueStorage()._openFineTuningPipelines = nil}

    /// Optional. Open prompt-tuning pipeline of the PublisherModel.
    public var openPromptTuningPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openPromptTuningPipeline ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openPromptTuningPipeline = newValue}
    }
    /// Returns true if `openPromptTuningPipeline` has been explicitly set.
    public var hasOpenPromptTuningPipeline: Bool {return _storage._openPromptTuningPipeline != nil}
    /// Clears the value of `openPromptTuningPipeline`. Subsequent reads from it will return its default value.
    public mutating func clearOpenPromptTuningPipeline() {_uniqueStorage()._openPromptTuningPipeline = nil}

    /// Optional. Open Genie / Playground.
    public var openGenie: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openGenie ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openGenie = newValue}
    }
    /// Returns true if `openGenie` has been explicitly set.
    public var hasOpenGenie: Bool {return _storage._openGenie != nil}
    /// Clears the value of `openGenie`. Subsequent reads from it will return its default value.
    public mutating func clearOpenGenie() {_uniqueStorage()._openGenie = nil}

    /// Optional. Deploy the PublisherModel to Vertex Endpoint.
    public var deploy: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy {
      get {return _storage._deploy ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy()}
      set {_uniqueStorage()._deploy = newValue}
    }
    /// Returns true if `deploy` has been explicitly set.
    public var hasDeploy: Bool {return _storage._deploy != nil}
    /// Clears the value of `deploy`. Subsequent reads from it will return its default value.
    public mutating func clearDeploy() {_uniqueStorage()._deploy = nil}

    /// Optional. Deploy PublisherModel to Google Kubernetes Engine.
    public var deployGke: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke {
      get {return _storage._deployGke ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke()}
      set {_uniqueStorage()._deployGke = newValue}
    }
    /// Returns true if `deployGke` has been explicitly set.
    public var hasDeployGke: Bool {return _storage._deployGke != nil}
    /// Clears the value of `deployGke`. Subsequent reads from it will return its default value.
    public mutating func clearDeployGke() {_uniqueStorage()._deployGke = nil}

    /// Optional. Open in Generation AI Studio.
    public var openGenerationAiStudio: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openGenerationAiStudio ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openGenerationAiStudio = newValue}
    }
    /// Returns true if `openGenerationAiStudio` has been explicitly set.
    public var hasOpenGenerationAiStudio: Bool {return _storage._openGenerationAiStudio != nil}
    /// Clears the value of `openGenerationAiStudio`. Subsequent reads from it will return its default value.
    public mutating func clearOpenGenerationAiStudio() {_uniqueStorage()._openGenerationAiStudio = nil}

    /// Optional. Request for access.
    public var requestAccess: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._requestAccess ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._requestAccess = newValue}
    }
    /// Returns true if `requestAccess` has been explicitly set.
    public var hasRequestAccess: Bool {return _storage._requestAccess != nil}
    /// Clears the value of `requestAccess`. Subsequent reads from it will return its default value.
    public mutating func clearRequestAccess() {_uniqueStorage()._requestAccess = nil}

    /// Optional. Open evaluation pipeline of the PublisherModel.
    public var openEvaluationPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences {
      get {return _storage._openEvaluationPipeline ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences()}
      set {_uniqueStorage()._openEvaluationPipeline = newValue}
    }
    /// Returns true if `openEvaluationPipeline` has been explicitly set.
    public var hasOpenEvaluationPipeline: Bool {return _storage._openEvaluationPipeline != nil}
    /// Clears the value of `openEvaluationPipeline`. Subsequent reads from it will return its default value.
    public mutating func clearOpenEvaluationPipeline() {_uniqueStorage()._openEvaluationPipeline = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    /// The regional resource name or the URI. Key is region, e.g.,
    /// us-central1, europe-west2, global, etc..
    public struct RegionalResourceReferences: Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// Required.
      public var references: Dictionary<String,Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference> = [:]

      /// Required.
      public var title: String = String()

      /// Optional. Title of the resource.
      public var resourceTitle: String {
        get {return _resourceTitle ?? String()}
        set {_resourceTitle = newValue}
      }
      /// Returns true if `resourceTitle` has been explicitly set.
      public var hasResourceTitle: Bool {return self._resourceTitle != nil}
      /// Clears the value of `resourceTitle`. Subsequent reads from it will return its default value.
      public mutating func clearResourceTitle() {self._resourceTitle = nil}

      /// Optional. Use case (CUJ) of the resource.
      public var resourceUseCase: String {
        get {return _resourceUseCase ?? String()}
        set {_resourceUseCase = newValue}
      }
      /// Returns true if `resourceUseCase` has been explicitly set.
      public var hasResourceUseCase: Bool {return self._resourceUseCase != nil}
      /// Clears the value of `resourceUseCase`. Subsequent reads from it will return its default value.
      public mutating func clearResourceUseCase() {self._resourceUseCase = nil}

      /// Optional. Description of the resource.
      public var resourceDescription: String {
        get {return _resourceDescription ?? String()}
        set {_resourceDescription = newValue}
      }
      /// Returns true if `resourceDescription` has been explicitly set.
      public var hasResourceDescription: Bool {return self._resourceDescription != nil}
      /// Clears the value of `resourceDescription`. Subsequent reads from it will return its default value.
      public mutating func clearResourceDescription() {self._resourceDescription = nil}

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}

      fileprivate var _resourceTitle: String? = nil
      fileprivate var _resourceUseCase: String? = nil
      fileprivate var _resourceDescription: String? = nil
    }

    /// Rest API docs.
    public struct ViewRestApi: Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// Required.
      public var documentations: [Google_Cloud_Aiplatform_V1_PublisherModel.Documentation] = []

      /// Required. The title of the view rest API.
      public var title: String = String()

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    /// Open notebooks.
    public struct OpenNotebooks: Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// Required. Regional resource references to notebooks.
      public var notebooks: [Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences] = []

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    /// Open fine tuning pipelines.
    public struct OpenFineTuningPipelines: Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// Required. Regional resource references to fine tuning pipelines.
      public var fineTuningPipelines: [Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences] = []

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    /// Model metadata that is needed for UploadModel or
    /// DeployModel/CreateEndpoint requests.
    public struct Deploy: @unchecked Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// The prediction (for example, the machine) resources that the
      /// DeployedModel uses.
      public var predictionResources: OneOf_PredictionResources? {
        get {return _storage._predictionResources}
        set {_uniqueStorage()._predictionResources = newValue}
      }

      /// A description of resources that are dedicated to the DeployedModel,
      /// and that need a higher degree of manual configuration.
      public var dedicatedResources: Google_Cloud_Aiplatform_V1_DedicatedResources {
        get {
          if case .dedicatedResources(let v)? = _storage._predictionResources {return v}
          return Google_Cloud_Aiplatform_V1_DedicatedResources()
        }
        set {_uniqueStorage()._predictionResources = .dedicatedResources(newValue)}
      }

      /// A description of resources that to large degree are decided by Vertex
      /// AI, and require only a modest additional configuration.
      public var automaticResources: Google_Cloud_Aiplatform_V1_AutomaticResources {
        get {
          if case .automaticResources(let v)? = _storage._predictionResources {return v}
          return Google_Cloud_Aiplatform_V1_AutomaticResources()
        }
        set {_uniqueStorage()._predictionResources = .automaticResources(newValue)}
      }

      /// The resource name of the shared DeploymentResourcePool to deploy on.
      /// Format:
      /// `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
      public var sharedResources: String {
        get {
          if case .sharedResources(let v)? = _storage._predictionResources {return v}
          return String()
        }
        set {_uniqueStorage()._predictionResources = .sharedResources(newValue)}
      }

      /// Optional. Default model display name.
      public var modelDisplayName: String {
        get {return _storage._modelDisplayName}
        set {_uniqueStorage()._modelDisplayName = newValue}
      }

      /// Optional. Large model reference. When this is set, model_artifact_spec
      /// is not needed.
      public var largeModelReference: Google_Cloud_Aiplatform_V1_LargeModelReference {
        get {return _storage._largeModelReference ?? Google_Cloud_Aiplatform_V1_LargeModelReference()}
        set {_uniqueStorage()._largeModelReference = newValue}
      }
      /// Returns true if `largeModelReference` has been explicitly set.
      public var hasLargeModelReference: Bool {return _storage._largeModelReference != nil}
      /// Clears the value of `largeModelReference`. Subsequent reads from it will return its default value.
      public mutating func clearLargeModelReference() {_uniqueStorage()._largeModelReference = nil}

      /// Optional. The specification of the container that is to be used when
      /// deploying this Model in Vertex AI. Not present for Large Models.
      public var containerSpec: Google_Cloud_Aiplatform_V1_ModelContainerSpec {
        get {return _storage._containerSpec ?? Google_Cloud_Aiplatform_V1_ModelContainerSpec()}
        set {_uniqueStorage()._containerSpec = newValue}
      }
      /// Returns true if `containerSpec` has been explicitly set.
      public var hasContainerSpec: Bool {return _storage._containerSpec != nil}
      /// Clears the value of `containerSpec`. Subsequent reads from it will return its default value.
      public mutating func clearContainerSpec() {_uniqueStorage()._containerSpec = nil}

      /// Optional. The path to the directory containing the Model artifact and
      /// any of its supporting files.
      public var artifactUri: String {
        get {return _storage._artifactUri}
        set {_uniqueStorage()._artifactUri = newValue}
      }

      /// Optional. The name of the deploy task (e.g., "text to image
      /// generation").
      public var deployTaskName: String {
        get {return _storage._deployTaskName ?? String()}
        set {_uniqueStorage()._deployTaskName = newValue}
      }
      /// Returns true if `deployTaskName` has been explicitly set.
      public var hasDeployTaskName: Bool {return _storage._deployTaskName != nil}
      /// Clears the value of `deployTaskName`. Subsequent reads from it will return its default value.
      public mutating func clearDeployTaskName() {_uniqueStorage()._deployTaskName = nil}

      /// Optional. Metadata information about this deployment config.
      public var deployMetadata: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata {
        get {return _storage._deployMetadata ?? Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata()}
        set {_uniqueStorage()._deployMetadata = newValue}
      }
      /// Returns true if `deployMetadata` has been explicitly set.
      public var hasDeployMetadata: Bool {return _storage._deployMetadata != nil}
      /// Clears the value of `deployMetadata`. Subsequent reads from it will return its default value.
      public mutating func clearDeployMetadata() {_uniqueStorage()._deployMetadata = nil}

      /// Required. The title of the regional resource reference.
      public var title: String {
        get {return _storage._title}
        set {_uniqueStorage()._title = newValue}
      }

      /// Optional. The signed URI for ephemeral Cloud Storage access to model
      /// artifact.
      public var publicArtifactUri: String {
        get {return _storage._publicArtifactUri}
        set {_uniqueStorage()._publicArtifactUri = newValue}
      }

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      /// The prediction (for example, the machine) resources that the
      /// DeployedModel uses.
      public enum OneOf_PredictionResources: Equatable, Sendable {
        /// A description of resources that are dedicated to the DeployedModel,
        /// and that need a higher degree of manual configuration.
        case dedicatedResources(Google_Cloud_Aiplatform_V1_DedicatedResources)
        /// A description of resources that to large degree are decided by Vertex
        /// AI, and require only a modest additional configuration.
        case automaticResources(Google_Cloud_Aiplatform_V1_AutomaticResources)
        /// The resource name of the shared DeploymentResourcePool to deploy on.
        /// Format:
        /// `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
        case sharedResources(String)

      }

      /// Metadata information about the deployment for managing deployment
      /// config.
      public struct DeployMetadata: Sendable {
        // SwiftProtobuf.Message conformance is added in an extension below. See the
        // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
        // methods supported on all messages.

        /// Optional. Labels for the deployment. For managing deployment config
        /// like verifying, source of deployment config, etc.
        public var labels: Dictionary<String,String> = [:]

        /// Optional. Sample request for deployed endpoint.
        public var sampleRequest: String = String()

        public var unknownFields = SwiftProtobuf.UnknownStorage()

        public init() {}
      }

      public init() {}

      fileprivate var _storage = _StorageClass.defaultInstance
    }

    /// Configurations for PublisherModel GKE deployment
    public struct DeployGke: Sendable {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// Optional. GKE deployment configuration in yaml format.
      public var gkeYamlConfigs: [String] = []

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    public init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  public init() {}

  fileprivate var _supportedActions: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction? = nil
  fileprivate var _predictSchemata: Google_Cloud_Aiplatform_V1_PredictSchemata? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_PublisherModel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PublisherModel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "version_id"),
    7: .standard(proto: "open_source_category"),
    19: .standard(proto: "supported_actions"),
    23: .same(proto: "frameworks"),
    29: .standard(proto: "launch_stage"),
    37: .standard(proto: "version_state"),
    30: .standard(proto: "publisher_model_template"),
    31: .standard(proto: "predict_schemata"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.versionID) }()
      case 7: try { try decoder.decodeSingularEnumField(value: &self.openSourceCategory) }()
      case 19: try { try decoder.decodeSingularMessageField(value: &self._supportedActions) }()
      case 23: try { try decoder.decodeRepeatedStringField(value: &self.frameworks) }()
      case 29: try { try decoder.decodeSingularEnumField(value: &self.launchStage) }()
      case 30: try { try decoder.decodeSingularStringField(value: &self.publisherModelTemplate) }()
      case 31: try { try decoder.decodeSingularMessageField(value: &self._predictSchemata) }()
      case 37: try { try decoder.decodeSingularEnumField(value: &self.versionState) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.versionID.isEmpty {
      try visitor.visitSingularStringField(value: self.versionID, fieldNumber: 2)
    }
    if self.openSourceCategory != .unspecified {
      try visitor.visitSingularEnumField(value: self.openSourceCategory, fieldNumber: 7)
    }
    try { if let v = self._supportedActions {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
    } }()
    if !self.frameworks.isEmpty {
      try visitor.visitRepeatedStringField(value: self.frameworks, fieldNumber: 23)
    }
    if self.launchStage != .unspecified {
      try visitor.visitSingularEnumField(value: self.launchStage, fieldNumber: 29)
    }
    if !self.publisherModelTemplate.isEmpty {
      try visitor.visitSingularStringField(value: self.publisherModelTemplate, fieldNumber: 30)
    }
    try { if let v = self._predictSchemata {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
    } }()
    if self.versionState != .unspecified {
      try visitor.visitSingularEnumField(value: self.versionState, fieldNumber: 37)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel, rhs: Google_Cloud_Aiplatform_V1_PublisherModel) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.versionID != rhs.versionID {return false}
    if lhs.openSourceCategory != rhs.openSourceCategory {return false}
    if lhs._supportedActions != rhs._supportedActions {return false}
    if lhs.frameworks != rhs.frameworks {return false}
    if lhs.launchStage != rhs.launchStage {return false}
    if lhs.versionState != rhs.versionState {return false}
    if lhs.publisherModelTemplate != rhs.publisherModelTemplate {return false}
    if lhs._predictSchemata != rhs._predictSchemata {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.OpenSourceCategory: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "OPEN_SOURCE_CATEGORY_UNSPECIFIED"),
    1: .same(proto: "PROPRIETARY"),
    2: .same(proto: "GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"),
    3: .same(proto: "THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"),
    4: .same(proto: "GOOGLE_OWNED_OSS"),
    5: .same(proto: "THIRD_PARTY_OWNED_OSS"),
  ]
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.LaunchStage: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "LAUNCH_STAGE_UNSPECIFIED"),
    1: .same(proto: "EXPERIMENTAL"),
    2: .same(proto: "PRIVATE_PREVIEW"),
    3: .same(proto: "PUBLIC_PREVIEW"),
    4: .same(proto: "GA"),
  ]
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.VersionState: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "VERSION_STATE_UNSPECIFIED"),
    1: .same(proto: "VERSION_STATE_STABLE"),
    2: .same(proto: "VERSION_STATE_UNSTABLE"),
  ]
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.protoMessageName + ".ResourceReference"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "uri"),
    2: .standard(proto: "resource_name"),
    3: .standard(proto: "use_case"),
    4: .same(proto: "description"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try {
        var v: String?
        try decoder.decodeSingularStringField(value: &v)
        if let v = v {
          if self.reference != nil {try decoder.handleConflictingOneOf()}
          self.reference = .uri(v)
        }
      }()
      case 2: try {
        var v: String?
        try decoder.decodeSingularStringField(value: &v)
        if let v = v {
          if self.reference != nil {try decoder.handleConflictingOneOf()}
          self.reference = .resourceName(v)
        }
      }()
      case 3: try {
        var v: String?
        try decoder.decodeSingularStringField(value: &v)
        if let v = v {
          if self.reference != nil {try decoder.handleConflictingOneOf()}
          self.reference = .useCase(v)
        }
      }()
      case 4: try {
        var v: String?
        try decoder.decodeSingularStringField(value: &v)
        if let v = v {
          if self.reference != nil {try decoder.handleConflictingOneOf()}
          self.reference = .description_p(v)
        }
      }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    switch self.reference {
    case .uri?: try {
      guard case .uri(let v)? = self.reference else { preconditionFailure() }
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }()
    case .resourceName?: try {
      guard case .resourceName(let v)? = self.reference else { preconditionFailure() }
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }()
    case .useCase?: try {
      guard case .useCase(let v)? = self.reference else { preconditionFailure() }
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }()
    case .description_p?: try {
      guard case .description_p(let v)? = self.reference else { preconditionFailure() }
      try visitor.visitSingularStringField(value: v, fieldNumber: 4)
    }()
    case nil: break
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference) -> Bool {
    if lhs.reference != rhs.reference {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.Documentation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.protoMessageName + ".Documentation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "title"),
    2: .same(proto: "content"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.title) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.content) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 1)
    }
    if !self.content.isEmpty {
      try visitor.visitSingularStringField(value: self.content, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.Documentation, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.Documentation) -> Bool {
    if lhs.title != rhs.title {return false}
    if lhs.content != rhs.content {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.protoMessageName + ".CallToAction"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "view_rest_api"),
    2: .standard(proto: "open_notebook"),
    12: .standard(proto: "open_notebooks"),
    3: .standard(proto: "create_application"),
    4: .standard(proto: "open_fine_tuning_pipeline"),
    13: .standard(proto: "open_fine_tuning_pipelines"),
    5: .standard(proto: "open_prompt_tuning_pipeline"),
    6: .standard(proto: "open_genie"),
    7: .same(proto: "deploy"),
    14: .standard(proto: "deploy_gke"),
    8: .standard(proto: "open_generation_ai_studio"),
    9: .standard(proto: "request_access"),
    11: .standard(proto: "open_evaluation_pipeline"),
  ]

  fileprivate class _StorageClass {
    var _viewRestApi: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi? = nil
    var _openNotebook: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _openNotebooks: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks? = nil
    var _createApplication: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _openFineTuningPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _openFineTuningPipelines: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines? = nil
    var _openPromptTuningPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _openGenie: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _deploy: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy? = nil
    var _deployGke: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke? = nil
    var _openGenerationAiStudio: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _requestAccess: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil
    var _openEvaluationPipeline: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences? = nil

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _viewRestApi = source._viewRestApi
      _openNotebook = source._openNotebook
      _openNotebooks = source._openNotebooks
      _createApplication = source._createApplication
      _openFineTuningPipeline = source._openFineTuningPipeline
      _openFineTuningPipelines = source._openFineTuningPipelines
      _openPromptTuningPipeline = source._openPromptTuningPipeline
      _openGenie = source._openGenie
      _deploy = source._deploy
      _deployGke = source._deployGke
      _openGenerationAiStudio = source._openGenerationAiStudio
      _requestAccess = source._requestAccess
      _openEvaluationPipeline = source._openEvaluationPipeline
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularMessageField(value: &_storage._viewRestApi) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._openNotebook) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._createApplication) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._openFineTuningPipeline) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._openPromptTuningPipeline) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._openGenie) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._deploy) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._openGenerationAiStudio) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._requestAccess) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._openEvaluationPipeline) }()
        case 12: try { try decoder.decodeSingularMessageField(value: &_storage._openNotebooks) }()
        case 13: try { try decoder.decodeSingularMessageField(value: &_storage._openFineTuningPipelines) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._deployGke) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._viewRestApi {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      } }()
      try { if let v = _storage._openNotebook {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      try { if let v = _storage._createApplication {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      } }()
      try { if let v = _storage._openFineTuningPipeline {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._openPromptTuningPipeline {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._openGenie {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._deploy {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._openGenerationAiStudio {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._requestAccess {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._openEvaluationPipeline {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
      try { if let v = _storage._openNotebooks {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      } }()
      try { if let v = _storage._openFineTuningPipelines {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      } }()
      try { if let v = _storage._deployGke {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._viewRestApi != rhs_storage._viewRestApi {return false}
        if _storage._openNotebook != rhs_storage._openNotebook {return false}
        if _storage._openNotebooks != rhs_storage._openNotebooks {return false}
        if _storage._createApplication != rhs_storage._createApplication {return false}
        if _storage._openFineTuningPipeline != rhs_storage._openFineTuningPipeline {return false}
        if _storage._openFineTuningPipelines != rhs_storage._openFineTuningPipelines {return false}
        if _storage._openPromptTuningPipeline != rhs_storage._openPromptTuningPipeline {return false}
        if _storage._openGenie != rhs_storage._openGenie {return false}
        if _storage._deploy != rhs_storage._deploy {return false}
        if _storage._deployGke != rhs_storage._deployGke {return false}
        if _storage._openGenerationAiStudio != rhs_storage._openGenerationAiStudio {return false}
        if _storage._requestAccess != rhs_storage._requestAccess {return false}
        if _storage._openEvaluationPipeline != rhs_storage._openEvaluationPipeline {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".RegionalResourceReferences"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "references"),
    2: .same(proto: "title"),
    3: .standard(proto: "resource_title"),
    4: .standard(proto: "resource_use_case"),
    5: .standard(proto: "resource_description"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference>.self, value: &self.references) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.title) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self._resourceTitle) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self._resourceUseCase) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self._resourceDescription) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.references.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Aiplatform_V1_PublisherModel.ResourceReference>.self, value: self.references, fieldNumber: 1)
    }
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 2)
    }
    try { if let v = self._resourceTitle {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._resourceUseCase {
      try visitor.visitSingularStringField(value: v, fieldNumber: 4)
    } }()
    try { if let v = self._resourceDescription {
      try visitor.visitSingularStringField(value: v, fieldNumber: 5)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.RegionalResourceReferences) -> Bool {
    if lhs.references != rhs.references {return false}
    if lhs.title != rhs.title {return false}
    if lhs._resourceTitle != rhs._resourceTitle {return false}
    if lhs._resourceUseCase != rhs._resourceUseCase {return false}
    if lhs._resourceDescription != rhs._resourceDescription {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".ViewRestApi"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "documentations"),
    2: .same(proto: "title"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.documentations) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.title) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.documentations.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.documentations, fieldNumber: 1)
    }
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.ViewRestApi) -> Bool {
    if lhs.documentations != rhs.documentations {return false}
    if lhs.title != rhs.title {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".OpenNotebooks"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "notebooks"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.notebooks) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.notebooks.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.notebooks, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenNotebooks) -> Bool {
    if lhs.notebooks != rhs.notebooks {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".OpenFineTuningPipelines"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "fine_tuning_pipelines"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.fineTuningPipelines) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.fineTuningPipelines.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.fineTuningPipelines, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.OpenFineTuningPipelines) -> Bool {
    if lhs.fineTuningPipelines != rhs.fineTuningPipelines {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".Deploy"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    5: .standard(proto: "dedicated_resources"),
    6: .standard(proto: "automatic_resources"),
    7: .standard(proto: "shared_resources"),
    1: .standard(proto: "model_display_name"),
    2: .standard(proto: "large_model_reference"),
    3: .standard(proto: "container_spec"),
    4: .standard(proto: "artifact_uri"),
    10: .standard(proto: "deploy_task_name"),
    11: .standard(proto: "deploy_metadata"),
    8: .same(proto: "title"),
    9: .standard(proto: "public_artifact_uri"),
  ]

  fileprivate class _StorageClass {
    var _predictionResources: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.OneOf_PredictionResources?
    var _modelDisplayName: String = String()
    var _largeModelReference: Google_Cloud_Aiplatform_V1_LargeModelReference? = nil
    var _containerSpec: Google_Cloud_Aiplatform_V1_ModelContainerSpec? = nil
    var _artifactUri: String = String()
    var _deployTaskName: String? = nil
    var _deployMetadata: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata? = nil
    var _title: String = String()
    var _publicArtifactUri: String = String()

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _predictionResources = source._predictionResources
      _modelDisplayName = source._modelDisplayName
      _largeModelReference = source._largeModelReference
      _containerSpec = source._containerSpec
      _artifactUri = source._artifactUri
      _deployTaskName = source._deployTaskName
      _deployMetadata = source._deployMetadata
      _title = source._title
      _publicArtifactUri = source._publicArtifactUri
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._modelDisplayName) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._largeModelReference) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._containerSpec) }()
        case 4: try { try decoder.decodeSingularStringField(value: &_storage._artifactUri) }()
        case 5: try {
          var v: Google_Cloud_Aiplatform_V1_DedicatedResources?
          var hadOneofValue = false
          if let current = _storage._predictionResources {
            hadOneofValue = true
            if case .dedicatedResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .dedicatedResources(v)
          }
        }()
        case 6: try {
          var v: Google_Cloud_Aiplatform_V1_AutomaticResources?
          var hadOneofValue = false
          if let current = _storage._predictionResources {
            hadOneofValue = true
            if case .automaticResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .automaticResources(v)
          }
        }()
        case 7: try {
          var v: String?
          try decoder.decodeSingularStringField(value: &v)
          if let v = v {
            if _storage._predictionResources != nil {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .sharedResources(v)
          }
        }()
        case 8: try { try decoder.decodeSingularStringField(value: &_storage._title) }()
        case 9: try { try decoder.decodeSingularStringField(value: &_storage._publicArtifactUri) }()
        case 10: try { try decoder.decodeSingularStringField(value: &_storage._deployTaskName) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._deployMetadata) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._modelDisplayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._modelDisplayName, fieldNumber: 1)
      }
      try { if let v = _storage._largeModelReference {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      try { if let v = _storage._containerSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      } }()
      if !_storage._artifactUri.isEmpty {
        try visitor.visitSingularStringField(value: _storage._artifactUri, fieldNumber: 4)
      }
      switch _storage._predictionResources {
      case .dedicatedResources?: try {
        guard case .dedicatedResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }()
      case .automaticResources?: try {
        guard case .automaticResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }()
      case .sharedResources?: try {
        guard case .sharedResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularStringField(value: v, fieldNumber: 7)
      }()
      case nil: break
      }
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 8)
      }
      if !_storage._publicArtifactUri.isEmpty {
        try visitor.visitSingularStringField(value: _storage._publicArtifactUri, fieldNumber: 9)
      }
      try { if let v = _storage._deployTaskName {
        try visitor.visitSingularStringField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._deployMetadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._predictionResources != rhs_storage._predictionResources {return false}
        if _storage._modelDisplayName != rhs_storage._modelDisplayName {return false}
        if _storage._largeModelReference != rhs_storage._largeModelReference {return false}
        if _storage._containerSpec != rhs_storage._containerSpec {return false}
        if _storage._artifactUri != rhs_storage._artifactUri {return false}
        if _storage._deployTaskName != rhs_storage._deployTaskName {return false}
        if _storage._deployMetadata != rhs_storage._deployMetadata {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._publicArtifactUri != rhs_storage._publicArtifactUri {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.protoMessageName + ".DeployMetadata"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "labels"),
    2: .standard(proto: "sample_request"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.labels) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.sampleRequest) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.labels.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.labels, fieldNumber: 1)
    }
    if !self.sampleRequest.isEmpty {
      try visitor.visitSingularStringField(value: self.sampleRequest, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.Deploy.DeployMetadata) -> Bool {
    if lhs.labels != rhs.labels {return false}
    if lhs.sampleRequest != rhs.sampleRequest {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.protoMessageName + ".DeployGke"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "gke_yaml_configs"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.gkeYamlConfigs) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.gkeYamlConfigs.isEmpty {
      try visitor.visitRepeatedStringField(value: self.gkeYamlConfigs, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke, rhs: Google_Cloud_Aiplatform_V1_PublisherModel.CallToAction.DeployGke) -> Bool {
    if lhs.gkeYamlConfigs != rhs.gkeYamlConfigs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
