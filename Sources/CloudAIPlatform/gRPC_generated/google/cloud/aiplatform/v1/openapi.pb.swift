// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/openapi.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Type contains the list of OpenAPI data types as defined by
/// https://swagger.io/docs/specification/data-models/data-types/
public enum Google_Cloud_Aiplatform_V1_Type: SwiftProtobuf.Enum, Swift.CaseIterable {
  public typealias RawValue = Int

  /// Not specified, should not be used.
  case unspecified // = 0

  /// OpenAPI string type
  case string // = 1

  /// OpenAPI number type
  case number // = 2

  /// OpenAPI integer type
  case integer // = 3

  /// OpenAPI boolean type
  case boolean // = 4

  /// OpenAPI array type
  case array // = 5

  /// OpenAPI object type
  case object // = 6
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .string
    case 2: self = .number
    case 3: self = .integer
    case 4: self = .boolean
    case 5: self = .array
    case 6: self = .object
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .string: return 1
    case .number: return 2
    case .integer: return 3
    case .boolean: return 4
    case .array: return 5
    case .object: return 6
    case .UNRECOGNIZED(let i): return i
    }
  }

  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Google_Cloud_Aiplatform_V1_Type] = [
    .unspecified,
    .string,
    .number,
    .integer,
    .boolean,
    .array,
    .object,
  ]

}

/// Schema is used to define the format of input/output data. Represents a select
/// subset of an [OpenAPI 3.0 schema
/// object](https://spec.openapis.org/oas/v3.0.3#schema). More fields may be
/// added in the future as needed.
public struct Google_Cloud_Aiplatform_V1_Schema: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Optional. The type of the data.
  public var type: Google_Cloud_Aiplatform_V1_Type {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  /// Optional. The format of the data.
  /// Supported formats:
  ///  for NUMBER type: "float", "double"
  ///  for INTEGER type: "int32", "int64"
  ///  for STRING type: "email", "byte", etc
  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  /// Optional. The title of the Schema.
  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  /// Optional. The description of the data.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Optional. Indicates if the value may be null.
  public var nullable: Bool {
    get {return _storage._nullable}
    set {_uniqueStorage()._nullable = newValue}
  }

  /// Optional. Default value of the data.
  public var `default`: SwiftProtobuf.Google_Protobuf_Value {
    get {return _storage._default ?? SwiftProtobuf.Google_Protobuf_Value()}
    set {_uniqueStorage()._default = newValue}
  }
  /// Returns true if ``default`` has been explicitly set.
  public var hasDefault: Bool {return _storage._default != nil}
  /// Clears the value of ``default``. Subsequent reads from it will return its default value.
  public mutating func clearDefault() {_uniqueStorage()._default = nil}

  /// Optional. SCHEMA FIELDS FOR TYPE ARRAY
  /// Schema of the elements of Type.ARRAY.
  public var items: Google_Cloud_Aiplatform_V1_Schema {
    get {return _storage._items ?? Google_Cloud_Aiplatform_V1_Schema()}
    set {_uniqueStorage()._items = newValue}
  }
  /// Returns true if `items` has been explicitly set.
  public var hasItems: Bool {return _storage._items != nil}
  /// Clears the value of `items`. Subsequent reads from it will return its default value.
  public mutating func clearItems() {_uniqueStorage()._items = nil}

  /// Optional. Minimum number of the elements for Type.ARRAY.
  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  /// Optional. Maximum number of the elements for Type.ARRAY.
  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  /// Optional. Possible values of the element of Type.STRING with enum format.
  /// For example we can define an Enum Direction as :
  /// {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
  public var `enum`: [String] {
    get {return _storage._enum}
    set {_uniqueStorage()._enum = newValue}
  }

  /// Optional. SCHEMA FIELDS FOR TYPE OBJECT
  /// Properties of Type.OBJECT.
  public var properties: Dictionary<String,Google_Cloud_Aiplatform_V1_Schema> {
    get {return _storage._properties}
    set {_uniqueStorage()._properties = newValue}
  }

  /// Optional. Required properties of Type.OBJECT.
  public var required: [String] {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  /// Optional. Minimum number of the properties for Type.OBJECT.
  public var minProperties: Int64 {
    get {return _storage._minProperties}
    set {_uniqueStorage()._minProperties = newValue}
  }

  /// Optional. Maximum number of the properties for Type.OBJECT.
  public var maxProperties: Int64 {
    get {return _storage._maxProperties}
    set {_uniqueStorage()._maxProperties = newValue}
  }

  /// Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER
  /// Minimum value of the Type.INTEGER and Type.NUMBER
  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  /// Optional. Maximum value of the Type.INTEGER and Type.NUMBER
  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  /// Optional. SCHEMA FIELDS FOR TYPE STRING
  /// Minimum length of the Type.STRING
  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  /// Optional. Maximum length of the Type.STRING
  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  /// Optional. Pattern of the Type.STRING to restrict a string to a regular
  /// expression.
  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  /// Optional. Example of the object. Will only populated when the object is the
  /// root.
  public var example: SwiftProtobuf.Google_Protobuf_Value {
    get {return _storage._example ?? SwiftProtobuf.Google_Protobuf_Value()}
    set {_uniqueStorage()._example = newValue}
  }
  /// Returns true if `example` has been explicitly set.
  public var hasExample: Bool {return _storage._example != nil}
  /// Clears the value of `example`. Subsequent reads from it will return its default value.
  public mutating func clearExample() {_uniqueStorage()._example = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_Type: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "TYPE_UNSPECIFIED"),
    1: .same(proto: "STRING"),
    2: .same(proto: "NUMBER"),
    3: .same(proto: "INTEGER"),
    4: .same(proto: "BOOLEAN"),
    5: .same(proto: "ARRAY"),
    6: .same(proto: "OBJECT"),
  ]
}

extension Google_Cloud_Aiplatform_V1_Schema: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Schema"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    7: .same(proto: "format"),
    24: .same(proto: "title"),
    8: .same(proto: "description"),
    6: .same(proto: "nullable"),
    23: .same(proto: "default"),
    2: .same(proto: "items"),
    21: .standard(proto: "min_items"),
    22: .standard(proto: "max_items"),
    9: .same(proto: "enum"),
    3: .same(proto: "properties"),
    5: .same(proto: "required"),
    14: .standard(proto: "min_properties"),
    15: .standard(proto: "max_properties"),
    16: .same(proto: "minimum"),
    17: .same(proto: "maximum"),
    18: .standard(proto: "min_length"),
    19: .standard(proto: "max_length"),
    20: .same(proto: "pattern"),
    4: .same(proto: "example"),
  ]

  fileprivate class _StorageClass {
    var _type: Google_Cloud_Aiplatform_V1_Type = .unspecified
    var _format: String = String()
    var _title: String = String()
    var _description_p: String = String()
    var _nullable: Bool = false
    var _default: SwiftProtobuf.Google_Protobuf_Value? = nil
    var _items: Google_Cloud_Aiplatform_V1_Schema? = nil
    var _minItems: Int64 = 0
    var _maxItems: Int64 = 0
    var _enum: [String] = []
    var _properties: Dictionary<String,Google_Cloud_Aiplatform_V1_Schema> = [:]
    var _required: [String] = []
    var _minProperties: Int64 = 0
    var _maxProperties: Int64 = 0
    var _minimum: Double = 0
    var _maximum: Double = 0
    var _minLength: Int64 = 0
    var _maxLength: Int64 = 0
    var _pattern: String = String()
    var _example: SwiftProtobuf.Google_Protobuf_Value? = nil

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _type = source._type
      _format = source._format
      _title = source._title
      _description_p = source._description_p
      _nullable = source._nullable
      _default = source._default
      _items = source._items
      _minItems = source._minItems
      _maxItems = source._maxItems
      _enum = source._enum
      _properties = source._properties
      _required = source._required
      _minProperties = source._minProperties
      _maxProperties = source._maxProperties
      _minimum = source._minimum
      _maximum = source._maximum
      _minLength = source._minLength
      _maxLength = source._maxLength
      _pattern = source._pattern
      _example = source._example
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularEnumField(value: &_storage._type) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._items) }()
        case 3: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Aiplatform_V1_Schema>.self, value: &_storage._properties) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._example) }()
        case 5: try { try decoder.decodeRepeatedStringField(value: &_storage._required) }()
        case 6: try { try decoder.decodeSingularBoolField(value: &_storage._nullable) }()
        case 7: try { try decoder.decodeSingularStringField(value: &_storage._format) }()
        case 8: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 9: try { try decoder.decodeRepeatedStringField(value: &_storage._enum) }()
        case 14: try { try decoder.decodeSingularInt64Field(value: &_storage._minProperties) }()
        case 15: try { try decoder.decodeSingularInt64Field(value: &_storage._maxProperties) }()
        case 16: try { try decoder.decodeSingularDoubleField(value: &_storage._minimum) }()
        case 17: try { try decoder.decodeSingularDoubleField(value: &_storage._maximum) }()
        case 18: try { try decoder.decodeSingularInt64Field(value: &_storage._minLength) }()
        case 19: try { try decoder.decodeSingularInt64Field(value: &_storage._maxLength) }()
        case 20: try { try decoder.decodeSingularStringField(value: &_storage._pattern) }()
        case 21: try { try decoder.decodeSingularInt64Field(value: &_storage._minItems) }()
        case 22: try { try decoder.decodeSingularInt64Field(value: &_storage._maxItems) }()
        case 23: try { try decoder.decodeSingularMessageField(value: &_storage._default) }()
        case 24: try { try decoder.decodeSingularStringField(value: &_storage._title) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if _storage._type != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._type, fieldNumber: 1)
      }
      try { if let v = _storage._items {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      } }()
      if !_storage._properties.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Aiplatform_V1_Schema>.self, value: _storage._properties, fieldNumber: 3)
      }
      try { if let v = _storage._example {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      if !_storage._required.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._required, fieldNumber: 5)
      }
      if _storage._nullable != false {
        try visitor.visitSingularBoolField(value: _storage._nullable, fieldNumber: 6)
      }
      if !_storage._format.isEmpty {
        try visitor.visitSingularStringField(value: _storage._format, fieldNumber: 7)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 8)
      }
      if !_storage._enum.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._enum, fieldNumber: 9)
      }
      if _storage._minProperties != 0 {
        try visitor.visitSingularInt64Field(value: _storage._minProperties, fieldNumber: 14)
      }
      if _storage._maxProperties != 0 {
        try visitor.visitSingularInt64Field(value: _storage._maxProperties, fieldNumber: 15)
      }
      if _storage._minimum.bitPattern != 0 {
        try visitor.visitSingularDoubleField(value: _storage._minimum, fieldNumber: 16)
      }
      if _storage._maximum.bitPattern != 0 {
        try visitor.visitSingularDoubleField(value: _storage._maximum, fieldNumber: 17)
      }
      if _storage._minLength != 0 {
        try visitor.visitSingularInt64Field(value: _storage._minLength, fieldNumber: 18)
      }
      if _storage._maxLength != 0 {
        try visitor.visitSingularInt64Field(value: _storage._maxLength, fieldNumber: 19)
      }
      if !_storage._pattern.isEmpty {
        try visitor.visitSingularStringField(value: _storage._pattern, fieldNumber: 20)
      }
      if _storage._minItems != 0 {
        try visitor.visitSingularInt64Field(value: _storage._minItems, fieldNumber: 21)
      }
      if _storage._maxItems != 0 {
        try visitor.visitSingularInt64Field(value: _storage._maxItems, fieldNumber: 22)
      }
      try { if let v = _storage._default {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      } }()
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 24)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_Schema, rhs: Google_Cloud_Aiplatform_V1_Schema) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._type != rhs_storage._type {return false}
        if _storage._format != rhs_storage._format {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._nullable != rhs_storage._nullable {return false}
        if _storage._default != rhs_storage._default {return false}
        if _storage._items != rhs_storage._items {return false}
        if _storage._minItems != rhs_storage._minItems {return false}
        if _storage._maxItems != rhs_storage._maxItems {return false}
        if _storage._enum != rhs_storage._enum {return false}
        if _storage._properties != rhs_storage._properties {return false}
        if _storage._required != rhs_storage._required {return false}
        if _storage._minProperties != rhs_storage._minProperties {return false}
        if _storage._maxProperties != rhs_storage._maxProperties {return false}
        if _storage._minimum != rhs_storage._minimum {return false}
        if _storage._maximum != rhs_storage._maximum {return false}
        if _storage._minLength != rhs_storage._minLength {return false}
        if _storage._maxLength != rhs_storage._maxLength {return false}
        if _storage._pattern != rhs_storage._pattern {return false}
        if _storage._example != rhs_storage._example {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
