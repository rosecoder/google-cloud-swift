// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/index_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_IndexService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_IndexService
    public enum Method {
        public enum CreateIndex {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateIndexRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "CreateIndex"
            )
        }
        public enum GetIndex {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetIndexRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Index
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "GetIndex"
            )
        }
        public enum ListIndexes {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListIndexesRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListIndexesResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "ListIndexes"
            )
        }
        public enum UpdateIndex {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateIndexRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "UpdateIndex"
            )
        }
        public enum DeleteIndex {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteIndexRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "DeleteIndex"
            )
        }
        public enum UpsertDatapoints {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "UpsertDatapoints"
            )
        }
        public enum RemoveDatapoints {
            public typealias Input = Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_IndexService.descriptor.fullyQualifiedService,
                method: "RemoveDatapoints"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateIndex.descriptor,
            GetIndex.descriptor,
            ListIndexes.descriptor,
            UpdateIndex.descriptor,
            DeleteIndex.descriptor,
            UpsertDatapoints.descriptor,
            RemoveDatapoints.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_IndexService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_IndexService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_IndexService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "IndexService"
    )
}

/// A service for creating and managing Vertex AI's Index resources.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_IndexService_ClientProtocol: Sendable {
    /// Creates an Index.
    func createIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets an Index.
    func getIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Index>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Index>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Indexes in a Location.
    func listIndexes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListIndexesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListIndexesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListIndexesResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListIndexesResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates an Index.
    func updateIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes an Index.
    /// An Index can only be deleted when all its
    /// [DeployedIndexes][google.cloud.aiplatform.v1.Index.deployed_indexes] had
    /// been undeployed.
    func deleteIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Add/update Datapoints into an Index.
    func upsertDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Remove Datapoints from an Index.
    func removeDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_IndexService.ClientProtocol {
    public func createIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateIndexRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createIndex(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateIndexRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetIndexRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Index>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getIndex(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetIndexRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Index>(),
            options: options,
            body
        )
    }
    
    public func listIndexes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListIndexesRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListIndexesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listIndexes(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListIndexesRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListIndexesResponse>(),
            options: options,
            body
        )
    }
    
    public func updateIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateIndex(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func deleteIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteIndex(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func upsertDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.upsertDatapoints(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>(),
            options: options,
            body
        )
    }
    
    public func removeDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.removeDatapoints(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_IndexService.ClientProtocol {
    /// Creates an Index.
    public func createIndex<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateIndexRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateIndexRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createIndex(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets an Index.
    public func getIndex<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetIndexRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Index>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetIndexRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getIndex(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Indexes in a Location.
    public func listIndexes<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListIndexesRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListIndexesResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListIndexesRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listIndexes(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates an Index.
    public func updateIndex<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateIndexRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateIndex(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes an Index.
    /// An Index can only be deleted when all its
    /// [DeployedIndexes][google.cloud.aiplatform.v1.Index.deployed_indexes] had
    /// been undeployed.
    public func deleteIndex<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteIndexRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteIndex(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Add/update Datapoints into an Index.
    public func upsertDatapoints<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.upsertDatapoints(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Remove Datapoints from an Index.
    public func removeDatapoints<Result>(
        _ message: Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.removeDatapoints(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// A service for creating and managing Vertex AI's Index resources.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_IndexService_Client: Google_Cloud_Aiplatform_V1_IndexService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates an Index.
    public func createIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.CreateIndex.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets an Index.
    public func getIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Index>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Index>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.GetIndex.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Indexes in a Location.
    public func listIndexes<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListIndexesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListIndexesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListIndexesResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListIndexesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.ListIndexes.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates an Index.
    public func updateIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.UpdateIndex.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes an Index.
    /// An Index can only be deleted when all its
    /// [DeployedIndexes][google.cloud.aiplatform.v1.Index.deployed_indexes] had
    /// been undeployed.
    public func deleteIndex<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteIndexRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.DeleteIndex.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Add/update Datapoints into an Index.
    public func upsertDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_UpsertDatapointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.UpsertDatapoints.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Remove Datapoints from an Index.
    public func removeDatapoints<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_RemoveDatapointsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_IndexService.Method.RemoveDatapoints.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}