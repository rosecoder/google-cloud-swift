// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/tuning_job.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Represents a TuningJob that runs with Google owned models.
public struct Google_Cloud_Aiplatform_V1_TuningJob: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var sourceModel: OneOf_SourceModel? {
    get {return _storage._sourceModel}
    set {_uniqueStorage()._sourceModel = newValue}
  }

  /// The base model that is being tuned, e.g., "gemini-1.0-pro-002".
  public var baseModel: String {
    get {
      if case .baseModel(let v)? = _storage._sourceModel {return v}
      return String()
    }
    set {_uniqueStorage()._sourceModel = .baseModel(newValue)}
  }

  public var tuningSpec: OneOf_TuningSpec? {
    get {return _storage._tuningSpec}
    set {_uniqueStorage()._tuningSpec = newValue}
  }

  /// Tuning Spec for Supervised Fine Tuning.
  public var supervisedTuningSpec: Google_Cloud_Aiplatform_V1_SupervisedTuningSpec {
    get {
      if case .supervisedTuningSpec(let v)? = _storage._tuningSpec {return v}
      return Google_Cloud_Aiplatform_V1_SupervisedTuningSpec()
    }
    set {_uniqueStorage()._tuningSpec = .supervisedTuningSpec(newValue)}
  }

  /// Output only. Identifier. Resource name of a TuningJob. Format:
  /// `projects/{project}/locations/{location}/tuningJobs/{tuning_job}`
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Optional. The display name of the
  /// [TunedModel][google.cloud.aiplatform.v1.Model]. The name can be up to 128
  /// characters long and can consist of any UTF-8 characters.
  public var tunedModelDisplayName: String {
    get {return _storage._tunedModelDisplayName}
    set {_uniqueStorage()._tunedModelDisplayName = newValue}
  }

  /// Optional. The description of the
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob].
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Output only. The detailed state of the job.
  public var state: Google_Cloud_Aiplatform_V1_JobState {
    get {return _storage._state}
    set {_uniqueStorage()._state = newValue}
  }

  /// Output only. Time when the
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob] was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Output only. Time when the
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob] for the first time
  /// entered the `JOB_STATE_RUNNING` state.
  public var startTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._startTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._startTime = newValue}
  }
  /// Returns true if `startTime` has been explicitly set.
  public var hasStartTime: Bool {return _storage._startTime != nil}
  /// Clears the value of `startTime`. Subsequent reads from it will return its default value.
  public mutating func clearStartTime() {_uniqueStorage()._startTime = nil}

  /// Output only. Time when the TuningJob entered any of the following
  /// [JobStates][google.cloud.aiplatform.v1.JobState]: `JOB_STATE_SUCCEEDED`,
  /// `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`, `JOB_STATE_EXPIRED`.
  public var endTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._endTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._endTime = newValue}
  }
  /// Returns true if `endTime` has been explicitly set.
  public var hasEndTime: Bool {return _storage._endTime != nil}
  /// Clears the value of `endTime`. Subsequent reads from it will return its default value.
  public mutating func clearEndTime() {_uniqueStorage()._endTime = nil}

  /// Output only. Time when the
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob] was most recently
  /// updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return _storage._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {_uniqueStorage()._updateTime = nil}

  /// Output only. Only populated when job's state is `JOB_STATE_FAILED` or
  /// `JOB_STATE_CANCELLED`.
  public var error: Google_Rpc_Status {
    get {return _storage._error ?? Google_Rpc_Status()}
    set {_uniqueStorage()._error = newValue}
  }
  /// Returns true if `error` has been explicitly set.
  public var hasError: Bool {return _storage._error != nil}
  /// Clears the value of `error`. Subsequent reads from it will return its default value.
  public mutating func clearError() {_uniqueStorage()._error = nil}

  /// Optional. The labels with user-defined metadata to organize
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob] and generated resources
  /// such as [Model][google.cloud.aiplatform.v1.Model] and
  /// [Endpoint][google.cloud.aiplatform.v1.Endpoint].
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  public var labels: Dictionary<String,String> {
    get {return _storage._labels}
    set {_uniqueStorage()._labels = newValue}
  }

  /// Output only. The Experiment associated with this
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob].
  public var experiment: String {
    get {return _storage._experiment}
    set {_uniqueStorage()._experiment = newValue}
  }

  /// Output only. The tuned model resources assiociated with this
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob].
  public var tunedModel: Google_Cloud_Aiplatform_V1_TunedModel {
    get {return _storage._tunedModel ?? Google_Cloud_Aiplatform_V1_TunedModel()}
    set {_uniqueStorage()._tunedModel = newValue}
  }
  /// Returns true if `tunedModel` has been explicitly set.
  public var hasTunedModel: Bool {return _storage._tunedModel != nil}
  /// Clears the value of `tunedModel`. Subsequent reads from it will return its default value.
  public mutating func clearTunedModel() {_uniqueStorage()._tunedModel = nil}

  /// Output only. The tuning data statistics associated with this
  /// [TuningJob][google.cloud.aiplatform.v1.TuningJob].
  public var tuningDataStats: Google_Cloud_Aiplatform_V1_TuningDataStats {
    get {return _storage._tuningDataStats ?? Google_Cloud_Aiplatform_V1_TuningDataStats()}
    set {_uniqueStorage()._tuningDataStats = newValue}
  }
  /// Returns true if `tuningDataStats` has been explicitly set.
  public var hasTuningDataStats: Bool {return _storage._tuningDataStats != nil}
  /// Clears the value of `tuningDataStats`. Subsequent reads from it will return its default value.
  public mutating func clearTuningDataStats() {_uniqueStorage()._tuningDataStats = nil}

  /// Customer-managed encryption key options for a TuningJob. If this is set,
  /// then all resources created by the TuningJob will be encrypted with the
  /// provided encryption key.
  public var encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec {
    get {return _storage._encryptionSpec ?? Google_Cloud_Aiplatform_V1_EncryptionSpec()}
    set {_uniqueStorage()._encryptionSpec = newValue}
  }
  /// Returns true if `encryptionSpec` has been explicitly set.
  public var hasEncryptionSpec: Bool {return _storage._encryptionSpec != nil}
  /// Clears the value of `encryptionSpec`. Subsequent reads from it will return its default value.
  public mutating func clearEncryptionSpec() {_uniqueStorage()._encryptionSpec = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OneOf_SourceModel: Equatable, Sendable {
    /// The base model that is being tuned, e.g., "gemini-1.0-pro-002".
    case baseModel(String)

  }

  public enum OneOf_TuningSpec: Equatable, Sendable {
    /// Tuning Spec for Supervised Fine Tuning.
    case supervisedTuningSpec(Google_Cloud_Aiplatform_V1_SupervisedTuningSpec)

  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// The Model Registry Model and Online Prediction Endpoint assiociated with
/// this [TuningJob][google.cloud.aiplatform.v1.TuningJob].
public struct Google_Cloud_Aiplatform_V1_TunedModel: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the TunedModel. Format:
  /// `projects/{project}/locations/{location}/models/{model}`.
  public var model: String = String()

  /// Output only. A resource name of an Endpoint. Format:
  /// `projects/{project}/locations/{location}/endpoints/{endpoint}`.
  public var endpoint: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// Dataset distribution for Supervised Tuning.
public struct Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. Sum of a given population of values.
  public var sum: Int64 = 0

  /// Output only. Sum of a given population of values that are billable.
  public var billableSum: Int64 = 0

  /// Output only. The minimum of the population values.
  public var min: Double = 0

  /// Output only. The maximum of the population values.
  public var max: Double = 0

  /// Output only. The arithmetic mean of the values in the population.
  public var mean: Double = 0

  /// Output only. The median of the values in the population.
  public var median: Double = 0

  /// Output only. The 5th percentile of the values in the population.
  public var p5: Double = 0

  /// Output only. The 95th percentile of the values in the population.
  public var p95: Double = 0

  /// Output only. Defines the histogram bucket.
  public var buckets: [Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution.DatasetBucket] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Dataset bucket used to create a histogram for the distribution given a
  /// population of values.
  public struct DatasetBucket: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Output only. Number of values in the bucket.
    public var count: Double = 0

    /// Output only. Left bound of the bucket.
    public var left: Double = 0

    /// Output only. Right bound of the bucket.
    public var right: Double = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}
}

/// Tuning data statistics for Supervised Tuning.
public struct Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. Number of examples in the tuning dataset.
  public var tuningDatasetExampleCount: Int64 {
    get {return _storage._tuningDatasetExampleCount}
    set {_uniqueStorage()._tuningDatasetExampleCount = newValue}
  }

  /// Output only. Number of tuning characters in the tuning dataset.
  public var totalTuningCharacterCount: Int64 {
    get {return _storage._totalTuningCharacterCount}
    set {_uniqueStorage()._totalTuningCharacterCount = newValue}
  }

  /// Output only. Number of billable characters in the tuning dataset.
  ///
  /// NOTE: This field was marked as deprecated in the .proto file.
  public var totalBillableCharacterCount: Int64 {
    get {return _storage._totalBillableCharacterCount}
    set {_uniqueStorage()._totalBillableCharacterCount = newValue}
  }

  /// Output only. Number of billable tokens in the tuning dataset.
  public var totalBillableTokenCount: Int64 {
    get {return _storage._totalBillableTokenCount}
    set {_uniqueStorage()._totalBillableTokenCount = newValue}
  }

  /// Output only. Number of tuning steps for this Tuning Job.
  public var tuningStepCount: Int64 {
    get {return _storage._tuningStepCount}
    set {_uniqueStorage()._tuningStepCount = newValue}
  }

  /// Output only. Dataset distributions for the user input tokens.
  public var userInputTokenDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution {
    get {return _storage._userInputTokenDistribution ?? Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution()}
    set {_uniqueStorage()._userInputTokenDistribution = newValue}
  }
  /// Returns true if `userInputTokenDistribution` has been explicitly set.
  public var hasUserInputTokenDistribution: Bool {return _storage._userInputTokenDistribution != nil}
  /// Clears the value of `userInputTokenDistribution`. Subsequent reads from it will return its default value.
  public mutating func clearUserInputTokenDistribution() {_uniqueStorage()._userInputTokenDistribution = nil}

  /// Output only. Dataset distributions for the user output tokens.
  public var userOutputTokenDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution {
    get {return _storage._userOutputTokenDistribution ?? Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution()}
    set {_uniqueStorage()._userOutputTokenDistribution = newValue}
  }
  /// Returns true if `userOutputTokenDistribution` has been explicitly set.
  public var hasUserOutputTokenDistribution: Bool {return _storage._userOutputTokenDistribution != nil}
  /// Clears the value of `userOutputTokenDistribution`. Subsequent reads from it will return its default value.
  public mutating func clearUserOutputTokenDistribution() {_uniqueStorage()._userOutputTokenDistribution = nil}

  /// Output only. Dataset distributions for the messages per example.
  public var userMessagePerExampleDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution {
    get {return _storage._userMessagePerExampleDistribution ?? Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution()}
    set {_uniqueStorage()._userMessagePerExampleDistribution = newValue}
  }
  /// Returns true if `userMessagePerExampleDistribution` has been explicitly set.
  public var hasUserMessagePerExampleDistribution: Bool {return _storage._userMessagePerExampleDistribution != nil}
  /// Clears the value of `userMessagePerExampleDistribution`. Subsequent reads from it will return its default value.
  public mutating func clearUserMessagePerExampleDistribution() {_uniqueStorage()._userMessagePerExampleDistribution = nil}

  /// Output only. Sample user messages in the training dataset uri.
  public var userDatasetExamples: [Google_Cloud_Aiplatform_V1_Content] {
    get {return _storage._userDatasetExamples}
    set {_uniqueStorage()._userDatasetExamples = newValue}
  }

  /// The number of examples in the dataset that have been truncated by any
  /// amount.
  public var totalTruncatedExampleCount: Int64 {
    get {return _storage._totalTruncatedExampleCount}
    set {_uniqueStorage()._totalTruncatedExampleCount = newValue}
  }

  /// A partial sample of the indices (starting from 1) of the truncated
  /// examples.
  public var truncatedExampleIndices: [Int64] {
    get {return _storage._truncatedExampleIndices}
    set {_uniqueStorage()._truncatedExampleIndices = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// The tuning data statistic values for
/// [TuningJob][google.cloud.aiplatform.v1.TuningJob].
public struct Google_Cloud_Aiplatform_V1_TuningDataStats: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var tuningDataStats: Google_Cloud_Aiplatform_V1_TuningDataStats.OneOf_TuningDataStats? = nil

  /// The SFT Tuning data stats.
  public var supervisedTuningDataStats: Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats {
    get {
      if case .supervisedTuningDataStats(let v)? = tuningDataStats {return v}
      return Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats()
    }
    set {tuningDataStats = .supervisedTuningDataStats(newValue)}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OneOf_TuningDataStats: Equatable, Sendable {
    /// The SFT Tuning data stats.
    case supervisedTuningDataStats(Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats)

  }

  public init() {}
}

/// Hyperparameters for SFT.
public struct Google_Cloud_Aiplatform_V1_SupervisedHyperParameters: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Optional. Number of complete passes the model makes over the entire
  /// training dataset during training.
  public var epochCount: Int64 = 0

  /// Optional. Multiplier for adjusting the default learning rate.
  public var learningRateMultiplier: Double = 0

  /// Optional. Adapter size for tuning.
  public var adapterSize: Google_Cloud_Aiplatform_V1_SupervisedHyperParameters.AdapterSize = .unspecified

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Supported adapter sizes for tuning.
  public enum AdapterSize: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int

    /// Adapter size is unspecified.
    case unspecified // = 0

    /// Adapter size 1.
    case one // = 1

    /// Adapter size 4.
    case four // = 2

    /// Adapter size 8.
    case eight // = 3

    /// Adapter size 16.
    case sixteen // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .one
      case 2: self = .four
      case 3: self = .eight
      case 4: self = .sixteen
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .one: return 1
      case .four: return 2
      case .eight: return 3
      case .sixteen: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Google_Cloud_Aiplatform_V1_SupervisedHyperParameters.AdapterSize] = [
      .unspecified,
      .one,
      .four,
      .eight,
      .sixteen,
    ]

  }

  public init() {}
}

/// Tuning Spec for Supervised Tuning.
public struct Google_Cloud_Aiplatform_V1_SupervisedTuningSpec: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. Cloud Storage path to file containing training dataset for
  /// tuning. The dataset must be formatted as a JSONL file.
  public var trainingDatasetUri: String = String()

  /// Optional. Cloud Storage path to file containing validation dataset for
  /// tuning. The dataset must be formatted as a JSONL file.
  public var validationDatasetUri: String = String()

  /// Optional. Hyperparameters for SFT.
  public var hyperParameters: Google_Cloud_Aiplatform_V1_SupervisedHyperParameters {
    get {return _hyperParameters ?? Google_Cloud_Aiplatform_V1_SupervisedHyperParameters()}
    set {_hyperParameters = newValue}
  }
  /// Returns true if `hyperParameters` has been explicitly set.
  public var hasHyperParameters: Bool {return self._hyperParameters != nil}
  /// Clears the value of `hyperParameters`. Subsequent reads from it will return its default value.
  public mutating func clearHyperParameters() {self._hyperParameters = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _hyperParameters: Google_Cloud_Aiplatform_V1_SupervisedHyperParameters? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_TuningJob: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".TuningJob"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    4: .standard(proto: "base_model"),
    5: .standard(proto: "supervised_tuning_spec"),
    1: .same(proto: "name"),
    2: .standard(proto: "tuned_model_display_name"),
    3: .same(proto: "description"),
    6: .same(proto: "state"),
    7: .standard(proto: "create_time"),
    8: .standard(proto: "start_time"),
    9: .standard(proto: "end_time"),
    10: .standard(proto: "update_time"),
    11: .same(proto: "error"),
    12: .same(proto: "labels"),
    13: .same(proto: "experiment"),
    14: .standard(proto: "tuned_model"),
    15: .standard(proto: "tuning_data_stats"),
    16: .standard(proto: "encryption_spec"),
  ]

  fileprivate class _StorageClass {
    var _sourceModel: Google_Cloud_Aiplatform_V1_TuningJob.OneOf_SourceModel?
    var _tuningSpec: Google_Cloud_Aiplatform_V1_TuningJob.OneOf_TuningSpec?
    var _name: String = String()
    var _tunedModelDisplayName: String = String()
    var _description_p: String = String()
    var _state: Google_Cloud_Aiplatform_V1_JobState = .unspecified
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _startTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _endTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _error: Google_Rpc_Status? = nil
    var _labels: Dictionary<String,String> = [:]
    var _experiment: String = String()
    var _tunedModel: Google_Cloud_Aiplatform_V1_TunedModel? = nil
    var _tuningDataStats: Google_Cloud_Aiplatform_V1_TuningDataStats? = nil
    var _encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec? = nil

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _sourceModel = source._sourceModel
      _tuningSpec = source._tuningSpec
      _name = source._name
      _tunedModelDisplayName = source._tunedModelDisplayName
      _description_p = source._description_p
      _state = source._state
      _createTime = source._createTime
      _startTime = source._startTime
      _endTime = source._endTime
      _updateTime = source._updateTime
      _error = source._error
      _labels = source._labels
      _experiment = source._experiment
      _tunedModel = source._tunedModel
      _tuningDataStats = source._tuningDataStats
      _encryptionSpec = source._encryptionSpec
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._tunedModelDisplayName) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 4: try {
          var v: String?
          try decoder.decodeSingularStringField(value: &v)
          if let v = v {
            if _storage._sourceModel != nil {try decoder.handleConflictingOneOf()}
            _storage._sourceModel = .baseModel(v)
          }
        }()
        case 5: try {
          var v: Google_Cloud_Aiplatform_V1_SupervisedTuningSpec?
          var hadOneofValue = false
          if let current = _storage._tuningSpec {
            hadOneofValue = true
            if case .supervisedTuningSpec(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._tuningSpec = .supervisedTuningSpec(v)
          }
        }()
        case 6: try { try decoder.decodeSingularEnumField(value: &_storage._state) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._startTime) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._endTime) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._updateTime) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._error) }()
        case 12: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._labels) }()
        case 13: try { try decoder.decodeSingularStringField(value: &_storage._experiment) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._tunedModel) }()
        case 15: try { try decoder.decodeSingularMessageField(value: &_storage._tuningDataStats) }()
        case 16: try { try decoder.decodeSingularMessageField(value: &_storage._encryptionSpec) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._tunedModelDisplayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._tunedModelDisplayName, fieldNumber: 2)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 3)
      }
      try { if case .baseModel(let v)? = _storage._sourceModel {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      } }()
      try { if case .supervisedTuningSpec(let v)? = _storage._tuningSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      if _storage._state != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._state, fieldNumber: 6)
      }
      try { if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._startTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._endTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._updateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._error {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      } }()
      if !_storage._labels.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._labels, fieldNumber: 12)
      }
      if !_storage._experiment.isEmpty {
        try visitor.visitSingularStringField(value: _storage._experiment, fieldNumber: 13)
      }
      try { if let v = _storage._tunedModel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      } }()
      try { if let v = _storage._tuningDataStats {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      } }()
      try { if let v = _storage._encryptionSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_TuningJob, rhs: Google_Cloud_Aiplatform_V1_TuningJob) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._sourceModel != rhs_storage._sourceModel {return false}
        if _storage._tuningSpec != rhs_storage._tuningSpec {return false}
        if _storage._name != rhs_storage._name {return false}
        if _storage._tunedModelDisplayName != rhs_storage._tunedModelDisplayName {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._state != rhs_storage._state {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._startTime != rhs_storage._startTime {return false}
        if _storage._endTime != rhs_storage._endTime {return false}
        if _storage._updateTime != rhs_storage._updateTime {return false}
        if _storage._error != rhs_storage._error {return false}
        if _storage._labels != rhs_storage._labels {return false}
        if _storage._experiment != rhs_storage._experiment {return false}
        if _storage._tunedModel != rhs_storage._tunedModel {return false}
        if _storage._tuningDataStats != rhs_storage._tuningDataStats {return false}
        if _storage._encryptionSpec != rhs_storage._encryptionSpec {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_TunedModel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".TunedModel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "model"),
    2: .same(proto: "endpoint"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.model) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.endpoint) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.model.isEmpty {
      try visitor.visitSingularStringField(value: self.model, fieldNumber: 1)
    }
    if !self.endpoint.isEmpty {
      try visitor.visitSingularStringField(value: self.endpoint, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_TunedModel, rhs: Google_Cloud_Aiplatform_V1_TunedModel) -> Bool {
    if lhs.model != rhs.model {return false}
    if lhs.endpoint != rhs.endpoint {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SupervisedTuningDatasetDistribution"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "sum"),
    9: .standard(proto: "billable_sum"),
    2: .same(proto: "min"),
    3: .same(proto: "max"),
    4: .same(proto: "mean"),
    5: .same(proto: "median"),
    6: .same(proto: "p5"),
    7: .same(proto: "p95"),
    8: .same(proto: "buckets"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.sum) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.min) }()
      case 3: try { try decoder.decodeSingularDoubleField(value: &self.max) }()
      case 4: try { try decoder.decodeSingularDoubleField(value: &self.mean) }()
      case 5: try { try decoder.decodeSingularDoubleField(value: &self.median) }()
      case 6: try { try decoder.decodeSingularDoubleField(value: &self.p5) }()
      case 7: try { try decoder.decodeSingularDoubleField(value: &self.p95) }()
      case 8: try { try decoder.decodeRepeatedMessageField(value: &self.buckets) }()
      case 9: try { try decoder.decodeSingularInt64Field(value: &self.billableSum) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.sum != 0 {
      try visitor.visitSingularInt64Field(value: self.sum, fieldNumber: 1)
    }
    if self.min.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.min, fieldNumber: 2)
    }
    if self.max.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.max, fieldNumber: 3)
    }
    if self.mean.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.mean, fieldNumber: 4)
    }
    if self.median.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.median, fieldNumber: 5)
    }
    if self.p5.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.p5, fieldNumber: 6)
    }
    if self.p95.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.p95, fieldNumber: 7)
    }
    if !self.buckets.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.buckets, fieldNumber: 8)
    }
    if self.billableSum != 0 {
      try visitor.visitSingularInt64Field(value: self.billableSum, fieldNumber: 9)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution, rhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution) -> Bool {
    if lhs.sum != rhs.sum {return false}
    if lhs.billableSum != rhs.billableSum {return false}
    if lhs.min != rhs.min {return false}
    if lhs.max != rhs.max {return false}
    if lhs.mean != rhs.mean {return false}
    if lhs.median != rhs.median {return false}
    if lhs.p5 != rhs.p5 {return false}
    if lhs.p95 != rhs.p95 {return false}
    if lhs.buckets != rhs.buckets {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution.DatasetBucket: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution.protoMessageName + ".DatasetBucket"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "count"),
    2: .same(proto: "left"),
    3: .same(proto: "right"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularDoubleField(value: &self.count) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.left) }()
      case 3: try { try decoder.decodeSingularDoubleField(value: &self.right) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.count.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.count, fieldNumber: 1)
    }
    if self.left.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.left, fieldNumber: 2)
    }
    if self.right.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.right, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution.DatasetBucket, rhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution.DatasetBucket) -> Bool {
    if lhs.count != rhs.count {return false}
    if lhs.left != rhs.left {return false}
    if lhs.right != rhs.right {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SupervisedTuningDataStats"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "tuning_dataset_example_count"),
    2: .standard(proto: "total_tuning_character_count"),
    3: .standard(proto: "total_billable_character_count"),
    9: .standard(proto: "total_billable_token_count"),
    4: .standard(proto: "tuning_step_count"),
    5: .standard(proto: "user_input_token_distribution"),
    6: .standard(proto: "user_output_token_distribution"),
    7: .standard(proto: "user_message_per_example_distribution"),
    8: .standard(proto: "user_dataset_examples"),
    10: .standard(proto: "total_truncated_example_count"),
    11: .standard(proto: "truncated_example_indices"),
  ]

  fileprivate class _StorageClass {
    var _tuningDatasetExampleCount: Int64 = 0
    var _totalTuningCharacterCount: Int64 = 0
    var _totalBillableCharacterCount: Int64 = 0
    var _totalBillableTokenCount: Int64 = 0
    var _tuningStepCount: Int64 = 0
    var _userInputTokenDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution? = nil
    var _userOutputTokenDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution? = nil
    var _userMessagePerExampleDistribution: Google_Cloud_Aiplatform_V1_SupervisedTuningDatasetDistribution? = nil
    var _userDatasetExamples: [Google_Cloud_Aiplatform_V1_Content] = []
    var _totalTruncatedExampleCount: Int64 = 0
    var _truncatedExampleIndices: [Int64] = []

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _tuningDatasetExampleCount = source._tuningDatasetExampleCount
      _totalTuningCharacterCount = source._totalTuningCharacterCount
      _totalBillableCharacterCount = source._totalBillableCharacterCount
      _totalBillableTokenCount = source._totalBillableTokenCount
      _tuningStepCount = source._tuningStepCount
      _userInputTokenDistribution = source._userInputTokenDistribution
      _userOutputTokenDistribution = source._userOutputTokenDistribution
      _userMessagePerExampleDistribution = source._userMessagePerExampleDistribution
      _userDatasetExamples = source._userDatasetExamples
      _totalTruncatedExampleCount = source._totalTruncatedExampleCount
      _truncatedExampleIndices = source._truncatedExampleIndices
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularInt64Field(value: &_storage._tuningDatasetExampleCount) }()
        case 2: try { try decoder.decodeSingularInt64Field(value: &_storage._totalTuningCharacterCount) }()
        case 3: try { try decoder.decodeSingularInt64Field(value: &_storage._totalBillableCharacterCount) }()
        case 4: try { try decoder.decodeSingularInt64Field(value: &_storage._tuningStepCount) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._userInputTokenDistribution) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._userOutputTokenDistribution) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._userMessagePerExampleDistribution) }()
        case 8: try { try decoder.decodeRepeatedMessageField(value: &_storage._userDatasetExamples) }()
        case 9: try { try decoder.decodeSingularInt64Field(value: &_storage._totalBillableTokenCount) }()
        case 10: try { try decoder.decodeSingularInt64Field(value: &_storage._totalTruncatedExampleCount) }()
        case 11: try { try decoder.decodeRepeatedInt64Field(value: &_storage._truncatedExampleIndices) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if _storage._tuningDatasetExampleCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._tuningDatasetExampleCount, fieldNumber: 1)
      }
      if _storage._totalTuningCharacterCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._totalTuningCharacterCount, fieldNumber: 2)
      }
      if _storage._totalBillableCharacterCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._totalBillableCharacterCount, fieldNumber: 3)
      }
      if _storage._tuningStepCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._tuningStepCount, fieldNumber: 4)
      }
      try { if let v = _storage._userInputTokenDistribution {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._userOutputTokenDistribution {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._userMessagePerExampleDistribution {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      if !_storage._userDatasetExamples.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._userDatasetExamples, fieldNumber: 8)
      }
      if _storage._totalBillableTokenCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._totalBillableTokenCount, fieldNumber: 9)
      }
      if _storage._totalTruncatedExampleCount != 0 {
        try visitor.visitSingularInt64Field(value: _storage._totalTruncatedExampleCount, fieldNumber: 10)
      }
      if !_storage._truncatedExampleIndices.isEmpty {
        try visitor.visitPackedInt64Field(value: _storage._truncatedExampleIndices, fieldNumber: 11)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats, rhs: Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tuningDatasetExampleCount != rhs_storage._tuningDatasetExampleCount {return false}
        if _storage._totalTuningCharacterCount != rhs_storage._totalTuningCharacterCount {return false}
        if _storage._totalBillableCharacterCount != rhs_storage._totalBillableCharacterCount {return false}
        if _storage._totalBillableTokenCount != rhs_storage._totalBillableTokenCount {return false}
        if _storage._tuningStepCount != rhs_storage._tuningStepCount {return false}
        if _storage._userInputTokenDistribution != rhs_storage._userInputTokenDistribution {return false}
        if _storage._userOutputTokenDistribution != rhs_storage._userOutputTokenDistribution {return false}
        if _storage._userMessagePerExampleDistribution != rhs_storage._userMessagePerExampleDistribution {return false}
        if _storage._userDatasetExamples != rhs_storage._userDatasetExamples {return false}
        if _storage._totalTruncatedExampleCount != rhs_storage._totalTruncatedExampleCount {return false}
        if _storage._truncatedExampleIndices != rhs_storage._truncatedExampleIndices {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_TuningDataStats: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".TuningDataStats"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "supervised_tuning_data_stats"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try {
        var v: Google_Cloud_Aiplatform_V1_SupervisedTuningDataStats?
        var hadOneofValue = false
        if let current = self.tuningDataStats {
          hadOneofValue = true
          if case .supervisedTuningDataStats(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {
          if hadOneofValue {try decoder.handleConflictingOneOf()}
          self.tuningDataStats = .supervisedTuningDataStats(v)
        }
      }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if case .supervisedTuningDataStats(let v)? = self.tuningDataStats {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_TuningDataStats, rhs: Google_Cloud_Aiplatform_V1_TuningDataStats) -> Bool {
    if lhs.tuningDataStats != rhs.tuningDataStats {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_SupervisedHyperParameters: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SupervisedHyperParameters"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "epoch_count"),
    2: .standard(proto: "learning_rate_multiplier"),
    3: .standard(proto: "adapter_size"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.epochCount) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.learningRateMultiplier) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.adapterSize) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.epochCount != 0 {
      try visitor.visitSingularInt64Field(value: self.epochCount, fieldNumber: 1)
    }
    if self.learningRateMultiplier.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.learningRateMultiplier, fieldNumber: 2)
    }
    if self.adapterSize != .unspecified {
      try visitor.visitSingularEnumField(value: self.adapterSize, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_SupervisedHyperParameters, rhs: Google_Cloud_Aiplatform_V1_SupervisedHyperParameters) -> Bool {
    if lhs.epochCount != rhs.epochCount {return false}
    if lhs.learningRateMultiplier != rhs.learningRateMultiplier {return false}
    if lhs.adapterSize != rhs.adapterSize {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_SupervisedHyperParameters.AdapterSize: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ADAPTER_SIZE_UNSPECIFIED"),
    1: .same(proto: "ADAPTER_SIZE_ONE"),
    2: .same(proto: "ADAPTER_SIZE_FOUR"),
    3: .same(proto: "ADAPTER_SIZE_EIGHT"),
    4: .same(proto: "ADAPTER_SIZE_SIXTEEN"),
  ]
}

extension Google_Cloud_Aiplatform_V1_SupervisedTuningSpec: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SupervisedTuningSpec"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "training_dataset_uri"),
    2: .standard(proto: "validation_dataset_uri"),
    3: .standard(proto: "hyper_parameters"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.trainingDatasetUri) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.validationDatasetUri) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._hyperParameters) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.trainingDatasetUri.isEmpty {
      try visitor.visitSingularStringField(value: self.trainingDatasetUri, fieldNumber: 1)
    }
    if !self.validationDatasetUri.isEmpty {
      try visitor.visitSingularStringField(value: self.validationDatasetUri, fieldNumber: 2)
    }
    try { if let v = self._hyperParameters {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_SupervisedTuningSpec, rhs: Google_Cloud_Aiplatform_V1_SupervisedTuningSpec) -> Bool {
    if lhs.trainingDatasetUri != rhs.trainingDatasetUri {return false}
    if lhs.validationDatasetUri != rhs.validationDatasetUri {return false}
    if lhs._hyperParameters != rhs._hyperParameters {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
