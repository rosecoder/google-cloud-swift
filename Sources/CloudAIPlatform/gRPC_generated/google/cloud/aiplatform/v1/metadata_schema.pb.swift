// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/metadata_schema.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Instance of a general MetadataSchema.
public struct Google_Cloud_Aiplatform_V1_MetadataSchema: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the MetadataSchema.
  public var name: String = String()

  /// The version of the MetadataSchema. The version's format must match
  /// the following regular expression: `^[0-9]+[.][0-9]+[.][0-9]+$`, which would
  /// allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
  public var schemaVersion: String = String()

  /// Required. The raw YAML string representation of the MetadataSchema. The
  /// combination of [MetadataSchema.version] and the schema name given by
  /// `title` in [MetadataSchema.schema] must be unique within a MetadataStore.
  ///
  /// The schema is defined as an OpenAPI 3.0.2
  /// [MetadataSchema
  /// Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
  public var schema: String = String()

  /// The type of the MetadataSchema. This is a property that identifies which
  /// metadata types will use the MetadataSchema.
  public var schemaType: Google_Cloud_Aiplatform_V1_MetadataSchema.MetadataSchemaType = .unspecified

  /// Output only. Timestamp when this MetadataSchema was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return self._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {self._createTime = nil}

  /// Description of the Metadata Schema
  public var description_p: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Describes the type of the MetadataSchema.
  public enum MetadataSchemaType: SwiftProtobuf.Enum, Swift.CaseIterable {
    public typealias RawValue = Int

    /// Unspecified type for the MetadataSchema.
    case unspecified // = 0

    /// A type indicating that the MetadataSchema will be used by Artifacts.
    case artifactType // = 1

    /// A typee indicating that the MetadataSchema will be used by Executions.
    case executionType // = 2

    /// A state indicating that the MetadataSchema will be used by Contexts.
    case contextType // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .artifactType
      case 2: self = .executionType
      case 3: self = .contextType
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .artifactType: return 1
      case .executionType: return 2
      case .contextType: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    public static let allCases: [Google_Cloud_Aiplatform_V1_MetadataSchema.MetadataSchemaType] = [
      .unspecified,
      .artifactType,
      .executionType,
      .contextType,
    ]

  }

  public init() {}

  fileprivate var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_MetadataSchema: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".MetadataSchema"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "schema_version"),
    3: .same(proto: "schema"),
    4: .standard(proto: "schema_type"),
    5: .standard(proto: "create_time"),
    6: .same(proto: "description"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.schemaVersion) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.schema) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.schemaType) }()
      case 5: try { try decoder.decodeSingularMessageField(value: &self._createTime) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.description_p) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.schemaVersion.isEmpty {
      try visitor.visitSingularStringField(value: self.schemaVersion, fieldNumber: 2)
    }
    if !self.schema.isEmpty {
      try visitor.visitSingularStringField(value: self.schema, fieldNumber: 3)
    }
    if self.schemaType != .unspecified {
      try visitor.visitSingularEnumField(value: self.schemaType, fieldNumber: 4)
    }
    try { if let v = self._createTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    } }()
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_MetadataSchema, rhs: Google_Cloud_Aiplatform_V1_MetadataSchema) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.schemaVersion != rhs.schemaVersion {return false}
    if lhs.schema != rhs.schema {return false}
    if lhs.schemaType != rhs.schemaType {return false}
    if lhs._createTime != rhs._createTime {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_MetadataSchema.MetadataSchemaType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "METADATA_SCHEMA_TYPE_UNSPECIFIED"),
    1: .same(proto: "ARTIFACT_TYPE"),
    2: .same(proto: "EXECUTION_TYPE"),
    3: .same(proto: "CONTEXT_TYPE"),
  ]
}
