// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/genai_tuning_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf
import SwiftProtobuf

// MARK: - google.cloud.aiplatform.v1.GenAiTuningService

/// Namespace containing generated types for the "google.cloud.aiplatform.v1.GenAiTuningService" service.
public enum Google_Cloud_Aiplatform_V1_GenAiTuningService {
    /// Service descriptor for the "google.cloud.aiplatform.v1.GenAiTuningService" service.
    public static let descriptor = GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService")
    /// Namespace for method metadata.
    public enum Method {
        /// Namespace for "CreateTuningJob" metadata.
        public enum CreateTuningJob {
            /// Request type for "CreateTuningJob".
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateTuningJobRequest
            /// Response type for "CreateTuningJob".
            public typealias Output = Google_Cloud_Aiplatform_V1_TuningJob
            /// Descriptor for "CreateTuningJob".
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService"),
                method: "CreateTuningJob"
            )
        }
        /// Namespace for "GetTuningJob" metadata.
        public enum GetTuningJob {
            /// Request type for "GetTuningJob".
            public typealias Input = Google_Cloud_Aiplatform_V1_GetTuningJobRequest
            /// Response type for "GetTuningJob".
            public typealias Output = Google_Cloud_Aiplatform_V1_TuningJob
            /// Descriptor for "GetTuningJob".
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService"),
                method: "GetTuningJob"
            )
        }
        /// Namespace for "ListTuningJobs" metadata.
        public enum ListTuningJobs {
            /// Request type for "ListTuningJobs".
            public typealias Input = Google_Cloud_Aiplatform_V1_ListTuningJobsRequest
            /// Response type for "ListTuningJobs".
            public typealias Output = Google_Cloud_Aiplatform_V1_ListTuningJobsResponse
            /// Descriptor for "ListTuningJobs".
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService"),
                method: "ListTuningJobs"
            )
        }
        /// Namespace for "CancelTuningJob" metadata.
        public enum CancelTuningJob {
            /// Request type for "CancelTuningJob".
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelTuningJobRequest
            /// Response type for "CancelTuningJob".
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            /// Descriptor for "CancelTuningJob".
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService"),
                method: "CancelTuningJob"
            )
        }
        /// Descriptors for all methods in the "google.cloud.aiplatform.v1.GenAiTuningService" service.
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateTuningJob.descriptor,
            GetTuningJob.descriptor,
            ListTuningJobs.descriptor,
            CancelTuningJob.descriptor
        ]
    }
}

extension GRPCCore.ServiceDescriptor {
    /// Service descriptor for the "google.cloud.aiplatform.v1.GenAiTuningService" service.
    public static let google_cloud_aiplatform_v1_GenAiTuningService = GRPCCore.ServiceDescriptor(fullyQualifiedService: "google.cloud.aiplatform.v1.GenAiTuningService")
}

// MARK: google.cloud.aiplatform.v1.GenAiTuningService (client)

extension Google_Cloud_Aiplatform_V1_GenAiTuningService {
    /// Generated client protocol for the "google.cloud.aiplatform.v1.GenAiTuningService" service.
    ///
    /// You don't need to implement this protocol directly, use the generated
    /// implementation, ``Client``.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > A service for creating and managing GenAI Tuning Jobs.
    public protocol ClientProtocol: Sendable {
        /// Call the "CreateTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Creates a TuningJob. A created TuningJob right away will be attempted to
        /// > be run.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CreateTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_CreateTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_TuningJob` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        func createTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
            options: GRPCCore.CallOptions,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result
        ) async throws -> Result where Result: Sendable

        /// Call the "GetTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Gets a TuningJob.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_GetTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_GetTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_TuningJob` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        func getTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
            options: GRPCCore.CallOptions,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result
        ) async throws -> Result where Result: Sendable

        /// Call the "ListTuningJobs" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Lists TuningJobs in a Location.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_ListTuningJobsRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_ListTuningJobsRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_ListTuningJobsResponse` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        func listTuningJobs<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>,
            options: GRPCCore.CallOptions,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> Result
        ) async throws -> Result where Result: Sendable

        /// Call the "CancelTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Cancels a TuningJob.
        /// > Starts asynchronous cancellation on the TuningJob. The server makes a best
        /// > effort to cancel the job, but success is not guaranteed. Clients can use
        /// > [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
        /// > or other methods to check whether the cancellation succeeded or whether the
        /// > job completed despite cancellation. On successful cancellation, the
        /// > TuningJob is not deleted; instead it becomes a job with a
        /// > [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
        /// > [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
        /// > `Code.CANCELLED`, and
        /// > [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
        /// > `CANCELLED`.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CancelTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_CancelTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `SwiftProtobuf.Google_Protobuf_Empty` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        func cancelTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
            options: GRPCCore.CallOptions,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result
        ) async throws -> Result where Result: Sendable
    }

    /// Generated client for the "google.cloud.aiplatform.v1.GenAiTuningService" service.
    ///
    /// The ``Client`` provides an implementation of ``ClientProtocol`` which wraps
    /// a `GRPCCore.GRPCCClient`. The underlying `GRPCClient` provides the long-lived
    /// means of communication with the remote peer.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > A service for creating and managing GenAI Tuning Jobs.
    public struct Client<Transport>: ClientProtocol where Transport: GRPCCore.ClientTransport {
        private let client: GRPCCore.GRPCClient<Transport>

        /// Creates a new client wrapping the provided `GRPCCore.GRPCClient`.
        ///
        /// - Parameters:
        ///   - client: A `GRPCCore.GRPCClient` providing a communication channel to the service.
        public init(wrapping client: GRPCCore.GRPCClient<Transport>) {
            self.client = client
        }

        /// Call the "CreateTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Creates a TuningJob. A created TuningJob right away will be attempted to
        /// > be run.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CreateTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_CreateTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_TuningJob` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        public func createTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
            options: GRPCCore.CallOptions = .defaults,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
                try response.message
            }
        ) async throws -> Result where Result: Sendable {
            try await self.client.unary(
                request: request,
                descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.CreateTuningJob.descriptor,
                serializer: serializer,
                deserializer: deserializer,
                options: options,
                onResponse: handleResponse
            )
        }

        /// Call the "GetTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Gets a TuningJob.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_GetTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_GetTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_TuningJob` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        public func getTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
            options: GRPCCore.CallOptions = .defaults,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
                try response.message
            }
        ) async throws -> Result where Result: Sendable {
            try await self.client.unary(
                request: request,
                descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.GetTuningJob.descriptor,
                serializer: serializer,
                deserializer: deserializer,
                options: options,
                onResponse: handleResponse
            )
        }

        /// Call the "ListTuningJobs" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Lists TuningJobs in a Location.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_ListTuningJobsRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_ListTuningJobsRequest` messages.
        ///   - deserializer: A deserializer for `Google_Cloud_Aiplatform_V1_ListTuningJobsResponse` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        public func listTuningJobs<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
            deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>,
            options: GRPCCore.CallOptions = .defaults,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> Result = { response in
                try response.message
            }
        ) async throws -> Result where Result: Sendable {
            try await self.client.unary(
                request: request,
                descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.ListTuningJobs.descriptor,
                serializer: serializer,
                deserializer: deserializer,
                options: options,
                onResponse: handleResponse
            )
        }

        /// Call the "CancelTuningJob" method.
        ///
        /// > Source IDL Documentation:
        /// >
        /// > Cancels a TuningJob.
        /// > Starts asynchronous cancellation on the TuningJob. The server makes a best
        /// > effort to cancel the job, but success is not guaranteed. Clients can use
        /// > [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
        /// > or other methods to check whether the cancellation succeeded or whether the
        /// > job completed despite cancellation. On successful cancellation, the
        /// > TuningJob is not deleted; instead it becomes a job with a
        /// > [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
        /// > [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
        /// > `Code.CANCELLED`, and
        /// > [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
        /// > `CANCELLED`.
        ///
        /// - Parameters:
        ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CancelTuningJobRequest` message.
        ///   - serializer: A serializer for `Google_Cloud_Aiplatform_V1_CancelTuningJobRequest` messages.
        ///   - deserializer: A deserializer for `SwiftProtobuf.Google_Protobuf_Empty` messages.
        ///   - options: Options to apply to this RPC.
        ///   - handleResponse: A closure which handles the response, the result of which is
        ///       returned to the caller. Returning from the closure will cancel the RPC if it
        ///       hasn't already finished.
        /// - Returns: The result of `handleResponse`.
        public func cancelTuningJob<Result>(
            request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
            serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
            deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
            options: GRPCCore.CallOptions = .defaults,
            onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = { response in
                try response.message
            }
        ) async throws -> Result where Result: Sendable {
            try await self.client.unary(
                request: request,
                descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.CancelTuningJob.descriptor,
                serializer: serializer,
                deserializer: deserializer,
                options: options,
                onResponse: handleResponse
            )
        }
    }
}

// Helpers providing default arguments to 'ClientProtocol' methods.
extension Google_Cloud_Aiplatform_V1_GenAiTuningService.ClientProtocol {
    /// Call the "CreateTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Creates a TuningJob. A created TuningJob right away will be attempted to
    /// > be run.
    ///
    /// - Parameters:
    ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CreateTuningJobRequest` message.
    ///   - options: Options to apply to this RPC.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func createTuningJob<Result>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        try await self.createTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>(),
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "GetTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Gets a TuningJob.
    ///
    /// - Parameters:
    ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_GetTuningJobRequest` message.
    ///   - options: Options to apply to this RPC.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func getTuningJob<Result>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        try await self.getTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>(),
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "ListTuningJobs" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Lists TuningJobs in a Location.
    ///
    /// - Parameters:
    ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_ListTuningJobsRequest` message.
    ///   - options: Options to apply to this RPC.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func listTuningJobs<Result>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        try await self.listTuningJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>(),
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "CancelTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Cancels a TuningJob.
    /// > Starts asynchronous cancellation on the TuningJob. The server makes a best
    /// > effort to cancel the job, but success is not guaranteed. Clients can use
    /// > [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
    /// > or other methods to check whether the cancellation succeeded or whether the
    /// > job completed despite cancellation. On successful cancellation, the
    /// > TuningJob is not deleted; instead it becomes a job with a
    /// > [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
    /// > [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// > `Code.CANCELLED`, and
    /// > [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
    /// > `CANCELLED`.
    ///
    /// - Parameters:
    ///   - request: A request containing a single `Google_Cloud_Aiplatform_V1_CancelTuningJobRequest` message.
    ///   - options: Options to apply to this RPC.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func cancelTuningJob<Result>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        try await self.cancelTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            onResponse: handleResponse
        )
    }
}

// Helpers providing sugared APIs for 'ClientProtocol' methods.
extension Google_Cloud_Aiplatform_V1_GenAiTuningService.ClientProtocol {
    /// Call the "CreateTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Creates a TuningJob. A created TuningJob right away will be attempted to
    /// > be run.
    ///
    /// - Parameters:
    ///   - message: request message to send.
    ///   - metadata: Additional metadata to send, defaults to empty.
    ///   - options: Options to apply to this RPC, defaults to `.defaults`.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func createTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createTuningJob(
            request: request,
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "GetTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Gets a TuningJob.
    ///
    /// - Parameters:
    ///   - message: request message to send.
    ///   - metadata: Additional metadata to send, defaults to empty.
    ///   - options: Options to apply to this RPC, defaults to `.defaults`.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func getTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getTuningJob(
            request: request,
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "ListTuningJobs" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Lists TuningJobs in a Location.
    ///
    /// - Parameters:
    ///   - message: request message to send.
    ///   - metadata: Additional metadata to send, defaults to empty.
    ///   - options: Options to apply to this RPC, defaults to `.defaults`.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func listTuningJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListTuningJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listTuningJobs(
            request: request,
            options: options,
            onResponse: handleResponse
        )
    }

    /// Call the "CancelTuningJob" method.
    ///
    /// > Source IDL Documentation:
    /// >
    /// > Cancels a TuningJob.
    /// > Starts asynchronous cancellation on the TuningJob. The server makes a best
    /// > effort to cancel the job, but success is not guaranteed. Clients can use
    /// > [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
    /// > or other methods to check whether the cancellation succeeded or whether the
    /// > job completed despite cancellation. On successful cancellation, the
    /// > TuningJob is not deleted; instead it becomes a job with a
    /// > [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
    /// > [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// > `Code.CANCELLED`, and
    /// > [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
    /// > `CANCELLED`.
    ///
    /// - Parameters:
    ///   - message: request message to send.
    ///   - metadata: Additional metadata to send, defaults to empty.
    ///   - options: Options to apply to this RPC, defaults to `.defaults`.
    ///   - handleResponse: A closure which handles the response, the result of which is
    ///       returned to the caller. Returning from the closure will cancel the RPC if it
    ///       hasn't already finished.
    /// - Returns: The result of `handleResponse`.
    public func cancelTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = { response in
            try response.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelTuningJob(
            request: request,
            options: options,
            onResponse: handleResponse
        )
    }
}