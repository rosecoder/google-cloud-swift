// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/genai_tuning_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf
import SwiftProtobuf

public enum Google_Cloud_Aiplatform_V1_GenAiTuningService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_GenAiTuningService
    public enum Method {
        public enum CreateTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateTuningJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_TuningJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_GenAiTuningService.descriptor.fullyQualifiedService,
                method: "CreateTuningJob"
            )
        }
        public enum GetTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetTuningJobRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_TuningJob
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_GenAiTuningService.descriptor.fullyQualifiedService,
                method: "GetTuningJob"
            )
        }
        public enum ListTuningJobs {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListTuningJobsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListTuningJobsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_GenAiTuningService.descriptor.fullyQualifiedService,
                method: "ListTuningJobs"
            )
        }
        public enum CancelTuningJob {
            public typealias Input = Google_Cloud_Aiplatform_V1_CancelTuningJobRequest
            public typealias Output = SwiftProtobuf.Google_Protobuf_Empty
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_GenAiTuningService.descriptor.fullyQualifiedService,
                method: "CancelTuningJob"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateTuningJob.descriptor,
            GetTuningJob.descriptor,
            ListTuningJobs.descriptor,
            CancelTuningJob.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_GenAiTuningService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_GenAiTuningService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_GenAiTuningService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "GenAiTuningService"
    )
}

/// A service for creating and managing GenAI Tuning Jobs.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_GenAiTuningService_ClientProtocol: Sendable {
    /// Creates a TuningJob. A created TuningJob right away will be attempted to
    /// be run.
    func createTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a TuningJob.
    func getTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists TuningJobs in a Location.
    func listTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Cancels a TuningJob.
    /// Starts asynchronous cancellation on the TuningJob. The server makes a best
    /// effort to cancel the job, but success is not guaranteed. Clients can use
    /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation, the
    /// TuningJob is not deleted; instead it becomes a job with a
    /// [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
    /// `CANCELLED`.
    func cancelTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_GenAiTuningService.ClientProtocol {
    public func createTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>(),
            options: options,
            body
        )
    }
    
    public func getTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>(),
            options: options,
            body
        )
    }
    
    public func listTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listTuningJobs(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>(),
            options: options,
            body
        )
    }
    
    public func cancelTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.cancelTuningJob(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_GenAiTuningService.ClientProtocol {
    /// Creates a TuningJob. A created TuningJob right away will be attempted to
    /// be run.
    public func createTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a TuningJob.
    public func getTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists TuningJobs in a Location.
    public func listTuningJobs<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListTuningJobsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listTuningJobs(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Cancels a TuningJob.
    /// Starts asynchronous cancellation on the TuningJob. The server makes a best
    /// effort to cancel the job, but success is not guaranteed. Clients can use
    /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation, the
    /// TuningJob is not deleted; instead it becomes a job with a
    /// [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
    /// `CANCELLED`.
    public func cancelTuningJob<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CancelTuningJobRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.cancelTuningJob(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// A service for creating and managing GenAI Tuning Jobs.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_GenAiTuningService_Client: Google_Cloud_Aiplatform_V1_GenAiTuningService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates a TuningJob. A created TuningJob right away will be attempted to
    /// be run.
    public func createTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.CreateTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a TuningJob.
    public func getTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_TuningJob>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_TuningJob>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.GetTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists TuningJobs in a Location.
    public func listTuningJobs<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListTuningJobsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListTuningJobsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.ListTuningJobs.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Cancels a TuningJob.
    /// Starts asynchronous cancellation on the TuningJob. The server makes a best
    /// effort to cancel the job, but success is not guaranteed. Clients can use
    /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1.GenAiTuningService.GetTuningJob]
    /// or other methods to check whether the cancellation succeeded or whether the
    /// job completed despite cancellation. On successful cancellation, the
    /// TuningJob is not deleted; instead it becomes a job with a
    /// [TuningJob.error][google.cloud.aiplatform.v1.TuningJob.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    /// `Code.CANCELLED`, and
    /// [TuningJob.state][google.cloud.aiplatform.v1.TuningJob.state] is set to
    /// `CANCELLED`.
    public func cancelTuningJob<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CancelTuningJobRequest>,
        deserializer: some GRPCCore.MessageDeserializer<SwiftProtobuf.Google_Protobuf_Empty>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<SwiftProtobuf.Google_Protobuf_Empty>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_GenAiTuningService.Method.CancelTuningJob.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}
