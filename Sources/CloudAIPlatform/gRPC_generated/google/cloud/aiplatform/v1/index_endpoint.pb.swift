// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/index_endpoint.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Indexes are deployed into it. An IndexEndpoint can have multiple
/// DeployedIndexes.
public struct Google_Cloud_Aiplatform_V1_IndexEndpoint: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the IndexEndpoint.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Required. The display name of the IndexEndpoint.
  /// The name can be up to 128 characters long and can consist of any UTF-8
  /// characters.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// The description of the IndexEndpoint.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Output only. The indexes deployed in this endpoint.
  public var deployedIndexes: [Google_Cloud_Aiplatform_V1_DeployedIndex] {
    get {return _storage._deployedIndexes}
    set {_uniqueStorage()._deployedIndexes = newValue}
  }

  /// Used to perform consistent read-modify-write updates. If not set, a blind
  /// "overwrite" update happens.
  public var etag: String {
    get {return _storage._etag}
    set {_uniqueStorage()._etag = newValue}
  }

  /// The labels with user-defined metadata to organize your IndexEndpoints.
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  public var labels: Dictionary<String,String> {
    get {return _storage._labels}
    set {_uniqueStorage()._labels = newValue}
  }

  /// Output only. Timestamp when this IndexEndpoint was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Output only. Timestamp when this IndexEndpoint was last updated.
  /// This timestamp is not updated when the endpoint's DeployedIndexes are
  /// updated, e.g. due to updates of the original Indexes they are the
  /// deployments of.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return _storage._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {_uniqueStorage()._updateTime = nil}

  /// Optional. The full name of the Google Compute Engine
  /// [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
  /// to which the IndexEndpoint should be peered.
  ///
  /// Private services access must already be configured for the network. If left
  /// unspecified, the Endpoint is not peered with any network.
  ///
  /// [network][google.cloud.aiplatform.v1.IndexEndpoint.network] and
  /// [private_service_connect_config][google.cloud.aiplatform.v1.IndexEndpoint.private_service_connect_config]
  /// are mutually exclusive.
  ///
  /// [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
  /// `projects/{project}/global/networks/{network}`.
  /// Where {project} is a project number, as in '12345', and {network} is
  /// network name.
  public var network: String {
    get {return _storage._network}
    set {_uniqueStorage()._network = newValue}
  }

  /// Optional. Deprecated: If true, expose the IndexEndpoint via private service
  /// connect.
  ///
  /// Only one of the fields,
  /// [network][google.cloud.aiplatform.v1.IndexEndpoint.network] or
  /// [enable_private_service_connect][google.cloud.aiplatform.v1.IndexEndpoint.enable_private_service_connect],
  /// can be set.
  ///
  /// NOTE: This field was marked as deprecated in the .proto file.
  public var enablePrivateServiceConnect: Bool {
    get {return _storage._enablePrivateServiceConnect}
    set {_uniqueStorage()._enablePrivateServiceConnect = newValue}
  }

  /// Optional. Configuration for private service connect.
  ///
  /// [network][google.cloud.aiplatform.v1.IndexEndpoint.network] and
  /// [private_service_connect_config][google.cloud.aiplatform.v1.IndexEndpoint.private_service_connect_config]
  /// are mutually exclusive.
  public var privateServiceConnectConfig: Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig {
    get {return _storage._privateServiceConnectConfig ?? Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig()}
    set {_uniqueStorage()._privateServiceConnectConfig = newValue}
  }
  /// Returns true if `privateServiceConnectConfig` has been explicitly set.
  public var hasPrivateServiceConnectConfig: Bool {return _storage._privateServiceConnectConfig != nil}
  /// Clears the value of `privateServiceConnectConfig`. Subsequent reads from it will return its default value.
  public mutating func clearPrivateServiceConnectConfig() {_uniqueStorage()._privateServiceConnectConfig = nil}

  /// Optional. If true, the deployed index will be accessible through public
  /// endpoint.
  public var publicEndpointEnabled: Bool {
    get {return _storage._publicEndpointEnabled}
    set {_uniqueStorage()._publicEndpointEnabled = newValue}
  }

  /// Output only. If
  /// [public_endpoint_enabled][google.cloud.aiplatform.v1.IndexEndpoint.public_endpoint_enabled]
  /// is true, this field will be populated with the domain name to use for this
  /// index endpoint.
  public var publicEndpointDomainName: String {
    get {return _storage._publicEndpointDomainName}
    set {_uniqueStorage()._publicEndpointDomainName = newValue}
  }

  /// Immutable. Customer-managed encryption key spec for an IndexEndpoint. If
  /// set, this IndexEndpoint and all sub-resources of this IndexEndpoint will be
  /// secured by this key.
  public var encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec {
    get {return _storage._encryptionSpec ?? Google_Cloud_Aiplatform_V1_EncryptionSpec()}
    set {_uniqueStorage()._encryptionSpec = newValue}
  }
  /// Returns true if `encryptionSpec` has been explicitly set.
  public var hasEncryptionSpec: Bool {return _storage._encryptionSpec != nil}
  /// Clears the value of `encryptionSpec`. Subsequent reads from it will return its default value.
  public mutating func clearEncryptionSpec() {_uniqueStorage()._encryptionSpec = nil}

  /// Output only. Reserved for future use.
  public var satisfiesPzs: Bool {
    get {return _storage._satisfiesPzs}
    set {_uniqueStorage()._satisfiesPzs = newValue}
  }

  /// Output only. Reserved for future use.
  public var satisfiesPzi: Bool {
    get {return _storage._satisfiesPzi}
    set {_uniqueStorage()._satisfiesPzi = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
public struct Google_Cloud_Aiplatform_V1_DeployedIndex: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. The user specified ID of the DeployedIndex.
  /// The ID can be up to 128 characters long and must start with a letter and
  /// only contain letters, numbers, and underscores.
  /// The ID must be unique within the project it is created in.
  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  /// Required. The name of the Index this is the deployment of.
  /// We may refer to this Index as the DeployedIndex's "original" Index.
  public var index: String {
    get {return _storage._index}
    set {_uniqueStorage()._index = newValue}
  }

  /// The display name of the DeployedIndex. If not provided upon creation,
  /// the Index's display_name is used.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// Output only. Timestamp when the DeployedIndex was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Output only. Provides paths for users to send requests directly to the
  /// deployed index services running on Cloud via private services access. This
  /// field is populated if
  /// [network][google.cloud.aiplatform.v1.IndexEndpoint.network] is configured.
  public var privateEndpoints: Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints {
    get {return _storage._privateEndpoints ?? Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints()}
    set {_uniqueStorage()._privateEndpoints = newValue}
  }
  /// Returns true if `privateEndpoints` has been explicitly set.
  public var hasPrivateEndpoints: Bool {return _storage._privateEndpoints != nil}
  /// Clears the value of `privateEndpoints`. Subsequent reads from it will return its default value.
  public mutating func clearPrivateEndpoints() {_uniqueStorage()._privateEndpoints = nil}

  /// Output only. The DeployedIndex may depend on various data on its original
  /// Index. Additionally when certain changes to the original Index are being
  /// done (e.g. when what the Index contains is being changed) the DeployedIndex
  /// may be asynchronously updated in the background to reflect these changes.
  /// If this timestamp's value is at least the
  /// [Index.update_time][google.cloud.aiplatform.v1.Index.update_time] of the
  /// original Index, it means that this DeployedIndex and the original Index are
  /// in sync. If this timestamp is older, then to see which updates this
  /// DeployedIndex already contains (and which it does not), one must
  /// [list][google.longrunning.Operations.ListOperations] the operations that
  /// are running on the original Index. Only the successfully completed
  /// Operations with
  /// [update_time][google.cloud.aiplatform.v1.GenericOperationMetadata.update_time]
  /// equal or before this sync time are contained in this DeployedIndex.
  public var indexSyncTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._indexSyncTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._indexSyncTime = newValue}
  }
  /// Returns true if `indexSyncTime` has been explicitly set.
  public var hasIndexSyncTime: Bool {return _storage._indexSyncTime != nil}
  /// Clears the value of `indexSyncTime`. Subsequent reads from it will return its default value.
  public mutating func clearIndexSyncTime() {_uniqueStorage()._indexSyncTime = nil}

  /// Optional. A description of resources that the DeployedIndex uses, which to
  /// large degree are decided by Vertex AI, and optionally allows only a modest
  /// additional configuration.
  /// If min_replica_count is not set, the default value is 2 (we don't provide
  /// SLA when min_replica_count=1). If max_replica_count is not set, the
  /// default value is min_replica_count. The max allowed replica count is
  /// 1000.
  public var automaticResources: Google_Cloud_Aiplatform_V1_AutomaticResources {
    get {return _storage._automaticResources ?? Google_Cloud_Aiplatform_V1_AutomaticResources()}
    set {_uniqueStorage()._automaticResources = newValue}
  }
  /// Returns true if `automaticResources` has been explicitly set.
  public var hasAutomaticResources: Bool {return _storage._automaticResources != nil}
  /// Clears the value of `automaticResources`. Subsequent reads from it will return its default value.
  public mutating func clearAutomaticResources() {_uniqueStorage()._automaticResources = nil}

  /// Optional. A description of resources that are dedicated to the
  /// DeployedIndex, and that need a higher degree of manual configuration. The
  /// field min_replica_count must be set to a value strictly greater than 0, or
  /// else validation will fail. We don't provide SLA when min_replica_count=1.
  /// If max_replica_count is not set, the default value is min_replica_count.
  /// The max allowed replica count is 1000.
  ///
  /// Available machine types for SMALL shard:
  /// e2-standard-2 and all machine types available for MEDIUM and LARGE shard.
  ///
  /// Available machine types for MEDIUM shard:
  /// e2-standard-16 and all machine types available for LARGE shard.
  ///
  /// Available machine types for LARGE shard:
  /// e2-highmem-16, n2d-standard-32.
  ///
  /// n1-standard-16 and n1-standard-32 are still available, but we recommend
  /// e2-standard-16 and e2-highmem-16 for cost efficiency.
  public var dedicatedResources: Google_Cloud_Aiplatform_V1_DedicatedResources {
    get {return _storage._dedicatedResources ?? Google_Cloud_Aiplatform_V1_DedicatedResources()}
    set {_uniqueStorage()._dedicatedResources = newValue}
  }
  /// Returns true if `dedicatedResources` has been explicitly set.
  public var hasDedicatedResources: Bool {return _storage._dedicatedResources != nil}
  /// Clears the value of `dedicatedResources`. Subsequent reads from it will return its default value.
  public mutating func clearDedicatedResources() {_uniqueStorage()._dedicatedResources = nil}

  /// Optional. If true, private endpoint's access logs are sent to Cloud
  /// Logging.
  ///
  /// These logs are like standard server access logs, containing
  /// information like timestamp and latency for each MatchRequest.
  ///
  /// Note that logs may incur a cost, especially if the deployed
  /// index receives a high queries per second rate (QPS).
  /// Estimate your costs before enabling this option.
  public var enableAccessLogging: Bool {
    get {return _storage._enableAccessLogging}
    set {_uniqueStorage()._enableAccessLogging = newValue}
  }

  /// Optional. If set, the authentication is enabled for the private endpoint.
  public var deployedIndexAuthConfig: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig {
    get {return _storage._deployedIndexAuthConfig ?? Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig()}
    set {_uniqueStorage()._deployedIndexAuthConfig = newValue}
  }
  /// Returns true if `deployedIndexAuthConfig` has been explicitly set.
  public var hasDeployedIndexAuthConfig: Bool {return _storage._deployedIndexAuthConfig != nil}
  /// Clears the value of `deployedIndexAuthConfig`. Subsequent reads from it will return its default value.
  public mutating func clearDeployedIndexAuthConfig() {_uniqueStorage()._deployedIndexAuthConfig = nil}

  /// Optional. A list of reserved ip ranges under the VPC network that can be
  /// used for this DeployedIndex.
  ///
  /// If set, we will deploy the index within the provided ip ranges. Otherwise,
  /// the index might be deployed to any ip ranges under the provided VPC
  /// network.
  ///
  /// The value should be the name of the address
  /// (https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
  /// Example: ['vertex-ai-ip-range'].
  ///
  /// For more information about subnets and network IP ranges, please see
  /// https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
  public var reservedIpRanges: [String] {
    get {return _storage._reservedIpRanges}
    set {_uniqueStorage()._reservedIpRanges = newValue}
  }

  /// Optional. The deployment group can be no longer than 64 characters (eg:
  /// 'test', 'prod'). If not set, we will use the 'default' deployment group.
  ///
  /// Creating `deployment_groups` with `reserved_ip_ranges` is a recommended
  /// practice when the peered network has multiple peering ranges. This creates
  /// your deployments from predictable IP spaces for easier traffic
  /// administration. Also, one deployment_group (except 'default') can only be
  /// used with the same reserved_ip_ranges which means if the deployment_group
  /// has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or
  /// [d, e] is disallowed.
  ///
  /// Note: we only support up to 5 deployment groups(not including 'default').
  public var deploymentGroup: String {
    get {return _storage._deploymentGroup}
    set {_uniqueStorage()._deploymentGroup = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// Used to set up the auth on the DeployedIndex's private endpoint.
public struct Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Defines the authentication provider that the DeployedIndex uses.
  public var authProvider: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider {
    get {return _authProvider ?? Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider()}
    set {_authProvider = newValue}
  }
  /// Returns true if `authProvider` has been explicitly set.
  public var hasAuthProvider: Bool {return self._authProvider != nil}
  /// Clears the value of `authProvider`. Subsequent reads from it will return its default value.
  public mutating func clearAuthProvider() {self._authProvider = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Configuration for an authentication provider, including support for
  /// [JSON Web Token
  /// (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
  public struct AuthProvider: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// The list of JWT
    /// [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
    /// that are allowed to access. A JWT containing any of these audiences will
    /// be accepted.
    public var audiences: [String] = []

    /// A list of allowed JWT issuers. Each entry must be a valid Google
    /// service account, in the following format:
    ///
    /// `service-account-name@project-id.iam.gserviceaccount.com`
    public var allowedIssuers: [String] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _authProvider: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider? = nil
}

/// IndexPrivateEndpoints proto is used to provide paths for users to send
/// requests via private endpoints (e.g. private service access, private service
/// connect).
/// To send request via private service access, use match_grpc_address.
/// To send request via private service connect, use service_attachment.
public struct Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The ip address used to send match gRPC requests.
  public var matchGrpcAddress: String = String()

  /// Output only. The name of the service attachment resource. Populated if
  /// private service connect is enabled.
  public var serviceAttachment: String = String()

  /// Output only. PscAutomatedEndpoints is populated if private service connect
  /// is enabled if PscAutomatedConfig is set.
  public var pscAutomatedEndpoints: [Google_Cloud_Aiplatform_V1_PscAutomatedEndpoints] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_IndexEndpoint: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".IndexEndpoint"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "display_name"),
    3: .same(proto: "description"),
    4: .standard(proto: "deployed_indexes"),
    5: .same(proto: "etag"),
    6: .same(proto: "labels"),
    7: .standard(proto: "create_time"),
    8: .standard(proto: "update_time"),
    9: .same(proto: "network"),
    10: .standard(proto: "enable_private_service_connect"),
    12: .standard(proto: "private_service_connect_config"),
    13: .standard(proto: "public_endpoint_enabled"),
    14: .standard(proto: "public_endpoint_domain_name"),
    15: .standard(proto: "encryption_spec"),
    17: .standard(proto: "satisfies_pzs"),
    18: .standard(proto: "satisfies_pzi"),
  ]

  fileprivate class _StorageClass {
    var _name: String = String()
    var _displayName: String = String()
    var _description_p: String = String()
    var _deployedIndexes: [Google_Cloud_Aiplatform_V1_DeployedIndex] = []
    var _etag: String = String()
    var _labels: Dictionary<String,String> = [:]
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _network: String = String()
    var _enablePrivateServiceConnect: Bool = false
    var _privateServiceConnectConfig: Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig? = nil
    var _publicEndpointEnabled: Bool = false
    var _publicEndpointDomainName: String = String()
    var _encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec? = nil
    var _satisfiesPzs: Bool = false
    var _satisfiesPzi: Bool = false

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _displayName = source._displayName
      _description_p = source._description_p
      _deployedIndexes = source._deployedIndexes
      _etag = source._etag
      _labels = source._labels
      _createTime = source._createTime
      _updateTime = source._updateTime
      _network = source._network
      _enablePrivateServiceConnect = source._enablePrivateServiceConnect
      _privateServiceConnectConfig = source._privateServiceConnectConfig
      _publicEndpointEnabled = source._publicEndpointEnabled
      _publicEndpointDomainName = source._publicEndpointDomainName
      _encryptionSpec = source._encryptionSpec
      _satisfiesPzs = source._satisfiesPzs
      _satisfiesPzi = source._satisfiesPzi
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 4: try { try decoder.decodeRepeatedMessageField(value: &_storage._deployedIndexes) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._etag) }()
        case 6: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._labels) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._updateTime) }()
        case 9: try { try decoder.decodeSingularStringField(value: &_storage._network) }()
        case 10: try { try decoder.decodeSingularBoolField(value: &_storage._enablePrivateServiceConnect) }()
        case 12: try { try decoder.decodeSingularMessageField(value: &_storage._privateServiceConnectConfig) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._publicEndpointEnabled) }()
        case 14: try { try decoder.decodeSingularStringField(value: &_storage._publicEndpointDomainName) }()
        case 15: try { try decoder.decodeSingularMessageField(value: &_storage._encryptionSpec) }()
        case 17: try { try decoder.decodeSingularBoolField(value: &_storage._satisfiesPzs) }()
        case 18: try { try decoder.decodeSingularBoolField(value: &_storage._satisfiesPzi) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 2)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 3)
      }
      if !_storage._deployedIndexes.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._deployedIndexes, fieldNumber: 4)
      }
      if !_storage._etag.isEmpty {
        try visitor.visitSingularStringField(value: _storage._etag, fieldNumber: 5)
      }
      if !_storage._labels.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._labels, fieldNumber: 6)
      }
      try { if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._updateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      if !_storage._network.isEmpty {
        try visitor.visitSingularStringField(value: _storage._network, fieldNumber: 9)
      }
      if _storage._enablePrivateServiceConnect != false {
        try visitor.visitSingularBoolField(value: _storage._enablePrivateServiceConnect, fieldNumber: 10)
      }
      try { if let v = _storage._privateServiceConnectConfig {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      } }()
      if _storage._publicEndpointEnabled != false {
        try visitor.visitSingularBoolField(value: _storage._publicEndpointEnabled, fieldNumber: 13)
      }
      if !_storage._publicEndpointDomainName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._publicEndpointDomainName, fieldNumber: 14)
      }
      try { if let v = _storage._encryptionSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      } }()
      if _storage._satisfiesPzs != false {
        try visitor.visitSingularBoolField(value: _storage._satisfiesPzs, fieldNumber: 17)
      }
      if _storage._satisfiesPzi != false {
        try visitor.visitSingularBoolField(value: _storage._satisfiesPzi, fieldNumber: 18)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_IndexEndpoint, rhs: Google_Cloud_Aiplatform_V1_IndexEndpoint) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._deployedIndexes != rhs_storage._deployedIndexes {return false}
        if _storage._etag != rhs_storage._etag {return false}
        if _storage._labels != rhs_storage._labels {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._updateTime != rhs_storage._updateTime {return false}
        if _storage._network != rhs_storage._network {return false}
        if _storage._enablePrivateServiceConnect != rhs_storage._enablePrivateServiceConnect {return false}
        if _storage._privateServiceConnectConfig != rhs_storage._privateServiceConnectConfig {return false}
        if _storage._publicEndpointEnabled != rhs_storage._publicEndpointEnabled {return false}
        if _storage._publicEndpointDomainName != rhs_storage._publicEndpointDomainName {return false}
        if _storage._encryptionSpec != rhs_storage._encryptionSpec {return false}
        if _storage._satisfiesPzs != rhs_storage._satisfiesPzs {return false}
        if _storage._satisfiesPzi != rhs_storage._satisfiesPzi {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_DeployedIndex: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DeployedIndex"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "index"),
    3: .standard(proto: "display_name"),
    4: .standard(proto: "create_time"),
    5: .standard(proto: "private_endpoints"),
    6: .standard(proto: "index_sync_time"),
    7: .standard(proto: "automatic_resources"),
    16: .standard(proto: "dedicated_resources"),
    8: .standard(proto: "enable_access_logging"),
    9: .standard(proto: "deployed_index_auth_config"),
    10: .standard(proto: "reserved_ip_ranges"),
    11: .standard(proto: "deployment_group"),
  ]

  fileprivate class _StorageClass {
    var _id: String = String()
    var _index: String = String()
    var _displayName: String = String()
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _privateEndpoints: Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints? = nil
    var _indexSyncTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _automaticResources: Google_Cloud_Aiplatform_V1_AutomaticResources? = nil
    var _dedicatedResources: Google_Cloud_Aiplatform_V1_DedicatedResources? = nil
    var _enableAccessLogging: Bool = false
    var _deployedIndexAuthConfig: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig? = nil
    var _reservedIpRanges: [String] = []
    var _deploymentGroup: String = String()

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _index = source._index
      _displayName = source._displayName
      _createTime = source._createTime
      _privateEndpoints = source._privateEndpoints
      _indexSyncTime = source._indexSyncTime
      _automaticResources = source._automaticResources
      _dedicatedResources = source._dedicatedResources
      _enableAccessLogging = source._enableAccessLogging
      _deployedIndexAuthConfig = source._deployedIndexAuthConfig
      _reservedIpRanges = source._reservedIpRanges
      _deploymentGroup = source._deploymentGroup
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._id) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._index) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._privateEndpoints) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._indexSyncTime) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._automaticResources) }()
        case 8: try { try decoder.decodeSingularBoolField(value: &_storage._enableAccessLogging) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._deployedIndexAuthConfig) }()
        case 10: try { try decoder.decodeRepeatedStringField(value: &_storage._reservedIpRanges) }()
        case 11: try { try decoder.decodeSingularStringField(value: &_storage._deploymentGroup) }()
        case 16: try { try decoder.decodeSingularMessageField(value: &_storage._dedicatedResources) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      if !_storage._index.isEmpty {
        try visitor.visitSingularStringField(value: _storage._index, fieldNumber: 2)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 3)
      }
      try { if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._privateEndpoints {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._indexSyncTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._automaticResources {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      if _storage._enableAccessLogging != false {
        try visitor.visitSingularBoolField(value: _storage._enableAccessLogging, fieldNumber: 8)
      }
      try { if let v = _storage._deployedIndexAuthConfig {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      if !_storage._reservedIpRanges.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._reservedIpRanges, fieldNumber: 10)
      }
      if !_storage._deploymentGroup.isEmpty {
        try visitor.visitSingularStringField(value: _storage._deploymentGroup, fieldNumber: 11)
      }
      try { if let v = _storage._dedicatedResources {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_DeployedIndex, rhs: Google_Cloud_Aiplatform_V1_DeployedIndex) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._index != rhs_storage._index {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._privateEndpoints != rhs_storage._privateEndpoints {return false}
        if _storage._indexSyncTime != rhs_storage._indexSyncTime {return false}
        if _storage._automaticResources != rhs_storage._automaticResources {return false}
        if _storage._dedicatedResources != rhs_storage._dedicatedResources {return false}
        if _storage._enableAccessLogging != rhs_storage._enableAccessLogging {return false}
        if _storage._deployedIndexAuthConfig != rhs_storage._deployedIndexAuthConfig {return false}
        if _storage._reservedIpRanges != rhs_storage._reservedIpRanges {return false}
        if _storage._deploymentGroup != rhs_storage._deploymentGroup {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DeployedIndexAuthConfig"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "auth_provider"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._authProvider) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._authProvider {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig, rhs: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig) -> Bool {
    if lhs._authProvider != rhs._authProvider {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.protoMessageName + ".AuthProvider"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "audiences"),
    2: .standard(proto: "allowed_issuers"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.audiences) }()
      case 2: try { try decoder.decodeRepeatedStringField(value: &self.allowedIssuers) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.audiences.isEmpty {
      try visitor.visitRepeatedStringField(value: self.audiences, fieldNumber: 1)
    }
    if !self.allowedIssuers.isEmpty {
      try visitor.visitRepeatedStringField(value: self.allowedIssuers, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider, rhs: Google_Cloud_Aiplatform_V1_DeployedIndexAuthConfig.AuthProvider) -> Bool {
    if lhs.audiences != rhs.audiences {return false}
    if lhs.allowedIssuers != rhs.allowedIssuers {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".IndexPrivateEndpoints"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "match_grpc_address"),
    2: .standard(proto: "service_attachment"),
    3: .standard(proto: "psc_automated_endpoints"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.matchGrpcAddress) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.serviceAttachment) }()
      case 3: try { try decoder.decodeRepeatedMessageField(value: &self.pscAutomatedEndpoints) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.matchGrpcAddress.isEmpty {
      try visitor.visitSingularStringField(value: self.matchGrpcAddress, fieldNumber: 1)
    }
    if !self.serviceAttachment.isEmpty {
      try visitor.visitSingularStringField(value: self.serviceAttachment, fieldNumber: 2)
    }
    if !self.pscAutomatedEndpoints.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.pscAutomatedEndpoints, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints, rhs: Google_Cloud_Aiplatform_V1_IndexPrivateEndpoints) -> Bool {
    if lhs.matchGrpcAddress != rhs.matchGrpcAddress {return false}
    if lhs.serviceAttachment != rhs.serviceAttachment {return false}
    if lhs.pscAutomatedEndpoints != rhs.pscAutomatedEndpoints {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
