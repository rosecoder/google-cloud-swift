// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/tensorboard.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Tensorboard is a physical database that stores users' training metrics.
/// A default Tensorboard is provided in each region of a Google Cloud project.
/// If needed users can also create extra Tensorboards in their projects.
public struct Google_Cloud_Aiplatform_V1_Tensorboard: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. Name of the Tensorboard.
  /// Format:
  /// `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
  public var name: String = String()

  /// Required. User provided name of this Tensorboard.
  public var displayName: String = String()

  /// Description of this Tensorboard.
  public var description_p: String = String()

  /// Customer-managed encryption key spec for a Tensorboard. If set, this
  /// Tensorboard and all sub-resources of this Tensorboard will be secured by
  /// this key.
  public var encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec {
    get {return _encryptionSpec ?? Google_Cloud_Aiplatform_V1_EncryptionSpec()}
    set {_encryptionSpec = newValue}
  }
  /// Returns true if `encryptionSpec` has been explicitly set.
  public var hasEncryptionSpec: Bool {return self._encryptionSpec != nil}
  /// Clears the value of `encryptionSpec`. Subsequent reads from it will return its default value.
  public mutating func clearEncryptionSpec() {self._encryptionSpec = nil}

  /// Output only. Consumer project Cloud Storage path prefix used to store blob
  /// data, which can either be a bucket or directory. Does not end with a '/'.
  public var blobStoragePathPrefix: String = String()

  /// Output only. The number of Runs stored in this Tensorboard.
  public var runCount: Int32 = 0

  /// Output only. Timestamp when this Tensorboard was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return self._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {self._createTime = nil}

  /// Output only. Timestamp when this Tensorboard was last updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return self._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {self._updateTime = nil}

  /// The labels with user-defined metadata to organize your Tensorboards.
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  /// No more than 64 user labels can be associated with one Tensorboard
  /// (System labels are excluded).
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  /// System reserved label keys are prefixed with "aiplatform.googleapis.com/"
  /// and are immutable.
  public var labels: Dictionary<String,String> = [:]

  /// Used to perform a consistent read-modify-write updates. If not set, a blind
  /// "overwrite" update happens.
  public var etag: String = String()

  /// Used to indicate if the TensorBoard instance is the default one.
  /// Each project & region can have at most one default TensorBoard instance.
  /// Creation of a default TensorBoard instance and updating an existing
  /// TensorBoard instance to be default will mark all other TensorBoard
  /// instances (if any) as non default.
  public var isDefault: Bool = false

  /// Output only. Reserved for future use.
  public var satisfiesPzs: Bool = false

  /// Output only. Reserved for future use.
  public var satisfiesPzi: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec? = nil
  fileprivate var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
  fileprivate var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_Tensorboard: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Tensorboard"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "display_name"),
    3: .same(proto: "description"),
    11: .standard(proto: "encryption_spec"),
    10: .standard(proto: "blob_storage_path_prefix"),
    5: .standard(proto: "run_count"),
    6: .standard(proto: "create_time"),
    7: .standard(proto: "update_time"),
    8: .same(proto: "labels"),
    9: .same(proto: "etag"),
    12: .standard(proto: "is_default"),
    13: .standard(proto: "satisfies_pzs"),
    14: .standard(proto: "satisfies_pzi"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.displayName) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.description_p) }()
      case 5: try { try decoder.decodeSingularInt32Field(value: &self.runCount) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._createTime) }()
      case 7: try { try decoder.decodeSingularMessageField(value: &self._updateTime) }()
      case 8: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.labels) }()
      case 9: try { try decoder.decodeSingularStringField(value: &self.etag) }()
      case 10: try { try decoder.decodeSingularStringField(value: &self.blobStoragePathPrefix) }()
      case 11: try { try decoder.decodeSingularMessageField(value: &self._encryptionSpec) }()
      case 12: try { try decoder.decodeSingularBoolField(value: &self.isDefault) }()
      case 13: try { try decoder.decodeSingularBoolField(value: &self.satisfiesPzs) }()
      case 14: try { try decoder.decodeSingularBoolField(value: &self.satisfiesPzi) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.displayName.isEmpty {
      try visitor.visitSingularStringField(value: self.displayName, fieldNumber: 2)
    }
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 3)
    }
    if self.runCount != 0 {
      try visitor.visitSingularInt32Field(value: self.runCount, fieldNumber: 5)
    }
    try { if let v = self._createTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    } }()
    try { if let v = self._updateTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
    } }()
    if !self.labels.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.labels, fieldNumber: 8)
    }
    if !self.etag.isEmpty {
      try visitor.visitSingularStringField(value: self.etag, fieldNumber: 9)
    }
    if !self.blobStoragePathPrefix.isEmpty {
      try visitor.visitSingularStringField(value: self.blobStoragePathPrefix, fieldNumber: 10)
    }
    try { if let v = self._encryptionSpec {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
    } }()
    if self.isDefault != false {
      try visitor.visitSingularBoolField(value: self.isDefault, fieldNumber: 12)
    }
    if self.satisfiesPzs != false {
      try visitor.visitSingularBoolField(value: self.satisfiesPzs, fieldNumber: 13)
    }
    if self.satisfiesPzi != false {
      try visitor.visitSingularBoolField(value: self.satisfiesPzi, fieldNumber: 14)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_Tensorboard, rhs: Google_Cloud_Aiplatform_V1_Tensorboard) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.displayName != rhs.displayName {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs._encryptionSpec != rhs._encryptionSpec {return false}
    if lhs.blobStoragePathPrefix != rhs.blobStoragePathPrefix {return false}
    if lhs.runCount != rhs.runCount {return false}
    if lhs._createTime != rhs._createTime {return false}
    if lhs._updateTime != rhs._updateTime {return false}
    if lhs.labels != rhs.labels {return false}
    if lhs.etag != rhs.etag {return false}
    if lhs.isDefault != rhs.isDefault {return false}
    if lhs.satisfiesPzs != rhs.satisfiesPzs {return false}
    if lhs.satisfiesPzi != rhs.satisfiesPzi {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
