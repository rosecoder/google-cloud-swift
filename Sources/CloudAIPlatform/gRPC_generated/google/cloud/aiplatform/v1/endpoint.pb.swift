// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/endpoint.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Models are deployed into it, and afterwards Endpoint is called to obtain
/// predictions and explanations.
public struct Google_Cloud_Aiplatform_V1_Endpoint: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the Endpoint.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Required. The display name of the Endpoint.
  /// The name can be up to 128 characters long and can consist of any UTF-8
  /// characters.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// The description of the Endpoint.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Output only. The models deployed in this Endpoint.
  /// To add or remove DeployedModels use
  /// [EndpointService.DeployModel][google.cloud.aiplatform.v1.EndpointService.DeployModel]
  /// and
  /// [EndpointService.UndeployModel][google.cloud.aiplatform.v1.EndpointService.UndeployModel]
  /// respectively.
  public var deployedModels: [Google_Cloud_Aiplatform_V1_DeployedModel] {
    get {return _storage._deployedModels}
    set {_uniqueStorage()._deployedModels = newValue}
  }

  /// A map from a DeployedModel's ID to the percentage of this Endpoint's
  /// traffic that should be forwarded to that DeployedModel.
  ///
  /// If a DeployedModel's ID is not listed in this map, then it receives no
  /// traffic.
  ///
  /// The traffic percentage values must add up to 100, or map must be empty if
  /// the Endpoint is to not accept any traffic at a moment.
  public var trafficSplit: Dictionary<String,Int32> {
    get {return _storage._trafficSplit}
    set {_uniqueStorage()._trafficSplit = newValue}
  }

  /// Used to perform consistent read-modify-write updates. If not set, a blind
  /// "overwrite" update happens.
  public var etag: String {
    get {return _storage._etag}
    set {_uniqueStorage()._etag = newValue}
  }

  /// The labels with user-defined metadata to organize your Endpoints.
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  public var labels: Dictionary<String,String> {
    get {return _storage._labels}
    set {_uniqueStorage()._labels = newValue}
  }

  /// Output only. Timestamp when this Endpoint was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Output only. Timestamp when this Endpoint was last updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return _storage._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {_uniqueStorage()._updateTime = nil}

  /// Customer-managed encryption key spec for an Endpoint. If set, this
  /// Endpoint and all sub-resources of this Endpoint will be secured by
  /// this key.
  public var encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec {
    get {return _storage._encryptionSpec ?? Google_Cloud_Aiplatform_V1_EncryptionSpec()}
    set {_uniqueStorage()._encryptionSpec = newValue}
  }
  /// Returns true if `encryptionSpec` has been explicitly set.
  public var hasEncryptionSpec: Bool {return _storage._encryptionSpec != nil}
  /// Clears the value of `encryptionSpec`. Subsequent reads from it will return its default value.
  public mutating func clearEncryptionSpec() {_uniqueStorage()._encryptionSpec = nil}

  /// Optional. The full name of the Google Compute Engine
  /// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)
  /// to which the Endpoint should be peered.
  ///
  /// Private services access must already be configured for the network. If left
  /// unspecified, the Endpoint is not peered with any network.
  ///
  /// Only one of the fields,
  /// [network][google.cloud.aiplatform.v1.Endpoint.network] or
  /// [enable_private_service_connect][google.cloud.aiplatform.v1.Endpoint.enable_private_service_connect],
  /// can be set.
  ///
  /// [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
  /// `projects/{project}/global/networks/{network}`.
  /// Where `{project}` is a project number, as in `12345`, and `{network}` is
  /// network name.
  public var network: String {
    get {return _storage._network}
    set {_uniqueStorage()._network = newValue}
  }

  /// Deprecated: If true, expose the Endpoint via private service connect.
  ///
  /// Only one of the fields,
  /// [network][google.cloud.aiplatform.v1.Endpoint.network] or
  /// [enable_private_service_connect][google.cloud.aiplatform.v1.Endpoint.enable_private_service_connect],
  /// can be set.
  ///
  /// NOTE: This field was marked as deprecated in the .proto file.
  public var enablePrivateServiceConnect: Bool {
    get {return _storage._enablePrivateServiceConnect}
    set {_uniqueStorage()._enablePrivateServiceConnect = newValue}
  }

  /// Optional. Configuration for private service connect.
  ///
  /// [network][google.cloud.aiplatform.v1.Endpoint.network] and
  /// [private_service_connect_config][google.cloud.aiplatform.v1.Endpoint.private_service_connect_config]
  /// are mutually exclusive.
  public var privateServiceConnectConfig: Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig {
    get {return _storage._privateServiceConnectConfig ?? Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig()}
    set {_uniqueStorage()._privateServiceConnectConfig = newValue}
  }
  /// Returns true if `privateServiceConnectConfig` has been explicitly set.
  public var hasPrivateServiceConnectConfig: Bool {return _storage._privateServiceConnectConfig != nil}
  /// Clears the value of `privateServiceConnectConfig`. Subsequent reads from it will return its default value.
  public mutating func clearPrivateServiceConnectConfig() {_uniqueStorage()._privateServiceConnectConfig = nil}

  /// Output only. Resource name of the Model Monitoring job associated with this
  /// Endpoint if monitoring is enabled by
  /// [JobService.CreateModelDeploymentMonitoringJob][google.cloud.aiplatform.v1.JobService.CreateModelDeploymentMonitoringJob].
  /// Format:
  /// `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
  public var modelDeploymentMonitoringJob: String {
    get {return _storage._modelDeploymentMonitoringJob}
    set {_uniqueStorage()._modelDeploymentMonitoringJob = newValue}
  }

  /// Configures the request-response logging for online prediction.
  public var predictRequestResponseLoggingConfig: Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig {
    get {return _storage._predictRequestResponseLoggingConfig ?? Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig()}
    set {_uniqueStorage()._predictRequestResponseLoggingConfig = newValue}
  }
  /// Returns true if `predictRequestResponseLoggingConfig` has been explicitly set.
  public var hasPredictRequestResponseLoggingConfig: Bool {return _storage._predictRequestResponseLoggingConfig != nil}
  /// Clears the value of `predictRequestResponseLoggingConfig`. Subsequent reads from it will return its default value.
  public mutating func clearPredictRequestResponseLoggingConfig() {_uniqueStorage()._predictRequestResponseLoggingConfig = nil}

  /// If true, the endpoint will be exposed through a dedicated
  /// DNS [Endpoint.dedicated_endpoint_dns]. Your request to the dedicated DNS
  /// will be isolated from other users' traffic and will have better performance
  /// and reliability.
  /// Note: Once you enabled dedicated endpoint, you won't be able to send
  /// request to the shared DNS {region}-aiplatform.googleapis.com. The
  /// limitation will be removed soon.
  public var dedicatedEndpointEnabled: Bool {
    get {return _storage._dedicatedEndpointEnabled}
    set {_uniqueStorage()._dedicatedEndpointEnabled = newValue}
  }

  /// Output only. DNS of the dedicated endpoint. Will only be populated if
  /// dedicated_endpoint_enabled is true.
  /// Format:
  /// `https://{endpoint_id}.{region}-{project_number}.prediction.vertexai.goog`.
  public var dedicatedEndpointDns: String {
    get {return _storage._dedicatedEndpointDns}
    set {_uniqueStorage()._dedicatedEndpointDns = newValue}
  }

  /// Output only. Reserved for future use.
  public var satisfiesPzs: Bool {
    get {return _storage._satisfiesPzs}
    set {_uniqueStorage()._satisfiesPzs = newValue}
  }

  /// Output only. Reserved for future use.
  public var satisfiesPzi: Bool {
    get {return _storage._satisfiesPzi}
    set {_uniqueStorage()._satisfiesPzi = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// A deployment of a Model. Endpoints contain one or more DeployedModels.
public struct Google_Cloud_Aiplatform_V1_DeployedModel: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The prediction (for example, the machine) resources that the DeployedModel
  /// uses. The user is billed for the resources (at least their minimal amount)
  /// even if the DeployedModel receives no traffic.
  /// Not all Models support all resources types. See
  /// [Model.supported_deployment_resources_types][google.cloud.aiplatform.v1.Model.supported_deployment_resources_types].
  /// Required except for Large Model Deploy use cases.
  public var predictionResources: OneOf_PredictionResources? {
    get {return _storage._predictionResources}
    set {_uniqueStorage()._predictionResources = newValue}
  }

  /// A description of resources that are dedicated to the DeployedModel, and
  /// that need a higher degree of manual configuration.
  public var dedicatedResources: Google_Cloud_Aiplatform_V1_DedicatedResources {
    get {
      if case .dedicatedResources(let v)? = _storage._predictionResources {return v}
      return Google_Cloud_Aiplatform_V1_DedicatedResources()
    }
    set {_uniqueStorage()._predictionResources = .dedicatedResources(newValue)}
  }

  /// A description of resources that to large degree are decided by Vertex
  /// AI, and require only a modest additional configuration.
  public var automaticResources: Google_Cloud_Aiplatform_V1_AutomaticResources {
    get {
      if case .automaticResources(let v)? = _storage._predictionResources {return v}
      return Google_Cloud_Aiplatform_V1_AutomaticResources()
    }
    set {_uniqueStorage()._predictionResources = .automaticResources(newValue)}
  }

  /// The resource name of the shared DeploymentResourcePool to deploy on.
  /// Format:
  /// `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
  public var sharedResources: String {
    get {
      if case .sharedResources(let v)? = _storage._predictionResources {return v}
      return String()
    }
    set {_uniqueStorage()._predictionResources = .sharedResources(newValue)}
  }

  /// Immutable. The ID of the DeployedModel. If not provided upon deployment,
  /// Vertex AI will generate a value for this ID.
  ///
  /// This value should be 1-10 characters, and valid characters are `/[0-9]/`.
  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  /// Required. The resource name of the Model that this is the deployment of.
  /// Note that the Model may be in a different location than the DeployedModel's
  /// Endpoint.
  ///
  /// The resource name may contain version id or version alias to specify the
  /// version.
  ///  Example: `projects/{project}/locations/{location}/models/{model}@2`
  ///              or
  ///            `projects/{project}/locations/{location}/models/{model}@golden`
  /// if no version is specified, the default version will be deployed.
  public var model: String {
    get {return _storage._model}
    set {_uniqueStorage()._model = newValue}
  }

  /// Output only. The version ID of the model that is deployed.
  public var modelVersionID: String {
    get {return _storage._modelVersionID}
    set {_uniqueStorage()._modelVersionID = newValue}
  }

  /// The display name of the DeployedModel. If not provided upon creation,
  /// the Model's display_name is used.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// Output only. Timestamp when the DeployedModel was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Explanation configuration for this DeployedModel.
  ///
  /// When deploying a Model using
  /// [EndpointService.DeployModel][google.cloud.aiplatform.v1.EndpointService.DeployModel],
  /// this value overrides the value of
  /// [Model.explanation_spec][google.cloud.aiplatform.v1.Model.explanation_spec].
  /// All fields of
  /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
  /// are optional in the request. If a field of
  /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
  /// is not populated, the value of the same field of
  /// [Model.explanation_spec][google.cloud.aiplatform.v1.Model.explanation_spec]
  /// is inherited. If the corresponding
  /// [Model.explanation_spec][google.cloud.aiplatform.v1.Model.explanation_spec]
  /// is not populated, all fields of the
  /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec]
  /// will be used for the explanation configuration.
  public var explanationSpec: Google_Cloud_Aiplatform_V1_ExplanationSpec {
    get {return _storage._explanationSpec ?? Google_Cloud_Aiplatform_V1_ExplanationSpec()}
    set {_uniqueStorage()._explanationSpec = newValue}
  }
  /// Returns true if `explanationSpec` has been explicitly set.
  public var hasExplanationSpec: Bool {return _storage._explanationSpec != nil}
  /// Clears the value of `explanationSpec`. Subsequent reads from it will return its default value.
  public mutating func clearExplanationSpec() {_uniqueStorage()._explanationSpec = nil}

  /// If true, deploy the model without explainable feature, regardless the
  /// existence of
  /// [Model.explanation_spec][google.cloud.aiplatform.v1.Model.explanation_spec]
  /// or
  /// [explanation_spec][google.cloud.aiplatform.v1.DeployedModel.explanation_spec].
  public var disableExplanations: Bool {
    get {return _storage._disableExplanations}
    set {_uniqueStorage()._disableExplanations = newValue}
  }

  /// The service account that the DeployedModel's container runs as. Specify the
  /// email address of the service account. If this service account is not
  /// specified, the container runs as a service account that doesn't have access
  /// to the resource project.
  ///
  /// Users deploying the Model must have the `iam.serviceAccounts.actAs`
  /// permission on this service account.
  public var serviceAccount: String {
    get {return _storage._serviceAccount}
    set {_uniqueStorage()._serviceAccount = newValue}
  }

  /// For custom-trained Models and AutoML Tabular Models, the container of the
  /// DeployedModel instances will send `stderr` and `stdout` streams to
  /// Cloud Logging by default. Please note that the logs incur cost,
  /// which are subject to [Cloud Logging
  /// pricing](https://cloud.google.com/logging/pricing).
  ///
  /// User can disable container logging by setting this flag to true.
  public var disableContainerLogging: Bool {
    get {return _storage._disableContainerLogging}
    set {_uniqueStorage()._disableContainerLogging = newValue}
  }

  /// If true, online prediction access logs are sent to Cloud
  /// Logging.
  /// These logs are like standard server access logs, containing
  /// information like timestamp and latency for each prediction request.
  ///
  /// Note that logs may incur a cost, especially if your project
  /// receives prediction requests at a high queries per second rate (QPS).
  /// Estimate your costs before enabling this option.
  public var enableAccessLogging: Bool {
    get {return _storage._enableAccessLogging}
    set {_uniqueStorage()._enableAccessLogging = newValue}
  }

  /// Output only. Provide paths for users to send predict/explain/health
  /// requests directly to the deployed model services running on Cloud via
  /// private services access. This field is populated if
  /// [network][google.cloud.aiplatform.v1.Endpoint.network] is configured.
  public var privateEndpoints: Google_Cloud_Aiplatform_V1_PrivateEndpoints {
    get {return _storage._privateEndpoints ?? Google_Cloud_Aiplatform_V1_PrivateEndpoints()}
    set {_uniqueStorage()._privateEndpoints = newValue}
  }
  /// Returns true if `privateEndpoints` has been explicitly set.
  public var hasPrivateEndpoints: Bool {return _storage._privateEndpoints != nil}
  /// Clears the value of `privateEndpoints`. Subsequent reads from it will return its default value.
  public mutating func clearPrivateEndpoints() {_uniqueStorage()._privateEndpoints = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// The prediction (for example, the machine) resources that the DeployedModel
  /// uses. The user is billed for the resources (at least their minimal amount)
  /// even if the DeployedModel receives no traffic.
  /// Not all Models support all resources types. See
  /// [Model.supported_deployment_resources_types][google.cloud.aiplatform.v1.Model.supported_deployment_resources_types].
  /// Required except for Large Model Deploy use cases.
  public enum OneOf_PredictionResources: Equatable, Sendable {
    /// A description of resources that are dedicated to the DeployedModel, and
    /// that need a higher degree of manual configuration.
    case dedicatedResources(Google_Cloud_Aiplatform_V1_DedicatedResources)
    /// A description of resources that to large degree are decided by Vertex
    /// AI, and require only a modest additional configuration.
    case automaticResources(Google_Cloud_Aiplatform_V1_AutomaticResources)
    /// The resource name of the shared DeploymentResourcePool to deploy on.
    /// Format:
    /// `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
    case sharedResources(String)

  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// PrivateEndpoints proto is used to provide paths for users to send
/// requests privately.
/// To send request via private service access, use predict_http_uri,
/// explain_http_uri or health_http_uri. To send request via private service
/// connect, use service_attachment.
public struct Google_Cloud_Aiplatform_V1_PrivateEndpoints: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. Http(s) path to send prediction requests.
  public var predictHTTPUri: String = String()

  /// Output only. Http(s) path to send explain requests.
  public var explainHTTPUri: String = String()

  /// Output only. Http(s) path to send health check requests.
  public var healthHTTPUri: String = String()

  /// Output only. The name of the service attachment resource. Populated if
  /// private service connect is enabled.
  public var serviceAttachment: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// Configuration for logging request-response to a BigQuery table.
public struct Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// If logging is enabled or not.
  public var enabled: Bool = false

  /// Percentage of requests to be logged, expressed as a fraction in
  /// range(0,1].
  public var samplingRate: Double = 0

  /// BigQuery table for logging.
  /// If only given a project, a new dataset will be created with name
  /// `logging_<endpoint-display-name>_<endpoint-id>` where
  /// <endpoint-display-name> will be made BigQuery-dataset-name compatible (e.g.
  /// most special characters will become underscores). If no table name is
  /// given, a new table will be created with name `request_response_logging`
  public var bigqueryDestination: Google_Cloud_Aiplatform_V1_BigQueryDestination {
    get {return _bigqueryDestination ?? Google_Cloud_Aiplatform_V1_BigQueryDestination()}
    set {_bigqueryDestination = newValue}
  }
  /// Returns true if `bigqueryDestination` has been explicitly set.
  public var hasBigqueryDestination: Bool {return self._bigqueryDestination != nil}
  /// Clears the value of `bigqueryDestination`. Subsequent reads from it will return its default value.
  public mutating func clearBigqueryDestination() {self._bigqueryDestination = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _bigqueryDestination: Google_Cloud_Aiplatform_V1_BigQueryDestination? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_Endpoint: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Endpoint"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "display_name"),
    3: .same(proto: "description"),
    4: .standard(proto: "deployed_models"),
    5: .standard(proto: "traffic_split"),
    6: .same(proto: "etag"),
    7: .same(proto: "labels"),
    8: .standard(proto: "create_time"),
    9: .standard(proto: "update_time"),
    10: .standard(proto: "encryption_spec"),
    13: .same(proto: "network"),
    17: .standard(proto: "enable_private_service_connect"),
    21: .standard(proto: "private_service_connect_config"),
    14: .standard(proto: "model_deployment_monitoring_job"),
    18: .standard(proto: "predict_request_response_logging_config"),
    24: .standard(proto: "dedicated_endpoint_enabled"),
    25: .standard(proto: "dedicated_endpoint_dns"),
    27: .standard(proto: "satisfies_pzs"),
    28: .standard(proto: "satisfies_pzi"),
  ]

  fileprivate class _StorageClass {
    var _name: String = String()
    var _displayName: String = String()
    var _description_p: String = String()
    var _deployedModels: [Google_Cloud_Aiplatform_V1_DeployedModel] = []
    var _trafficSplit: Dictionary<String,Int32> = [:]
    var _etag: String = String()
    var _labels: Dictionary<String,String> = [:]
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _encryptionSpec: Google_Cloud_Aiplatform_V1_EncryptionSpec? = nil
    var _network: String = String()
    var _enablePrivateServiceConnect: Bool = false
    var _privateServiceConnectConfig: Google_Cloud_Aiplatform_V1_PrivateServiceConnectConfig? = nil
    var _modelDeploymentMonitoringJob: String = String()
    var _predictRequestResponseLoggingConfig: Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig? = nil
    var _dedicatedEndpointEnabled: Bool = false
    var _dedicatedEndpointDns: String = String()
    var _satisfiesPzs: Bool = false
    var _satisfiesPzi: Bool = false

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _displayName = source._displayName
      _description_p = source._description_p
      _deployedModels = source._deployedModels
      _trafficSplit = source._trafficSplit
      _etag = source._etag
      _labels = source._labels
      _createTime = source._createTime
      _updateTime = source._updateTime
      _encryptionSpec = source._encryptionSpec
      _network = source._network
      _enablePrivateServiceConnect = source._enablePrivateServiceConnect
      _privateServiceConnectConfig = source._privateServiceConnectConfig
      _modelDeploymentMonitoringJob = source._modelDeploymentMonitoringJob
      _predictRequestResponseLoggingConfig = source._predictRequestResponseLoggingConfig
      _dedicatedEndpointEnabled = source._dedicatedEndpointEnabled
      _dedicatedEndpointDns = source._dedicatedEndpointDns
      _satisfiesPzs = source._satisfiesPzs
      _satisfiesPzi = source._satisfiesPzi
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 4: try { try decoder.decodeRepeatedMessageField(value: &_storage._deployedModels) }()
        case 5: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufInt32>.self, value: &_storage._trafficSplit) }()
        case 6: try { try decoder.decodeSingularStringField(value: &_storage._etag) }()
        case 7: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._labels) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._updateTime) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._encryptionSpec) }()
        case 13: try { try decoder.decodeSingularStringField(value: &_storage._network) }()
        case 14: try { try decoder.decodeSingularStringField(value: &_storage._modelDeploymentMonitoringJob) }()
        case 17: try { try decoder.decodeSingularBoolField(value: &_storage._enablePrivateServiceConnect) }()
        case 18: try { try decoder.decodeSingularMessageField(value: &_storage._predictRequestResponseLoggingConfig) }()
        case 21: try { try decoder.decodeSingularMessageField(value: &_storage._privateServiceConnectConfig) }()
        case 24: try { try decoder.decodeSingularBoolField(value: &_storage._dedicatedEndpointEnabled) }()
        case 25: try { try decoder.decodeSingularStringField(value: &_storage._dedicatedEndpointDns) }()
        case 27: try { try decoder.decodeSingularBoolField(value: &_storage._satisfiesPzs) }()
        case 28: try { try decoder.decodeSingularBoolField(value: &_storage._satisfiesPzi) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 2)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 3)
      }
      if !_storage._deployedModels.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._deployedModels, fieldNumber: 4)
      }
      if !_storage._trafficSplit.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufInt32>.self, value: _storage._trafficSplit, fieldNumber: 5)
      }
      if !_storage._etag.isEmpty {
        try visitor.visitSingularStringField(value: _storage._etag, fieldNumber: 6)
      }
      if !_storage._labels.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._labels, fieldNumber: 7)
      }
      try { if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._updateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._encryptionSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      } }()
      if !_storage._network.isEmpty {
        try visitor.visitSingularStringField(value: _storage._network, fieldNumber: 13)
      }
      if !_storage._modelDeploymentMonitoringJob.isEmpty {
        try visitor.visitSingularStringField(value: _storage._modelDeploymentMonitoringJob, fieldNumber: 14)
      }
      if _storage._enablePrivateServiceConnect != false {
        try visitor.visitSingularBoolField(value: _storage._enablePrivateServiceConnect, fieldNumber: 17)
      }
      try { if let v = _storage._predictRequestResponseLoggingConfig {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      } }()
      try { if let v = _storage._privateServiceConnectConfig {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      } }()
      if _storage._dedicatedEndpointEnabled != false {
        try visitor.visitSingularBoolField(value: _storage._dedicatedEndpointEnabled, fieldNumber: 24)
      }
      if !_storage._dedicatedEndpointDns.isEmpty {
        try visitor.visitSingularStringField(value: _storage._dedicatedEndpointDns, fieldNumber: 25)
      }
      if _storage._satisfiesPzs != false {
        try visitor.visitSingularBoolField(value: _storage._satisfiesPzs, fieldNumber: 27)
      }
      if _storage._satisfiesPzi != false {
        try visitor.visitSingularBoolField(value: _storage._satisfiesPzi, fieldNumber: 28)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_Endpoint, rhs: Google_Cloud_Aiplatform_V1_Endpoint) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._deployedModels != rhs_storage._deployedModels {return false}
        if _storage._trafficSplit != rhs_storage._trafficSplit {return false}
        if _storage._etag != rhs_storage._etag {return false}
        if _storage._labels != rhs_storage._labels {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._updateTime != rhs_storage._updateTime {return false}
        if _storage._encryptionSpec != rhs_storage._encryptionSpec {return false}
        if _storage._network != rhs_storage._network {return false}
        if _storage._enablePrivateServiceConnect != rhs_storage._enablePrivateServiceConnect {return false}
        if _storage._privateServiceConnectConfig != rhs_storage._privateServiceConnectConfig {return false}
        if _storage._modelDeploymentMonitoringJob != rhs_storage._modelDeploymentMonitoringJob {return false}
        if _storage._predictRequestResponseLoggingConfig != rhs_storage._predictRequestResponseLoggingConfig {return false}
        if _storage._dedicatedEndpointEnabled != rhs_storage._dedicatedEndpointEnabled {return false}
        if _storage._dedicatedEndpointDns != rhs_storage._dedicatedEndpointDns {return false}
        if _storage._satisfiesPzs != rhs_storage._satisfiesPzs {return false}
        if _storage._satisfiesPzi != rhs_storage._satisfiesPzi {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_DeployedModel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DeployedModel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    7: .standard(proto: "dedicated_resources"),
    8: .standard(proto: "automatic_resources"),
    17: .standard(proto: "shared_resources"),
    1: .same(proto: "id"),
    2: .same(proto: "model"),
    18: .standard(proto: "model_version_id"),
    3: .standard(proto: "display_name"),
    6: .standard(proto: "create_time"),
    9: .standard(proto: "explanation_spec"),
    19: .standard(proto: "disable_explanations"),
    11: .standard(proto: "service_account"),
    15: .standard(proto: "disable_container_logging"),
    13: .standard(proto: "enable_access_logging"),
    14: .standard(proto: "private_endpoints"),
  ]

  fileprivate class _StorageClass {
    var _predictionResources: Google_Cloud_Aiplatform_V1_DeployedModel.OneOf_PredictionResources?
    var _id: String = String()
    var _model: String = String()
    var _modelVersionID: String = String()
    var _displayName: String = String()
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _explanationSpec: Google_Cloud_Aiplatform_V1_ExplanationSpec? = nil
    var _disableExplanations: Bool = false
    var _serviceAccount: String = String()
    var _disableContainerLogging: Bool = false
    var _enableAccessLogging: Bool = false
    var _privateEndpoints: Google_Cloud_Aiplatform_V1_PrivateEndpoints? = nil

    #if swift(>=5.10)
      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()
    #else
      static let defaultInstance = _StorageClass()
    #endif

    private init() {}

    init(copying source: _StorageClass) {
      _predictionResources = source._predictionResources
      _id = source._id
      _model = source._model
      _modelVersionID = source._modelVersionID
      _displayName = source._displayName
      _createTime = source._createTime
      _explanationSpec = source._explanationSpec
      _disableExplanations = source._disableExplanations
      _serviceAccount = source._serviceAccount
      _disableContainerLogging = source._disableContainerLogging
      _enableAccessLogging = source._enableAccessLogging
      _privateEndpoints = source._privateEndpoints
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._id) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._model) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 7: try {
          var v: Google_Cloud_Aiplatform_V1_DedicatedResources?
          var hadOneofValue = false
          if let current = _storage._predictionResources {
            hadOneofValue = true
            if case .dedicatedResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .dedicatedResources(v)
          }
        }()
        case 8: try {
          var v: Google_Cloud_Aiplatform_V1_AutomaticResources?
          var hadOneofValue = false
          if let current = _storage._predictionResources {
            hadOneofValue = true
            if case .automaticResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {
            if hadOneofValue {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .automaticResources(v)
          }
        }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._explanationSpec) }()
        case 11: try { try decoder.decodeSingularStringField(value: &_storage._serviceAccount) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._enableAccessLogging) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._privateEndpoints) }()
        case 15: try { try decoder.decodeSingularBoolField(value: &_storage._disableContainerLogging) }()
        case 17: try {
          var v: String?
          try decoder.decodeSingularStringField(value: &v)
          if let v = v {
            if _storage._predictionResources != nil {try decoder.handleConflictingOneOf()}
            _storage._predictionResources = .sharedResources(v)
          }
        }()
        case 18: try { try decoder.decodeSingularStringField(value: &_storage._modelVersionID) }()
        case 19: try { try decoder.decodeSingularBoolField(value: &_storage._disableExplanations) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      if !_storage._model.isEmpty {
        try visitor.visitSingularStringField(value: _storage._model, fieldNumber: 2)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 3)
      }
      try { if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      } }()
      switch _storage._predictionResources {
      case .dedicatedResources?: try {
        guard case .dedicatedResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }()
      case .automaticResources?: try {
        guard case .automaticResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }()
      default: break
      }
      try { if let v = _storage._explanationSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      } }()
      if !_storage._serviceAccount.isEmpty {
        try visitor.visitSingularStringField(value: _storage._serviceAccount, fieldNumber: 11)
      }
      if _storage._enableAccessLogging != false {
        try visitor.visitSingularBoolField(value: _storage._enableAccessLogging, fieldNumber: 13)
      }
      try { if let v = _storage._privateEndpoints {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      } }()
      if _storage._disableContainerLogging != false {
        try visitor.visitSingularBoolField(value: _storage._disableContainerLogging, fieldNumber: 15)
      }
      try { if case .sharedResources(let v)? = _storage._predictionResources {
        try visitor.visitSingularStringField(value: v, fieldNumber: 17)
      } }()
      if !_storage._modelVersionID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._modelVersionID, fieldNumber: 18)
      }
      if _storage._disableExplanations != false {
        try visitor.visitSingularBoolField(value: _storage._disableExplanations, fieldNumber: 19)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_DeployedModel, rhs: Google_Cloud_Aiplatform_V1_DeployedModel) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._predictionResources != rhs_storage._predictionResources {return false}
        if _storage._id != rhs_storage._id {return false}
        if _storage._model != rhs_storage._model {return false}
        if _storage._modelVersionID != rhs_storage._modelVersionID {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._explanationSpec != rhs_storage._explanationSpec {return false}
        if _storage._disableExplanations != rhs_storage._disableExplanations {return false}
        if _storage._serviceAccount != rhs_storage._serviceAccount {return false}
        if _storage._disableContainerLogging != rhs_storage._disableContainerLogging {return false}
        if _storage._enableAccessLogging != rhs_storage._enableAccessLogging {return false}
        if _storage._privateEndpoints != rhs_storage._privateEndpoints {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PrivateEndpoints: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PrivateEndpoints"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "predict_http_uri"),
    2: .standard(proto: "explain_http_uri"),
    3: .standard(proto: "health_http_uri"),
    4: .standard(proto: "service_attachment"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.predictHTTPUri) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.explainHTTPUri) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.healthHTTPUri) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.serviceAttachment) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.predictHTTPUri.isEmpty {
      try visitor.visitSingularStringField(value: self.predictHTTPUri, fieldNumber: 1)
    }
    if !self.explainHTTPUri.isEmpty {
      try visitor.visitSingularStringField(value: self.explainHTTPUri, fieldNumber: 2)
    }
    if !self.healthHTTPUri.isEmpty {
      try visitor.visitSingularStringField(value: self.healthHTTPUri, fieldNumber: 3)
    }
    if !self.serviceAttachment.isEmpty {
      try visitor.visitSingularStringField(value: self.serviceAttachment, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PrivateEndpoints, rhs: Google_Cloud_Aiplatform_V1_PrivateEndpoints) -> Bool {
    if lhs.predictHTTPUri != rhs.predictHTTPUri {return false}
    if lhs.explainHTTPUri != rhs.explainHTTPUri {return false}
    if lhs.healthHTTPUri != rhs.healthHTTPUri {return false}
    if lhs.serviceAttachment != rhs.serviceAttachment {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PredictRequestResponseLoggingConfig"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "enabled"),
    2: .standard(proto: "sampling_rate"),
    3: .standard(proto: "bigquery_destination"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.enabled) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.samplingRate) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._bigqueryDestination) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if self.enabled != false {
      try visitor.visitSingularBoolField(value: self.enabled, fieldNumber: 1)
    }
    if self.samplingRate.bitPattern != 0 {
      try visitor.visitSingularDoubleField(value: self.samplingRate, fieldNumber: 2)
    }
    try { if let v = self._bigqueryDestination {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig, rhs: Google_Cloud_Aiplatform_V1_PredictRequestResponseLoggingConfig) -> Bool {
    if lhs.enabled != rhs.enabled {return false}
    if lhs.samplingRate != rhs.samplingRate {return false}
    if lhs._bigqueryDestination != rhs._bigqueryDestination {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
