// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the gRPC Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/dataset_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPCCore
import GRPCProtobuf

public enum Google_Cloud_Aiplatform_V1_DatasetService {
    public static let descriptor = GRPCCore.ServiceDescriptor.google_cloud_aiplatform_v1_DatasetService
    public enum Method {
        public enum CreateDataset {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateDatasetRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "CreateDataset"
            )
        }
        public enum GetDataset {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetDatasetRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Dataset
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "GetDataset"
            )
        }
        public enum UpdateDataset {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateDatasetRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_Dataset
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "UpdateDataset"
            )
        }
        public enum ListDatasets {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListDatasetsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListDatasetsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ListDatasets"
            )
        }
        public enum DeleteDataset {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteDatasetRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "DeleteDataset"
            )
        }
        public enum ImportData {
            public typealias Input = Google_Cloud_Aiplatform_V1_ImportDataRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ImportData"
            )
        }
        public enum ExportData {
            public typealias Input = Google_Cloud_Aiplatform_V1_ExportDataRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ExportData"
            )
        }
        public enum CreateDatasetVersion {
            public typealias Input = Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "CreateDatasetVersion"
            )
        }
        public enum UpdateDatasetVersion {
            public typealias Input = Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DatasetVersion
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "UpdateDatasetVersion"
            )
        }
        public enum DeleteDatasetVersion {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "DeleteDatasetVersion"
            )
        }
        public enum GetDatasetVersion {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_DatasetVersion
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "GetDatasetVersion"
            )
        }
        public enum ListDatasetVersions {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ListDatasetVersions"
            )
        }
        public enum RestoreDatasetVersion {
            public typealias Input = Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "RestoreDatasetVersion"
            )
        }
        public enum ListDataItems {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListDataItemsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListDataItemsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ListDataItems"
            )
        }
        public enum SearchDataItems {
            public typealias Input = Google_Cloud_Aiplatform_V1_SearchDataItemsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_SearchDataItemsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "SearchDataItems"
            )
        }
        public enum ListSavedQueries {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ListSavedQueries"
            )
        }
        public enum DeleteSavedQuery {
            public typealias Input = Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest
            public typealias Output = Google_Longrunning_Operation
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "DeleteSavedQuery"
            )
        }
        public enum GetAnnotationSpec {
            public typealias Input = Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_AnnotationSpec
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "GetAnnotationSpec"
            )
        }
        public enum ListAnnotations {
            public typealias Input = Google_Cloud_Aiplatform_V1_ListAnnotationsRequest
            public typealias Output = Google_Cloud_Aiplatform_V1_ListAnnotationsResponse
            public static let descriptor = GRPCCore.MethodDescriptor(
                service: Google_Cloud_Aiplatform_V1_DatasetService.descriptor.fullyQualifiedService,
                method: "ListAnnotations"
            )
        }
        public static let descriptors: [GRPCCore.MethodDescriptor] = [
            CreateDataset.descriptor,
            GetDataset.descriptor,
            UpdateDataset.descriptor,
            ListDatasets.descriptor,
            DeleteDataset.descriptor,
            ImportData.descriptor,
            ExportData.descriptor,
            CreateDatasetVersion.descriptor,
            UpdateDatasetVersion.descriptor,
            DeleteDatasetVersion.descriptor,
            GetDatasetVersion.descriptor,
            ListDatasetVersions.descriptor,
            RestoreDatasetVersion.descriptor,
            ListDataItems.descriptor,
            SearchDataItems.descriptor,
            ListSavedQueries.descriptor,
            DeleteSavedQuery.descriptor,
            GetAnnotationSpec.descriptor,
            ListAnnotations.descriptor
        ]
    }
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias ClientProtocol = Google_Cloud_Aiplatform_V1_DatasetService_ClientProtocol
    @available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
    public typealias Client = Google_Cloud_Aiplatform_V1_DatasetService_Client
}

extension GRPCCore.ServiceDescriptor {
    public static let google_cloud_aiplatform_v1_DatasetService = Self(
        package: "google.cloud.aiplatform.v1",
        service: "DatasetService"
    )
}

/// The service that manages Vertex AI Dataset and its child resources.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public protocol Google_Cloud_Aiplatform_V1_DatasetService_ClientProtocol: Sendable {
    /// Creates a Dataset.
    func createDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a Dataset.
    func getDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Dataset>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a Dataset.
    func updateDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Dataset>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Datasets in a Location.
    func listDatasets<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a Dataset.
    func deleteDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Imports data into a Dataset.
    func importData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ImportDataRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ImportDataRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Exports data from a Dataset.
    func exportData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExportDataRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ExportDataRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Create a version from a Dataset.
    func createDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Updates a DatasetVersion.
    func updateDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a Dataset version.
    func deleteDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets a Dataset version.
    func getDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists DatasetVersions in a Dataset.
    func listDatasetVersions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Restores a dataset version.
    func restoreDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists DataItems in a Dataset.
    func listDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Searches DataItems in a Dataset.
    func searchDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists SavedQueries in a Dataset.
    func listSavedQueries<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Deletes a SavedQuery.
    func deleteSavedQuery<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Gets an AnnotationSpec.
    func getAnnotationSpec<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AnnotationSpec>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AnnotationSpec>) async throws -> R
    ) async throws -> R where R: Sendable
    
    /// Lists Annotations belongs to a dataitem
    func listAnnotations<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>,
        options: GRPCCore.CallOptions,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>) async throws -> R
    ) async throws -> R where R: Sendable
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_DatasetService.ClientProtocol {
    public func createDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createDataset(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getDataset(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetDatasetRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Dataset>(),
            options: options,
            body
        )
    }
    
    public func updateDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateDataset(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_Dataset>(),
            options: options,
            body
        )
    }
    
    public func listDatasets<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listDatasets(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteDataset(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func importData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ImportDataRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.importData(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ImportDataRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func exportData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExportDataRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.exportData(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ExportDataRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func createDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.createDatasetVersion(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func updateDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.updateDatasetVersion(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>(),
            options: options,
            body
        )
    }
    
    public func deleteDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteDatasetVersion(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getDatasetVersion(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>(),
            options: options,
            body
        )
    }
    
    public func listDatasetVersions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listDatasetVersions(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>(),
            options: options,
            body
        )
    }
    
    public func restoreDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.restoreDatasetVersion(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func listDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listDataItems(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>(),
            options: options,
            body
        )
    }
    
    public func searchDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.searchDataItems(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>(),
            options: options,
            body
        )
    }
    
    public func listSavedQueries<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listSavedQueries(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>(),
            options: options,
            body
        )
    }
    
    public func deleteSavedQuery<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.deleteSavedQuery(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Longrunning_Operation>(),
            options: options,
            body
        )
    }
    
    public func getAnnotationSpec<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AnnotationSpec>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.getAnnotationSpec(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_AnnotationSpec>(),
            options: options,
            body
        )
    }
    
    public func listAnnotations<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.listAnnotations(
            request: request,
            serializer: GRPCProtobuf.ProtobufSerializer<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>(),
            deserializer: GRPCProtobuf.ProtobufDeserializer<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>(),
            options: options,
            body
        )
    }
}

@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
extension Google_Cloud_Aiplatform_V1_DatasetService.ClientProtocol {
    /// Creates a Dataset.
    public func createDataset<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateDatasetRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createDataset(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a Dataset.
    public func getDataset<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetDatasetRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getDataset(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a Dataset.
    public func updateDataset<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateDatasetRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateDataset(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Datasets in a Location.
    public func listDatasets<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListDatasetsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listDatasets(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a Dataset.
    public func deleteDataset<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteDatasetRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteDataset(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Imports data into a Dataset.
    public func importData<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ImportDataRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ImportDataRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.importData(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Exports data from a Dataset.
    public func exportData<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ExportDataRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExportDataRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.exportData(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Create a version from a Dataset.
    public func createDatasetVersion<Result>(
        _ message: Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.createDatasetVersion(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Updates a DatasetVersion.
    public func updateDatasetVersion<Result>(
        _ message: Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.updateDatasetVersion(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a Dataset version.
    public func deleteDatasetVersion<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteDatasetVersion(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets a Dataset version.
    public func getDatasetVersion<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getDatasetVersion(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists DatasetVersions in a Dataset.
    public func listDatasetVersions<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listDatasetVersions(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Restores a dataset version.
    public func restoreDatasetVersion<Result>(
        _ message: Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.restoreDatasetVersion(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists DataItems in a Dataset.
    public func listDataItems<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListDataItemsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listDataItems(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Searches DataItems in a Dataset.
    public func searchDataItems<Result>(
        _ message: Google_Cloud_Aiplatform_V1_SearchDataItemsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.searchDataItems(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists SavedQueries in a Dataset.
    public func listSavedQueries<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listSavedQueries(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Deletes a SavedQuery.
    public func deleteSavedQuery<Result>(
        _ message: Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.deleteSavedQuery(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Gets an AnnotationSpec.
    public func getAnnotationSpec<Result>(
        _ message: Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AnnotationSpec>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.getAnnotationSpec(
            request: request,
            options: options,
            handleResponse
        )
    }
    
    /// Lists Annotations belongs to a dataitem
    public func listAnnotations<Result>(
        _ message: Google_Cloud_Aiplatform_V1_ListAnnotationsRequest,
        metadata: GRPCCore.Metadata = [:],
        options: GRPCCore.CallOptions = .defaults,
        onResponse handleResponse: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>) async throws -> Result = {
            try $0.message
        }
    ) async throws -> Result where Result: Sendable {
        let request = GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>(
            message: message,
            metadata: metadata
        )
        return try await self.listAnnotations(
            request: request,
            options: options,
            handleResponse
        )
    }
}

/// The service that manages Vertex AI Dataset and its child resources.
@available(macOS 15.0, iOS 18.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)
public struct Google_Cloud_Aiplatform_V1_DatasetService_Client: Google_Cloud_Aiplatform_V1_DatasetService.ClientProtocol {
    private let client: GRPCCore.GRPCClient
    
    public init(wrapping client: GRPCCore.GRPCClient) {
        self.client = client
    }
    
    /// Creates a Dataset.
    public func createDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.CreateDataset.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a Dataset.
    public func getDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Dataset>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.GetDataset.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a Dataset.
    public func updateDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_Dataset>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_Dataset>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.UpdateDataset.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Datasets in a Location.
    public func listDatasets<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDatasetsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ListDatasets.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a Dataset.
    public func deleteDataset<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.DeleteDataset.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Imports data into a Dataset.
    public func importData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ImportDataRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ImportDataRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ImportData.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Exports data from a Dataset.
    public func exportData<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ExportDataRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ExportDataRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ExportData.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Create a version from a Dataset.
    public func createDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_CreateDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.CreateDatasetVersion.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Updates a DatasetVersion.
    public func updateDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_UpdateDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.UpdateDatasetVersion.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a Dataset version.
    public func deleteDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.DeleteDatasetVersion.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets a Dataset version.
    public func getDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_DatasetVersion>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_DatasetVersion>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.GetDatasetVersion.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists DatasetVersions in a Dataset.
    public func listDatasetVersions<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDatasetVersionsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ListDatasetVersions.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Restores a dataset version.
    public func restoreDatasetVersion<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_RestoreDatasetVersionRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.RestoreDatasetVersion.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists DataItems in a Dataset.
    public func listDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListDataItemsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListDataItemsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ListDataItems.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Searches DataItems in a Dataset.
    public func searchDataItems<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_SearchDataItemsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_SearchDataItemsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.SearchDataItems.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists SavedQueries in a Dataset.
    public func listSavedQueries<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListSavedQueriesResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ListSavedQueries.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Deletes a SavedQuery.
    public func deleteSavedQuery<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_DeleteSavedQueryRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Longrunning_Operation>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Longrunning_Operation>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.DeleteSavedQuery.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Gets an AnnotationSpec.
    public func getAnnotationSpec<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_GetAnnotationSpecRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_AnnotationSpec>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_AnnotationSpec>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.GetAnnotationSpec.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
    
    /// Lists Annotations belongs to a dataitem
    public func listAnnotations<R>(
        request: GRPCCore.ClientRequest<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>,
        serializer: some GRPCCore.MessageSerializer<Google_Cloud_Aiplatform_V1_ListAnnotationsRequest>,
        deserializer: some GRPCCore.MessageDeserializer<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>,
        options: GRPCCore.CallOptions = .defaults,
        _ body: @Sendable @escaping (GRPCCore.ClientResponse<Google_Cloud_Aiplatform_V1_ListAnnotationsResponse>) async throws -> R = {
            try $0.message
        }
    ) async throws -> R where R: Sendable {
        try await self.client.unary(
            request: request,
            descriptor: Google_Cloud_Aiplatform_V1_DatasetService.Method.ListAnnotations.descriptor,
            serializer: serializer,
            deserializer: deserializer,
            options: options,
            handler: body
        )
    }
}