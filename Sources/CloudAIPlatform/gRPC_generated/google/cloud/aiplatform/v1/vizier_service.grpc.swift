//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/vizier_service.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Vertex AI Vizier API.
///
/// Vertex AI Vizier is a service to solve blackbox optimization problems,
/// such as tuning machine learning hyperparameters and searching over deep
/// learning architectures.
///
/// Usage: instantiate `Google_Cloud_Aiplatform_V1_VizierServiceClient`, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Aiplatform_V1_VizierServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? { get }

  func createStudy(
    _ request: Google_Cloud_Aiplatform_V1_CreateStudyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func getStudy(
    _ request: Google_Cloud_Aiplatform_V1_GetStudyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func listStudies(
    _ request: Google_Cloud_Aiplatform_V1_ListStudiesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListStudiesRequest, Google_Cloud_Aiplatform_V1_ListStudiesResponse>

  func deleteStudy(
    _ request: Google_Cloud_Aiplatform_V1_DeleteStudyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteStudyRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func lookupStudy(
    _ request: Google_Cloud_Aiplatform_V1_LookupStudyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_LookupStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func suggestTrials(
    _ request: Google_Cloud_Aiplatform_V1_SuggestTrialsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_SuggestTrialsRequest, Google_Longrunning_Operation>

  func createTrial(
    _ request: Google_Cloud_Aiplatform_V1_CreateTrialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func getTrial(
    _ request: Google_Cloud_Aiplatform_V1_GetTrialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func listTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListTrialsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTrialsRequest, Google_Cloud_Aiplatform_V1_ListTrialsResponse>

  func addTrialMeasurement(
    _ request: Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest, Google_Cloud_Aiplatform_V1_Trial>

  func completeTrial(
    _ request: Google_Cloud_Aiplatform_V1_CompleteTrialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CompleteTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func deleteTrial(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTrialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTrialRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func checkTrialEarlyStoppingState(
    _ request: Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest, Google_Longrunning_Operation>

  func stopTrial(
    _ request: Google_Cloud_Aiplatform_V1_StopTrialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_StopTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func listOptimalTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest, Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse>
}

extension Google_Cloud_Aiplatform_V1_VizierServiceClientProtocol {
  public var serviceName: String {
    return "google.cloud.aiplatform.v1.VizierService"
  }

  /// Creates a Study. A resource name will be generated after creation of the
  /// Study.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateStudy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createStudy(
    _ request: Google_Cloud_Aiplatform_V1_CreateStudyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateStudyInterceptors() ?? []
    )
  }

  /// Gets a Study by name.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetStudy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getStudy(
    _ request: Google_Cloud_Aiplatform_V1_GetStudyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyInterceptors() ?? []
    )
  }

  /// Lists all the studies in a region for an associated project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListStudies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listStudies(
    _ request: Google_Cloud_Aiplatform_V1_ListStudiesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListStudiesRequest, Google_Cloud_Aiplatform_V1_ListStudiesResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listStudies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListStudiesInterceptors() ?? []
    )
  }

  /// Deletes a Study.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteStudy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteStudy(
    _ request: Google_Cloud_Aiplatform_V1_DeleteStudyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteStudyRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteStudyInterceptors() ?? []
    )
  }

  /// Looks a study up using the user-defined display_name field instead of the
  /// fully qualified resource name.
  ///
  /// - Parameters:
  ///   - request: Request to send to LookupStudy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func lookupStudy(
    _ request: Google_Cloud_Aiplatform_V1_LookupStudyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_LookupStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.lookupStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLookupStudyInterceptors() ?? []
    )
  }

  /// Adds one or more Trials to a Study, with parameter values
  /// suggested by Vertex AI Vizier. Returns a long-running
  /// operation associated with the generation of Trial suggestions.
  /// When this long-running operation succeeds, it will contain
  /// a
  /// [SuggestTrialsResponse][google.cloud.aiplatform.v1.SuggestTrialsResponse].
  ///
  /// - Parameters:
  ///   - request: Request to send to SuggestTrials.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func suggestTrials(
    _ request: Google_Cloud_Aiplatform_V1_SuggestTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_SuggestTrialsRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.suggestTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSuggestTrialsInterceptors() ?? []
    )
  }

  /// Adds a user provided Trial to a Study.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTrial.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTrial(
    _ request: Google_Cloud_Aiplatform_V1_CreateTrialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTrialInterceptors() ?? []
    )
  }

  /// Gets a Trial.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTrial.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTrial(
    _ request: Google_Cloud_Aiplatform_V1_GetTrialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrialInterceptors() ?? []
    )
  }

  /// Lists the Trials associated with a Study.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTrials.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTrialsRequest, Google_Cloud_Aiplatform_V1_ListTrialsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTrialsInterceptors() ?? []
    )
  }

  /// Adds a measurement of the objective metrics to a Trial. This measurement
  /// is assumed to have been taken before the Trial is complete.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddTrialMeasurement.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addTrialMeasurement(
    _ request: Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.addTrialMeasurement.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddTrialMeasurementInterceptors() ?? []
    )
  }

  /// Marks a Trial as complete.
  ///
  /// - Parameters:
  ///   - request: Request to send to CompleteTrial.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func completeTrial(
    _ request: Google_Cloud_Aiplatform_V1_CompleteTrialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CompleteTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.completeTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteTrialInterceptors() ?? []
    )
  }

  /// Deletes a Trial.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTrial.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTrial(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTrialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTrialRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrialInterceptors() ?? []
    )
  }

  /// Checks  whether a Trial should stop or not. Returns a
  /// long-running operation. When the operation is successful,
  /// it will contain a
  /// [CheckTrialEarlyStoppingStateResponse][google.cloud.aiplatform.v1.CheckTrialEarlyStoppingStateResponse].
  ///
  /// - Parameters:
  ///   - request: Request to send to CheckTrialEarlyStoppingState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func checkTrialEarlyStoppingState(
    _ request: Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.checkTrialEarlyStoppingState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckTrialEarlyStoppingStateInterceptors() ?? []
    )
  }

  /// Stops a Trial.
  ///
  /// - Parameters:
  ///   - request: Request to send to StopTrial.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func stopTrial(
    _ request: Google_Cloud_Aiplatform_V1_StopTrialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_StopTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.stopTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStopTrialInterceptors() ?? []
    )
  }

  /// Lists the pareto-optimal Trials for multi-objective Study or the
  /// optimal Trials for single-objective Study. The definition of
  /// pareto-optimal can be checked in wiki page.
  /// https://en.wikipedia.org/wiki/Pareto_efficiency
  ///
  /// - Parameters:
  ///   - request: Request to send to ListOptimalTrials.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listOptimalTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest, Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listOptimalTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListOptimalTrialsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Google_Cloud_Aiplatform_V1_VizierServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Google_Cloud_Aiplatform_V1_VizierServiceNIOClient")
public final class Google_Cloud_Aiplatform_V1_VizierServiceClient: Google_Cloud_Aiplatform_V1_VizierServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the google.cloud.aiplatform.v1.VizierService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Google_Cloud_Aiplatform_V1_VizierServiceNIOClient: Google_Cloud_Aiplatform_V1_VizierServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the google.cloud.aiplatform.v1.VizierService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Vertex AI Vizier API.
///
/// Vertex AI Vizier is a service to solve blackbox optimization problems,
/// such as tuning machine learning hyperparameters and searching over deep
/// learning architectures.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Google_Cloud_Aiplatform_V1_VizierServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? { get }

  func makeCreateStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateStudyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func makeGetStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_GetStudyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func makeListStudiesCall(
    _ request: Google_Cloud_Aiplatform_V1_ListStudiesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListStudiesRequest, Google_Cloud_Aiplatform_V1_ListStudiesResponse>

  func makeDeleteStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteStudyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteStudyRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeLookupStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_LookupStudyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_LookupStudyRequest, Google_Cloud_Aiplatform_V1_Study>

  func makeSuggestTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_SuggestTrialsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_SuggestTrialsRequest, Google_Longrunning_Operation>

  func makeCreateTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTrialRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func makeGetTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTrialRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func makeListTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTrialsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTrialsRequest, Google_Cloud_Aiplatform_V1_ListTrialsResponse>

  func makeAddTrialMeasurementCall(
    _ request: Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest, Google_Cloud_Aiplatform_V1_Trial>

  func makeCompleteTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_CompleteTrialRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CompleteTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func makeDeleteTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTrialRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTrialRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeCheckTrialEarlyStoppingStateCall(
    _ request: Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest, Google_Longrunning_Operation>

  func makeStopTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_StopTrialRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_StopTrialRequest, Google_Cloud_Aiplatform_V1_Trial>

  func makeListOptimalTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest, Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Aiplatform_V1_VizierServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCreateStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateStudyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateStudyInterceptors() ?? []
    )
  }

  public func makeGetStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_GetStudyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyInterceptors() ?? []
    )
  }

  public func makeListStudiesCall(
    _ request: Google_Cloud_Aiplatform_V1_ListStudiesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListStudiesRequest, Google_Cloud_Aiplatform_V1_ListStudiesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listStudies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListStudiesInterceptors() ?? []
    )
  }

  public func makeDeleteStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteStudyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteStudyRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteStudyInterceptors() ?? []
    )
  }

  public func makeLookupStudyCall(
    _ request: Google_Cloud_Aiplatform_V1_LookupStudyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_LookupStudyRequest, Google_Cloud_Aiplatform_V1_Study> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.lookupStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLookupStudyInterceptors() ?? []
    )
  }

  public func makeSuggestTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_SuggestTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_SuggestTrialsRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.suggestTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSuggestTrialsInterceptors() ?? []
    )
  }

  public func makeCreateTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTrialRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTrialInterceptors() ?? []
    )
  }

  public func makeGetTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTrialRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrialInterceptors() ?? []
    )
  }

  public func makeListTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTrialsRequest, Google_Cloud_Aiplatform_V1_ListTrialsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTrialsInterceptors() ?? []
    )
  }

  public func makeAddTrialMeasurementCall(
    _ request: Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.addTrialMeasurement.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddTrialMeasurementInterceptors() ?? []
    )
  }

  public func makeCompleteTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_CompleteTrialRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CompleteTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.completeTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteTrialInterceptors() ?? []
    )
  }

  public func makeDeleteTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTrialRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTrialRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrialInterceptors() ?? []
    )
  }

  public func makeCheckTrialEarlyStoppingStateCall(
    _ request: Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.checkTrialEarlyStoppingState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckTrialEarlyStoppingStateInterceptors() ?? []
    )
  }

  public func makeStopTrialCall(
    _ request: Google_Cloud_Aiplatform_V1_StopTrialRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_StopTrialRequest, Google_Cloud_Aiplatform_V1_Trial> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.stopTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStopTrialInterceptors() ?? []
    )
  }

  public func makeListOptimalTrialsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest, Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listOptimalTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListOptimalTrialsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Aiplatform_V1_VizierServiceAsyncClientProtocol {
  public func createStudy(
    _ request: Google_Cloud_Aiplatform_V1_CreateStudyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Study {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateStudyInterceptors() ?? []
    )
  }

  public func getStudy(
    _ request: Google_Cloud_Aiplatform_V1_GetStudyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Study {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStudyInterceptors() ?? []
    )
  }

  public func listStudies(
    _ request: Google_Cloud_Aiplatform_V1_ListStudiesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListStudiesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listStudies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListStudiesInterceptors() ?? []
    )
  }

  public func deleteStudy(
    _ request: Google_Cloud_Aiplatform_V1_DeleteStudyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteStudyInterceptors() ?? []
    )
  }

  public func lookupStudy(
    _ request: Google_Cloud_Aiplatform_V1_LookupStudyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Study {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.lookupStudy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLookupStudyInterceptors() ?? []
    )
  }

  public func suggestTrials(
    _ request: Google_Cloud_Aiplatform_V1_SuggestTrialsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.suggestTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSuggestTrialsInterceptors() ?? []
    )
  }

  public func createTrial(
    _ request: Google_Cloud_Aiplatform_V1_CreateTrialRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Trial {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTrialInterceptors() ?? []
    )
  }

  public func getTrial(
    _ request: Google_Cloud_Aiplatform_V1_GetTrialRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Trial {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTrialInterceptors() ?? []
    )
  }

  public func listTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListTrialsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListTrialsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTrialsInterceptors() ?? []
    )
  }

  public func addTrialMeasurement(
    _ request: Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Trial {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.addTrialMeasurement.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddTrialMeasurementInterceptors() ?? []
    )
  }

  public func completeTrial(
    _ request: Google_Cloud_Aiplatform_V1_CompleteTrialRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Trial {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.completeTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompleteTrialInterceptors() ?? []
    )
  }

  public func deleteTrial(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTrialRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTrialInterceptors() ?? []
    )
  }

  public func checkTrialEarlyStoppingState(
    _ request: Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.checkTrialEarlyStoppingState.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCheckTrialEarlyStoppingStateInterceptors() ?? []
    )
  }

  public func stopTrial(
    _ request: Google_Cloud_Aiplatform_V1_StopTrialRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Trial {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.stopTrial.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStopTrialInterceptors() ?? []
    )
  }

  public func listOptimalTrials(
    _ request: Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listOptimalTrials.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListOptimalTrialsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Google_Cloud_Aiplatform_V1_VizierServiceAsyncClient: Google_Cloud_Aiplatform_V1_VizierServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Google_Cloud_Aiplatform_V1_VizierServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createStudy'.
  func makeCreateStudyInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateStudyRequest, Google_Cloud_Aiplatform_V1_Study>]

  /// - Returns: Interceptors to use when invoking 'getStudy'.
  func makeGetStudyInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetStudyRequest, Google_Cloud_Aiplatform_V1_Study>]

  /// - Returns: Interceptors to use when invoking 'listStudies'.
  func makeListStudiesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListStudiesRequest, Google_Cloud_Aiplatform_V1_ListStudiesResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteStudy'.
  func makeDeleteStudyInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteStudyRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'lookupStudy'.
  func makeLookupStudyInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_LookupStudyRequest, Google_Cloud_Aiplatform_V1_Study>]

  /// - Returns: Interceptors to use when invoking 'suggestTrials'.
  func makeSuggestTrialsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_SuggestTrialsRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'createTrial'.
  func makeCreateTrialInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateTrialRequest, Google_Cloud_Aiplatform_V1_Trial>]

  /// - Returns: Interceptors to use when invoking 'getTrial'.
  func makeGetTrialInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetTrialRequest, Google_Cloud_Aiplatform_V1_Trial>]

  /// - Returns: Interceptors to use when invoking 'listTrials'.
  func makeListTrialsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListTrialsRequest, Google_Cloud_Aiplatform_V1_ListTrialsResponse>]

  /// - Returns: Interceptors to use when invoking 'addTrialMeasurement'.
  func makeAddTrialMeasurementInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_AddTrialMeasurementRequest, Google_Cloud_Aiplatform_V1_Trial>]

  /// - Returns: Interceptors to use when invoking 'completeTrial'.
  func makeCompleteTrialInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CompleteTrialRequest, Google_Cloud_Aiplatform_V1_Trial>]

  /// - Returns: Interceptors to use when invoking 'deleteTrial'.
  func makeDeleteTrialInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteTrialRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'checkTrialEarlyStoppingState'.
  func makeCheckTrialEarlyStoppingStateInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CheckTrialEarlyStoppingStateRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'stopTrial'.
  func makeStopTrialInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_StopTrialRequest, Google_Cloud_Aiplatform_V1_Trial>]

  /// - Returns: Interceptors to use when invoking 'listOptimalTrials'.
  func makeListOptimalTrialsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListOptimalTrialsRequest, Google_Cloud_Aiplatform_V1_ListOptimalTrialsResponse>]
}

public enum Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "VizierService",
    fullName: "google.cloud.aiplatform.v1.VizierService",
    methods: [
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createStudy,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getStudy,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listStudies,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteStudy,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.lookupStudy,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.suggestTrials,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.createTrial,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.getTrial,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listTrials,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.addTrialMeasurement,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.completeTrial,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.deleteTrial,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.checkTrialEarlyStoppingState,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.stopTrial,
      Google_Cloud_Aiplatform_V1_VizierServiceClientMetadata.Methods.listOptimalTrials,
    ]
  )

  public enum Methods {
    public static let createStudy = GRPCMethodDescriptor(
      name: "CreateStudy",
      path: "/google.cloud.aiplatform.v1.VizierService/CreateStudy",
      type: GRPCCallType.unary
    )

    public static let getStudy = GRPCMethodDescriptor(
      name: "GetStudy",
      path: "/google.cloud.aiplatform.v1.VizierService/GetStudy",
      type: GRPCCallType.unary
    )

    public static let listStudies = GRPCMethodDescriptor(
      name: "ListStudies",
      path: "/google.cloud.aiplatform.v1.VizierService/ListStudies",
      type: GRPCCallType.unary
    )

    public static let deleteStudy = GRPCMethodDescriptor(
      name: "DeleteStudy",
      path: "/google.cloud.aiplatform.v1.VizierService/DeleteStudy",
      type: GRPCCallType.unary
    )

    public static let lookupStudy = GRPCMethodDescriptor(
      name: "LookupStudy",
      path: "/google.cloud.aiplatform.v1.VizierService/LookupStudy",
      type: GRPCCallType.unary
    )

    public static let suggestTrials = GRPCMethodDescriptor(
      name: "SuggestTrials",
      path: "/google.cloud.aiplatform.v1.VizierService/SuggestTrials",
      type: GRPCCallType.unary
    )

    public static let createTrial = GRPCMethodDescriptor(
      name: "CreateTrial",
      path: "/google.cloud.aiplatform.v1.VizierService/CreateTrial",
      type: GRPCCallType.unary
    )

    public static let getTrial = GRPCMethodDescriptor(
      name: "GetTrial",
      path: "/google.cloud.aiplatform.v1.VizierService/GetTrial",
      type: GRPCCallType.unary
    )

    public static let listTrials = GRPCMethodDescriptor(
      name: "ListTrials",
      path: "/google.cloud.aiplatform.v1.VizierService/ListTrials",
      type: GRPCCallType.unary
    )

    public static let addTrialMeasurement = GRPCMethodDescriptor(
      name: "AddTrialMeasurement",
      path: "/google.cloud.aiplatform.v1.VizierService/AddTrialMeasurement",
      type: GRPCCallType.unary
    )

    public static let completeTrial = GRPCMethodDescriptor(
      name: "CompleteTrial",
      path: "/google.cloud.aiplatform.v1.VizierService/CompleteTrial",
      type: GRPCCallType.unary
    )

    public static let deleteTrial = GRPCMethodDescriptor(
      name: "DeleteTrial",
      path: "/google.cloud.aiplatform.v1.VizierService/DeleteTrial",
      type: GRPCCallType.unary
    )

    public static let checkTrialEarlyStoppingState = GRPCMethodDescriptor(
      name: "CheckTrialEarlyStoppingState",
      path: "/google.cloud.aiplatform.v1.VizierService/CheckTrialEarlyStoppingState",
      type: GRPCCallType.unary
    )

    public static let stopTrial = GRPCMethodDescriptor(
      name: "StopTrial",
      path: "/google.cloud.aiplatform.v1.VizierService/StopTrial",
      type: GRPCCallType.unary
    )

    public static let listOptimalTrials = GRPCMethodDescriptor(
      name: "ListOptimalTrials",
      path: "/google.cloud.aiplatform.v1.VizierService/ListOptimalTrials",
      type: GRPCCallType.unary
    )
  }
}

