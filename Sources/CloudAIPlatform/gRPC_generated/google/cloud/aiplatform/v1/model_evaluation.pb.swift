// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/model_evaluation.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// A collection of metrics calculated by comparing Model's predictions on all of
/// the test data against annotations from the test data.
public struct Google_Cloud_Aiplatform_V1_ModelEvaluation: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the ModelEvaluation.
  public var name: String = String()

  /// The display name of the ModelEvaluation.
  public var displayName: String = String()

  /// Points to a YAML file stored on Google Cloud Storage describing the
  /// [metrics][google.cloud.aiplatform.v1.ModelEvaluation.metrics] of this
  /// ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema
  /// Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
  public var metricsSchemaUri: String = String()

  /// Evaluation metrics of the Model. The schema of the metrics is stored in
  /// [metrics_schema_uri][google.cloud.aiplatform.v1.ModelEvaluation.metrics_schema_uri]
  public var metrics: SwiftProtobuf.Google_Protobuf_Value {
    get {return _metrics ?? SwiftProtobuf.Google_Protobuf_Value()}
    set {_metrics = newValue}
  }
  /// Returns true if `metrics` has been explicitly set.
  public var hasMetrics: Bool {return self._metrics != nil}
  /// Clears the value of `metrics`. Subsequent reads from it will return its default value.
  public mutating func clearMetrics() {self._metrics = nil}

  /// Output only. Timestamp when this ModelEvaluation was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return self._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {self._createTime = nil}

  /// All possible
  /// [dimensions][google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice.dimension]
  /// of ModelEvaluationSlices. The dimensions can be used as the filter of the
  /// [ModelService.ListModelEvaluationSlices][google.cloud.aiplatform.v1.ModelService.ListModelEvaluationSlices]
  /// request, in the form of `slice.dimension = <dimension>`.
  public var sliceDimensions: [String] = []

  /// Points to a YAML file stored on Google Cloud Storage describing
  /// [EvaluatedDataItemView.data_item_payload][] and
  /// [EvaluatedAnnotation.data_item_payload][google.cloud.aiplatform.v1.EvaluatedAnnotation.data_item_payload].
  /// The schema is defined as an OpenAPI 3.0.2 [Schema
  /// Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
  ///
  /// This field is not populated if there are neither EvaluatedDataItemViews nor
  /// EvaluatedAnnotations under this ModelEvaluation.
  public var dataItemSchemaUri: String = String()

  /// Points to a YAML file stored on Google Cloud Storage describing
  /// [EvaluatedDataItemView.predictions][],
  /// [EvaluatedDataItemView.ground_truths][],
  /// [EvaluatedAnnotation.predictions][google.cloud.aiplatform.v1.EvaluatedAnnotation.predictions],
  /// and
  /// [EvaluatedAnnotation.ground_truths][google.cloud.aiplatform.v1.EvaluatedAnnotation.ground_truths].
  /// The schema is defined as an OpenAPI 3.0.2 [Schema
  /// Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
  ///
  /// This field is not populated if there are neither EvaluatedDataItemViews nor
  /// EvaluatedAnnotations under this ModelEvaluation.
  public var annotationSchemaUri: String = String()

  /// Aggregated explanation metrics for the Model's prediction output over the
  /// data this ModelEvaluation uses. This field is populated only if the Model
  /// is evaluated with explanations, and only for AutoML tabular Models.
  public var modelExplanation: Google_Cloud_Aiplatform_V1_ModelExplanation {
    get {return _modelExplanation ?? Google_Cloud_Aiplatform_V1_ModelExplanation()}
    set {_modelExplanation = newValue}
  }
  /// Returns true if `modelExplanation` has been explicitly set.
  public var hasModelExplanation: Bool {return self._modelExplanation != nil}
  /// Clears the value of `modelExplanation`. Subsequent reads from it will return its default value.
  public mutating func clearModelExplanation() {self._modelExplanation = nil}

  /// Describes the values of
  /// [ExplanationSpec][google.cloud.aiplatform.v1.ExplanationSpec] that are used
  /// for explaining the predicted values on the evaluated data.
  public var explanationSpecs: [Google_Cloud_Aiplatform_V1_ModelEvaluation.ModelEvaluationExplanationSpec] = []

  /// The metadata of the ModelEvaluation.
  /// For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a
  /// structured value with keys of "pipeline_job_id", "evaluation_dataset_type",
  /// "evaluation_dataset_path", "row_based_metrics_path".
  public var metadata: SwiftProtobuf.Google_Protobuf_Value {
    get {return _metadata ?? SwiftProtobuf.Google_Protobuf_Value()}
    set {_metadata = newValue}
  }
  /// Returns true if `metadata` has been explicitly set.
  public var hasMetadata: Bool {return self._metadata != nil}
  /// Clears the value of `metadata`. Subsequent reads from it will return its default value.
  public mutating func clearMetadata() {self._metadata = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct ModelEvaluationExplanationSpec: Sendable {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Explanation type.
    ///
    /// For AutoML Image Classification models, possible values are:
    ///
    ///   * `image-integrated-gradients`
    ///   * `image-xrai`
    public var explanationType: String = String()

    /// Explanation spec details.
    public var explanationSpec: Google_Cloud_Aiplatform_V1_ExplanationSpec {
      get {return _explanationSpec ?? Google_Cloud_Aiplatform_V1_ExplanationSpec()}
      set {_explanationSpec = newValue}
    }
    /// Returns true if `explanationSpec` has been explicitly set.
    public var hasExplanationSpec: Bool {return self._explanationSpec != nil}
    /// Clears the value of `explanationSpec`. Subsequent reads from it will return its default value.
    public mutating func clearExplanationSpec() {self._explanationSpec = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    fileprivate var _explanationSpec: Google_Cloud_Aiplatform_V1_ExplanationSpec? = nil
  }

  public init() {}

  fileprivate var _metrics: SwiftProtobuf.Google_Protobuf_Value? = nil
  fileprivate var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
  fileprivate var _modelExplanation: Google_Cloud_Aiplatform_V1_ModelExplanation? = nil
  fileprivate var _metadata: SwiftProtobuf.Google_Protobuf_Value? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1"

extension Google_Cloud_Aiplatform_V1_ModelEvaluation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ModelEvaluation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    10: .standard(proto: "display_name"),
    2: .standard(proto: "metrics_schema_uri"),
    3: .same(proto: "metrics"),
    4: .standard(proto: "create_time"),
    5: .standard(proto: "slice_dimensions"),
    6: .standard(proto: "data_item_schema_uri"),
    7: .standard(proto: "annotation_schema_uri"),
    8: .standard(proto: "model_explanation"),
    9: .standard(proto: "explanation_specs"),
    11: .same(proto: "metadata"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.metricsSchemaUri) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._metrics) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._createTime) }()
      case 5: try { try decoder.decodeRepeatedStringField(value: &self.sliceDimensions) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.dataItemSchemaUri) }()
      case 7: try { try decoder.decodeSingularStringField(value: &self.annotationSchemaUri) }()
      case 8: try { try decoder.decodeSingularMessageField(value: &self._modelExplanation) }()
      case 9: try { try decoder.decodeRepeatedMessageField(value: &self.explanationSpecs) }()
      case 10: try { try decoder.decodeSingularStringField(value: &self.displayName) }()
      case 11: try { try decoder.decodeSingularMessageField(value: &self._metadata) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.metricsSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.metricsSchemaUri, fieldNumber: 2)
    }
    try { if let v = self._metrics {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._createTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    } }()
    if !self.sliceDimensions.isEmpty {
      try visitor.visitRepeatedStringField(value: self.sliceDimensions, fieldNumber: 5)
    }
    if !self.dataItemSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.dataItemSchemaUri, fieldNumber: 6)
    }
    if !self.annotationSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.annotationSchemaUri, fieldNumber: 7)
    }
    try { if let v = self._modelExplanation {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    } }()
    if !self.explanationSpecs.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.explanationSpecs, fieldNumber: 9)
    }
    if !self.displayName.isEmpty {
      try visitor.visitSingularStringField(value: self.displayName, fieldNumber: 10)
    }
    try { if let v = self._metadata {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_ModelEvaluation, rhs: Google_Cloud_Aiplatform_V1_ModelEvaluation) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.displayName != rhs.displayName {return false}
    if lhs.metricsSchemaUri != rhs.metricsSchemaUri {return false}
    if lhs._metrics != rhs._metrics {return false}
    if lhs._createTime != rhs._createTime {return false}
    if lhs.sliceDimensions != rhs.sliceDimensions {return false}
    if lhs.dataItemSchemaUri != rhs.dataItemSchemaUri {return false}
    if lhs.annotationSchemaUri != rhs.annotationSchemaUri {return false}
    if lhs._modelExplanation != rhs._modelExplanation {return false}
    if lhs.explanationSpecs != rhs.explanationSpecs {return false}
    if lhs._metadata != rhs._metadata {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1_ModelEvaluation.ModelEvaluationExplanationSpec: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1_ModelEvaluation.protoMessageName + ".ModelEvaluationExplanationSpec"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "explanation_type"),
    2: .standard(proto: "explanation_spec"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.explanationType) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._explanationSpec) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.explanationType.isEmpty {
      try visitor.visitSingularStringField(value: self.explanationType, fieldNumber: 1)
    }
    try { if let v = self._explanationSpec {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1_ModelEvaluation.ModelEvaluationExplanationSpec, rhs: Google_Cloud_Aiplatform_V1_ModelEvaluation.ModelEvaluationExplanationSpec) -> Bool {
    if lhs.explanationType != rhs.explanationType {return false}
    if lhs._explanationSpec != rhs._explanationSpec {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
