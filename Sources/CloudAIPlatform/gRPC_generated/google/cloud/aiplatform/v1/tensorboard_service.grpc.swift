//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1/tensorboard_service.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// TensorboardService
///
/// Usage: instantiate `Google_Cloud_Aiplatform_V1_TensorboardServiceClient`, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Aiplatform_V1_TensorboardServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? { get }

  func createTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRequest, Google_Longrunning_Operation>

  func getTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRequest, Google_Cloud_Aiplatform_V1_Tensorboard>

  func updateTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest, Google_Longrunning_Operation>

  func listTensorboards(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardsResponse>

  func deleteTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest, Google_Longrunning_Operation>

  func readTensorboardUsage(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse>

  func readTensorboardSize(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse>

  func createTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func getTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func updateTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func listTensorboardExperiments(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse>

  func deleteTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest, Google_Longrunning_Operation>

  func createTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func batchCreateTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse>

  func getTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func updateTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func listTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse>

  func deleteTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest, Google_Longrunning_Operation>

  func batchCreateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse>

  func createTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func getTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func updateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func listTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse>

  func deleteTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest, Google_Longrunning_Operation>

  func batchReadTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse>

  func readTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse>

  func readTensorboardBlobData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest,
    callOptions: CallOptions?,
    handler: @escaping (Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse) -> Void
  ) -> ServerStreamingCall<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse>

  func writeTensorboardExperimentData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse>

  func writeTensorboardRunData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse>

  func exportTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse>
}

extension Google_Cloud_Aiplatform_V1_TensorboardServiceClientProtocol {
  public var serviceName: String {
    return "google.cloud.aiplatform.v1.TensorboardService"
  }

  /// Creates a Tensorboard.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTensorboard.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardInterceptors() ?? []
    )
  }

  /// Gets a Tensorboard.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTensorboard.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRequest, Google_Cloud_Aiplatform_V1_Tensorboard> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardInterceptors() ?? []
    )
  }

  /// Updates a Tensorboard.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTensorboard.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardInterceptors() ?? []
    )
  }

  /// Lists Tensorboards in a Location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTensorboards.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTensorboards(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardsInterceptors() ?? []
    )
  }

  /// Deletes a Tensorboard.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTensorboard.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardInterceptors() ?? []
    )
  }

  /// Returns a list of monthly active users for a given TensorBoard instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReadTensorboardUsage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func readTensorboardUsage(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardUsageInterceptors() ?? []
    )
  }

  /// Returns the storage size for a given TensorBoard instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReadTensorboardSize.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func readTensorboardSize(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardSize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardSizeInterceptors() ?? []
    )
  }

  /// Creates a TensorboardExperiment.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTensorboardExperiment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardExperimentInterceptors() ?? []
    )
  }

  /// Gets a TensorboardExperiment.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTensorboardExperiment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardExperimentInterceptors() ?? []
    )
  }

  /// Updates a TensorboardExperiment.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTensorboardExperiment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardExperimentInterceptors() ?? []
    )
  }

  /// Lists TensorboardExperiments in a Location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTensorboardExperiments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTensorboardExperiments(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardExperiments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardExperimentsInterceptors() ?? []
    )
  }

  /// Deletes a TensorboardExperiment.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTensorboardExperiment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardExperimentInterceptors() ?? []
    )
  }

  /// Creates a TensorboardRun.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTensorboardRun.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardRunInterceptors() ?? []
    )
  }

  /// Batch create TensorboardRuns.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateTensorboardRuns.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func batchCreateTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardRunsInterceptors() ?? []
    )
  }

  /// Gets a TensorboardRun.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTensorboardRun.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardRunInterceptors() ?? []
    )
  }

  /// Updates a TensorboardRun.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTensorboardRun.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardRunInterceptors() ?? []
    )
  }

  /// Lists TensorboardRuns in a Location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTensorboardRuns.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardRunsInterceptors() ?? []
    )
  }

  /// Deletes a TensorboardRun.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTensorboardRun.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardRunInterceptors() ?? []
    )
  }

  /// Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func batchCreateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Creates a TensorboardTimeSeries.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Gets a TensorboardTimeSeries.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Updates a TensorboardTimeSeries.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Lists TensorboardTimeSeries in a Location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Deletes a TensorboardTimeSeries.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTensorboardTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  /// Reads multiple TensorboardTimeSeries' data. The data point number limit is
  /// 1000 for scalars, 100 for tensors and blob references. If the number of
  /// data points stored is less than the limit, all data is returned.
  /// Otherwise, the number limit of data points is randomly selected from
  /// this time series and returned.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchReadTensorboardTimeSeriesData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func batchReadTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchReadTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  /// Reads a TensorboardTimeSeries' data. By default, if the number of data
  /// points stored is less than 1000, all data is returned. Otherwise, 1000
  /// data points is randomly selected from this time series and returned.
  /// This value can be changed by changing max_data_points, which can't be
  /// greater than 10k.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReadTensorboardTimeSeriesData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func readTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  /// Gets bytes of TensorboardBlobs.
  /// This is to allow reading blob data stored in consumer project's Cloud
  /// Storage bucket without users having to obtain Cloud Storage access
  /// permission.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReadTensorboardBlobData.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func readTensorboardBlobData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse) -> Void
  ) -> ServerStreamingCall<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse> {
    return self.makeServerStreamingCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardBlobData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardBlobDataInterceptors() ?? [],
      handler: handler
    )
  }

  /// Write time series data points of multiple TensorboardTimeSeries in multiple
  /// TensorboardRun's. If any data fail to be ingested, an error is returned.
  ///
  /// - Parameters:
  ///   - request: Request to send to WriteTensorboardExperimentData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func writeTensorboardExperimentData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardExperimentData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardExperimentDataInterceptors() ?? []
    )
  }

  /// Write time series data points into multiple TensorboardTimeSeries under
  /// a TensorboardRun. If any data fail to be ingested, an error is returned.
  ///
  /// - Parameters:
  ///   - request: Request to send to WriteTensorboardRunData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func writeTensorboardRunData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardRunData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardRunDataInterceptors() ?? []
    )
  }

  /// Exports a TensorboardTimeSeries' data. Data is returned in paginated
  /// responses.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportTensorboardTimeSeriesData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse> {
    return self.makeUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.exportTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Google_Cloud_Aiplatform_V1_TensorboardServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Google_Cloud_Aiplatform_V1_TensorboardServiceNIOClient")
public final class Google_Cloud_Aiplatform_V1_TensorboardServiceClient: Google_Cloud_Aiplatform_V1_TensorboardServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the google.cloud.aiplatform.v1.TensorboardService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Google_Cloud_Aiplatform_V1_TensorboardServiceNIOClient: Google_Cloud_Aiplatform_V1_TensorboardServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the google.cloud.aiplatform.v1.TensorboardService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// TensorboardService
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Google_Cloud_Aiplatform_V1_TensorboardServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? { get }

  func makeCreateTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRequest, Google_Longrunning_Operation>

  func makeGetTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRequest, Google_Cloud_Aiplatform_V1_Tensorboard>

  func makeUpdateTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest, Google_Longrunning_Operation>

  func makeListTensorboardsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardsResponse>

  func makeDeleteTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest, Google_Longrunning_Operation>

  func makeReadTensorboardUsageCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse>

  func makeReadTensorboardSizeCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse>

  func makeCreateTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func makeGetTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func makeUpdateTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>

  func makeListTensorboardExperimentsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse>

  func makeDeleteTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest, Google_Longrunning_Operation>

  func makeCreateTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func makeBatchCreateTensorboardRunsCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse>

  func makeGetTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func makeUpdateTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>

  func makeListTensorboardRunsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse>

  func makeDeleteTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest, Google_Longrunning_Operation>

  func makeBatchCreateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse>

  func makeCreateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func makeGetTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func makeUpdateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>

  func makeListTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse>

  func makeDeleteTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest, Google_Longrunning_Operation>

  func makeBatchReadTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse>

  func makeReadTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse>

  func makeReadTensorboardBlobDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse>

  func makeWriteTensorboardExperimentDataCall(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse>

  func makeWriteTensorboardRunDataCall(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse>

  func makeExportTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Aiplatform_V1_TensorboardServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCreateTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardInterceptors() ?? []
    )
  }

  public func makeGetTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRequest, Google_Cloud_Aiplatform_V1_Tensorboard> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardInterceptors() ?? []
    )
  }

  public func makeUpdateTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardInterceptors() ?? []
    )
  }

  public func makeListTensorboardsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardsInterceptors() ?? []
    )
  }

  public func makeDeleteTensorboardCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardInterceptors() ?? []
    )
  }

  public func makeReadTensorboardUsageCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardUsageInterceptors() ?? []
    )
  }

  public func makeReadTensorboardSizeCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardSize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardSizeInterceptors() ?? []
    )
  }

  public func makeCreateTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardExperimentInterceptors() ?? []
    )
  }

  public func makeGetTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardExperimentInterceptors() ?? []
    )
  }

  public func makeUpdateTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardExperimentInterceptors() ?? []
    )
  }

  public func makeListTensorboardExperimentsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardExperiments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardExperimentsInterceptors() ?? []
    )
  }

  public func makeDeleteTensorboardExperimentCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardExperimentInterceptors() ?? []
    )
  }

  public func makeCreateTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardRunInterceptors() ?? []
    )
  }

  public func makeBatchCreateTensorboardRunsCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardRunsInterceptors() ?? []
    )
  }

  public func makeGetTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardRunInterceptors() ?? []
    )
  }

  public func makeUpdateTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardRunInterceptors() ?? []
    )
  }

  public func makeListTensorboardRunsCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardRunsInterceptors() ?? []
    )
  }

  public func makeDeleteTensorboardRunCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardRunInterceptors() ?? []
    )
  }

  public func makeBatchCreateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeCreateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeGetTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeUpdateTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeListTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeDeleteTensorboardTimeSeriesCall(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest, Google_Longrunning_Operation> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func makeBatchReadTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchReadTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  public func makeReadTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  public func makeReadTensorboardBlobDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardBlobData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardBlobDataInterceptors() ?? []
    )
  }

  public func makeWriteTensorboardExperimentDataCall(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardExperimentData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardExperimentDataInterceptors() ?? []
    )
  }

  public func makeWriteTensorboardRunDataCall(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardRunData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardRunDataInterceptors() ?? []
    )
  }

  public func makeExportTensorboardTimeSeriesDataCall(
    _ request: Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.exportTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Google_Cloud_Aiplatform_V1_TensorboardServiceAsyncClientProtocol {
  public func createTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardInterceptors() ?? []
    )
  }

  public func getTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_Tensorboard {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardInterceptors() ?? []
    )
  }

  public func updateTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardInterceptors() ?? []
    )
  }

  public func listTensorboards(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListTensorboardsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardsInterceptors() ?? []
    )
  }

  public func deleteTensorboard(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboard.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardInterceptors() ?? []
    )
  }

  public func readTensorboardUsage(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardUsage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardUsageInterceptors() ?? []
    )
  }

  public func readTensorboardSize(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardSize.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardSizeInterceptors() ?? []
    )
  }

  public func createTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardExperiment {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardExperimentInterceptors() ?? []
    )
  }

  public func getTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardExperiment {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardExperimentInterceptors() ?? []
    )
  }

  public func updateTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardExperiment {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardExperimentInterceptors() ?? []
    )
  }

  public func listTensorboardExperiments(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardExperiments.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardExperimentsInterceptors() ?? []
    )
  }

  public func deleteTensorboardExperiment(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardExperiment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardExperimentInterceptors() ?? []
    )
  }

  public func createTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardRun {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardRunInterceptors() ?? []
    )
  }

  public func batchCreateTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardRunsInterceptors() ?? []
    )
  }

  public func getTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardRun {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardRunInterceptors() ?? []
    )
  }

  public func updateTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardRun {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardRunInterceptors() ?? []
    )
  }

  public func listTensorboardRuns(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardRuns.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardRunsInterceptors() ?? []
    )
  }

  public func deleteTensorboardRun(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardRun.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardRunInterceptors() ?? []
    )
  }

  public func batchCreateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func createTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardTimeSeries {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func getTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardTimeSeries {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func updateTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_TensorboardTimeSeries {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func listTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func deleteTensorboardTimeSeries(
    _ request: Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Longrunning_Operation {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardTimeSeries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteTensorboardTimeSeriesInterceptors() ?? []
    )
  }

  public func batchReadTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchReadTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  public func readTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }

  public func readTensorboardBlobData(
    _ request: Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse> {
    return self.performAsyncServerStreamingCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardBlobData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReadTensorboardBlobDataInterceptors() ?? []
    )
  }

  public func writeTensorboardExperimentData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardExperimentData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardExperimentDataInterceptors() ?? []
    )
  }

  public func writeTensorboardRunData(
    _ request: Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardRunData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteTensorboardRunDataInterceptors() ?? []
    )
  }

  public func exportTensorboardTimeSeriesData(
    _ request: Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.exportTensorboardTimeSeriesData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportTensorboardTimeSeriesDataInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Google_Cloud_Aiplatform_V1_TensorboardServiceAsyncClient: Google_Cloud_Aiplatform_V1_TensorboardServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Google_Cloud_Aiplatform_V1_TensorboardServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'createTensorboard'.
  func makeCreateTensorboardInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateTensorboardRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'getTensorboard'.
  func makeGetTensorboardInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetTensorboardRequest, Google_Cloud_Aiplatform_V1_Tensorboard>]

  /// - Returns: Interceptors to use when invoking 'updateTensorboard'.
  func makeUpdateTensorboardInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_UpdateTensorboardRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'listTensorboards'.
  func makeListTensorboardsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListTensorboardsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteTensorboard'.
  func makeDeleteTensorboardInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteTensorboardRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'readTensorboardUsage'.
  func makeReadTensorboardUsageInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ReadTensorboardUsageRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardUsageResponse>]

  /// - Returns: Interceptors to use when invoking 'readTensorboardSize'.
  func makeReadTensorboardSizeInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ReadTensorboardSizeRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardSizeResponse>]

  /// - Returns: Interceptors to use when invoking 'createTensorboardExperiment'.
  func makeCreateTensorboardExperimentInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>]

  /// - Returns: Interceptors to use when invoking 'getTensorboardExperiment'.
  func makeGetTensorboardExperimentInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>]

  /// - Returns: Interceptors to use when invoking 'updateTensorboardExperiment'.
  func makeUpdateTensorboardExperimentInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_UpdateTensorboardExperimentRequest, Google_Cloud_Aiplatform_V1_TensorboardExperiment>]

  /// - Returns: Interceptors to use when invoking 'listTensorboardExperiments'.
  func makeListTensorboardExperimentsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardExperimentsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteTensorboardExperiment'.
  func makeDeleteTensorboardExperimentInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteTensorboardExperimentRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'createTensorboardRun'.
  func makeCreateTensorboardRunInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>]

  /// - Returns: Interceptors to use when invoking 'batchCreateTensorboardRuns'.
  func makeBatchCreateTensorboardRunsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardRunsResponse>]

  /// - Returns: Interceptors to use when invoking 'getTensorboardRun'.
  func makeGetTensorboardRunInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>]

  /// - Returns: Interceptors to use when invoking 'updateTensorboardRun'.
  func makeUpdateTensorboardRunInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_UpdateTensorboardRunRequest, Google_Cloud_Aiplatform_V1_TensorboardRun>]

  /// - Returns: Interceptors to use when invoking 'listTensorboardRuns'.
  func makeListTensorboardRunsInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListTensorboardRunsRequest, Google_Cloud_Aiplatform_V1_ListTensorboardRunsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteTensorboardRun'.
  func makeDeleteTensorboardRunInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteTensorboardRunRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'batchCreateTensorboardTimeSeries'.
  func makeBatchCreateTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_BatchCreateTensorboardTimeSeriesResponse>]

  /// - Returns: Interceptors to use when invoking 'createTensorboardTimeSeries'.
  func makeCreateTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_CreateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>]

  /// - Returns: Interceptors to use when invoking 'getTensorboardTimeSeries'.
  func makeGetTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_GetTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>]

  /// - Returns: Interceptors to use when invoking 'updateTensorboardTimeSeries'.
  func makeUpdateTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_UpdateTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_TensorboardTimeSeries>]

  /// - Returns: Interceptors to use when invoking 'listTensorboardTimeSeries'.
  func makeListTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesRequest, Google_Cloud_Aiplatform_V1_ListTensorboardTimeSeriesResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteTensorboardTimeSeries'.
  func makeDeleteTensorboardTimeSeriesInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_DeleteTensorboardTimeSeriesRequest, Google_Longrunning_Operation>]

  /// - Returns: Interceptors to use when invoking 'batchReadTensorboardTimeSeriesData'.
  func makeBatchReadTensorboardTimeSeriesDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_BatchReadTensorboardTimeSeriesDataResponse>]

  /// - Returns: Interceptors to use when invoking 'readTensorboardTimeSeriesData'.
  func makeReadTensorboardTimeSeriesDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardTimeSeriesDataResponse>]

  /// - Returns: Interceptors to use when invoking 'readTensorboardBlobData'.
  func makeReadTensorboardBlobDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataRequest, Google_Cloud_Aiplatform_V1_ReadTensorboardBlobDataResponse>]

  /// - Returns: Interceptors to use when invoking 'writeTensorboardExperimentData'.
  func makeWriteTensorboardExperimentDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardExperimentDataResponse>]

  /// - Returns: Interceptors to use when invoking 'writeTensorboardRunData'.
  func makeWriteTensorboardRunDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataRequest, Google_Cloud_Aiplatform_V1_WriteTensorboardRunDataResponse>]

  /// - Returns: Interceptors to use when invoking 'exportTensorboardTimeSeriesData'.
  func makeExportTensorboardTimeSeriesDataInterceptors() -> [ClientInterceptor<Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataRequest, Google_Cloud_Aiplatform_V1_ExportTensorboardTimeSeriesDataResponse>]
}

public enum Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "TensorboardService",
    fullName: "google.cloud.aiplatform.v1.TensorboardService",
    methods: [
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboard,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboard,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboard,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboards,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboard,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardUsage,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardSize,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardExperiment,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardExperiment,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardExperiment,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardExperiments,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardExperiment,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardRun,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardRuns,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardRun,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardRun,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardRuns,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardRun,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchCreateTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.createTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.getTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.updateTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.listTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.deleteTensorboardTimeSeries,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.batchReadTensorboardTimeSeriesData,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardTimeSeriesData,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.readTensorboardBlobData,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardExperimentData,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.writeTensorboardRunData,
      Google_Cloud_Aiplatform_V1_TensorboardServiceClientMetadata.Methods.exportTensorboardTimeSeriesData,
    ]
  )

  public enum Methods {
    public static let createTensorboard = GRPCMethodDescriptor(
      name: "CreateTensorboard",
      path: "/google.cloud.aiplatform.v1.TensorboardService/CreateTensorboard",
      type: GRPCCallType.unary
    )

    public static let getTensorboard = GRPCMethodDescriptor(
      name: "GetTensorboard",
      path: "/google.cloud.aiplatform.v1.TensorboardService/GetTensorboard",
      type: GRPCCallType.unary
    )

    public static let updateTensorboard = GRPCMethodDescriptor(
      name: "UpdateTensorboard",
      path: "/google.cloud.aiplatform.v1.TensorboardService/UpdateTensorboard",
      type: GRPCCallType.unary
    )

    public static let listTensorboards = GRPCMethodDescriptor(
      name: "ListTensorboards",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ListTensorboards",
      type: GRPCCallType.unary
    )

    public static let deleteTensorboard = GRPCMethodDescriptor(
      name: "DeleteTensorboard",
      path: "/google.cloud.aiplatform.v1.TensorboardService/DeleteTensorboard",
      type: GRPCCallType.unary
    )

    public static let readTensorboardUsage = GRPCMethodDescriptor(
      name: "ReadTensorboardUsage",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ReadTensorboardUsage",
      type: GRPCCallType.unary
    )

    public static let readTensorboardSize = GRPCMethodDescriptor(
      name: "ReadTensorboardSize",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ReadTensorboardSize",
      type: GRPCCallType.unary
    )

    public static let createTensorboardExperiment = GRPCMethodDescriptor(
      name: "CreateTensorboardExperiment",
      path: "/google.cloud.aiplatform.v1.TensorboardService/CreateTensorboardExperiment",
      type: GRPCCallType.unary
    )

    public static let getTensorboardExperiment = GRPCMethodDescriptor(
      name: "GetTensorboardExperiment",
      path: "/google.cloud.aiplatform.v1.TensorboardService/GetTensorboardExperiment",
      type: GRPCCallType.unary
    )

    public static let updateTensorboardExperiment = GRPCMethodDescriptor(
      name: "UpdateTensorboardExperiment",
      path: "/google.cloud.aiplatform.v1.TensorboardService/UpdateTensorboardExperiment",
      type: GRPCCallType.unary
    )

    public static let listTensorboardExperiments = GRPCMethodDescriptor(
      name: "ListTensorboardExperiments",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ListTensorboardExperiments",
      type: GRPCCallType.unary
    )

    public static let deleteTensorboardExperiment = GRPCMethodDescriptor(
      name: "DeleteTensorboardExperiment",
      path: "/google.cloud.aiplatform.v1.TensorboardService/DeleteTensorboardExperiment",
      type: GRPCCallType.unary
    )

    public static let createTensorboardRun = GRPCMethodDescriptor(
      name: "CreateTensorboardRun",
      path: "/google.cloud.aiplatform.v1.TensorboardService/CreateTensorboardRun",
      type: GRPCCallType.unary
    )

    public static let batchCreateTensorboardRuns = GRPCMethodDescriptor(
      name: "BatchCreateTensorboardRuns",
      path: "/google.cloud.aiplatform.v1.TensorboardService/BatchCreateTensorboardRuns",
      type: GRPCCallType.unary
    )

    public static let getTensorboardRun = GRPCMethodDescriptor(
      name: "GetTensorboardRun",
      path: "/google.cloud.aiplatform.v1.TensorboardService/GetTensorboardRun",
      type: GRPCCallType.unary
    )

    public static let updateTensorboardRun = GRPCMethodDescriptor(
      name: "UpdateTensorboardRun",
      path: "/google.cloud.aiplatform.v1.TensorboardService/UpdateTensorboardRun",
      type: GRPCCallType.unary
    )

    public static let listTensorboardRuns = GRPCMethodDescriptor(
      name: "ListTensorboardRuns",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ListTensorboardRuns",
      type: GRPCCallType.unary
    )

    public static let deleteTensorboardRun = GRPCMethodDescriptor(
      name: "DeleteTensorboardRun",
      path: "/google.cloud.aiplatform.v1.TensorboardService/DeleteTensorboardRun",
      type: GRPCCallType.unary
    )

    public static let batchCreateTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "BatchCreateTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/BatchCreateTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let createTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "CreateTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/CreateTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let getTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "GetTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/GetTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let updateTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "UpdateTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/UpdateTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let listTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "ListTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ListTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let deleteTensorboardTimeSeries = GRPCMethodDescriptor(
      name: "DeleteTensorboardTimeSeries",
      path: "/google.cloud.aiplatform.v1.TensorboardService/DeleteTensorboardTimeSeries",
      type: GRPCCallType.unary
    )

    public static let batchReadTensorboardTimeSeriesData = GRPCMethodDescriptor(
      name: "BatchReadTensorboardTimeSeriesData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/BatchReadTensorboardTimeSeriesData",
      type: GRPCCallType.unary
    )

    public static let readTensorboardTimeSeriesData = GRPCMethodDescriptor(
      name: "ReadTensorboardTimeSeriesData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ReadTensorboardTimeSeriesData",
      type: GRPCCallType.unary
    )

    public static let readTensorboardBlobData = GRPCMethodDescriptor(
      name: "ReadTensorboardBlobData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ReadTensorboardBlobData",
      type: GRPCCallType.serverStreaming
    )

    public static let writeTensorboardExperimentData = GRPCMethodDescriptor(
      name: "WriteTensorboardExperimentData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/WriteTensorboardExperimentData",
      type: GRPCCallType.unary
    )

    public static let writeTensorboardRunData = GRPCMethodDescriptor(
      name: "WriteTensorboardRunData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/WriteTensorboardRunData",
      type: GRPCCallType.unary
    )

    public static let exportTensorboardTimeSeriesData = GRPCMethodDescriptor(
      name: "ExportTensorboardTimeSeriesData",
      path: "/google.cloud.aiplatform.v1.TensorboardService/ExportTensorboardTimeSeriesData",
      type: GRPCCallType.unary
    )
  }
}

