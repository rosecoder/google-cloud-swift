//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/logging/v2/logging.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Service for ingesting and querying logs.
///
/// Usage: instantiate `Google_Logging_V2_LoggingServiceV2Client`, then call methods of this protocol to make API calls.
internal protocol Google_Logging_V2_LoggingServiceV2ClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol? { get }

  func deleteLog(
    _ request: Google_Logging_V2_DeleteLogRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_DeleteLogRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func writeLogEntries(
    _ request: Google_Logging_V2_WriteLogEntriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_WriteLogEntriesRequest, Google_Logging_V2_WriteLogEntriesResponse>

  func listLogEntries(
    _ request: Google_Logging_V2_ListLogEntriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_ListLogEntriesRequest, Google_Logging_V2_ListLogEntriesResponse>

  func listMonitoredResourceDescriptors(
    _ request: Google_Logging_V2_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_ListMonitoredResourceDescriptorsRequest, Google_Logging_V2_ListMonitoredResourceDescriptorsResponse>

  func listLogs(
    _ request: Google_Logging_V2_ListLogsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_ListLogsRequest, Google_Logging_V2_ListLogsResponse>

  func tailLogEntries(
    callOptions: CallOptions?,
    handler: @escaping (Google_Logging_V2_TailLogEntriesResponse) -> Void
  ) -> BidirectionalStreamingCall<Google_Logging_V2_TailLogEntriesRequest, Google_Logging_V2_TailLogEntriesResponse>
}

extension Google_Logging_V2_LoggingServiceV2ClientProtocol {
  internal var serviceName: String {
    return "google.logging.v2.LoggingServiceV2"
  }

  /// Deletes all the log entries in a log for the _Default Log Bucket. The log
  /// reappears if it receives new entries. Log entries written shortly before
  /// the delete operation might not be deleted. Entries received after the
  /// delete operation with a timestamp before the operation will be deleted.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteLog.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteLog(
    _ request: Google_Logging_V2_DeleteLogRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_DeleteLogRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.deleteLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogInterceptors() ?? []
    )
  }

  /// Writes log entries to Logging. This API method is the
  /// only way to send log entries to Logging. This method
  /// is used, directly or indirectly, by the Logging agent
  /// (fluentd) and all logging libraries configured to use Logging.
  /// A single request may contain log entries for a maximum of 1000
  /// different resources (projects, organizations, billing accounts or
  /// folders)
  ///
  /// - Parameters:
  ///   - request: Request to send to WriteLogEntries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func writeLogEntries(
    _ request: Google_Logging_V2_WriteLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_WriteLogEntriesRequest, Google_Logging_V2_WriteLogEntriesResponse> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.writeLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteLogEntriesInterceptors() ?? []
    )
  }

  /// Lists log entries.  Use this method to retrieve log entries that originated
  /// from a project/folder/organization/billing account.  For ways to export log
  /// entries, see [Exporting
  /// Logs](https://cloud.google.com/logging/docs/export).
  ///
  /// - Parameters:
  ///   - request: Request to send to ListLogEntries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listLogEntries(
    _ request: Google_Logging_V2_ListLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_ListLogEntriesRequest, Google_Logging_V2_ListLogEntriesResponse> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogEntriesInterceptors() ?? []
    )
  }

  /// Lists the descriptors for monitored resource types used by Logging.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListMonitoredResourceDescriptors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listMonitoredResourceDescriptors(
    _ request: Google_Logging_V2_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_ListMonitoredResourceDescriptorsRequest, Google_Logging_V2_ListMonitoredResourceDescriptorsResponse> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listMonitoredResourceDescriptors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMonitoredResourceDescriptorsInterceptors() ?? []
    )
  }

  /// Lists the logs in projects, organizations, folders, or billing accounts.
  /// Only logs that have entries are listed.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListLogs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listLogs(
    _ request: Google_Logging_V2_ListLogsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_ListLogsRequest, Google_Logging_V2_ListLogsResponse> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogsInterceptors() ?? []
    )
  }

  /// Streaming read of log entries as they are ingested. Until the stream is
  /// terminated, it will continue reading logs.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  internal func tailLogEntries(
    callOptions: CallOptions? = nil,
    handler: @escaping (Google_Logging_V2_TailLogEntriesResponse) -> Void
  ) -> BidirectionalStreamingCall<Google_Logging_V2_TailLogEntriesRequest, Google_Logging_V2_TailLogEntriesResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.tailLogEntries.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTailLogEntriesInterceptors() ?? [],
      handler: handler
    )
  }
}

internal final class Google_Logging_V2_LoggingServiceV2Client: Google_Logging_V2_LoggingServiceV2ClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol?

  /// Creates a client for the google.logging.v2.LoggingServiceV2 service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.5) && canImport(_Concurrency)
/// Service for ingesting and querying logs.
@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
internal protocol Google_Logging_V2_LoggingServiceV2AsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol? { get }

  func makeDeleteLogCall(
    _ request: Google_Logging_V2_DeleteLogRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_DeleteLogRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeWriteLogEntriesCall(
    _ request: Google_Logging_V2_WriteLogEntriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_WriteLogEntriesRequest, Google_Logging_V2_WriteLogEntriesResponse>

  func makeListLogEntriesCall(
    _ request: Google_Logging_V2_ListLogEntriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogEntriesRequest, Google_Logging_V2_ListLogEntriesResponse>

  func makeListMonitoredResourceDescriptorsCall(
    _ request: Google_Logging_V2_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListMonitoredResourceDescriptorsRequest, Google_Logging_V2_ListMonitoredResourceDescriptorsResponse>

  func makeListLogsCall(
    _ request: Google_Logging_V2_ListLogsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogsRequest, Google_Logging_V2_ListLogsResponse>

  func makeTailLogEntriesCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Google_Logging_V2_TailLogEntriesRequest, Google_Logging_V2_TailLogEntriesResponse>
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
extension Google_Logging_V2_LoggingServiceV2AsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Logging_V2_LoggingServiceV2ClientMetadata.serviceDescriptor
  }

  internal var interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeDeleteLogCall(
    _ request: Google_Logging_V2_DeleteLogRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_DeleteLogRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.deleteLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogInterceptors() ?? []
    )
  }

  internal func makeWriteLogEntriesCall(
    _ request: Google_Logging_V2_WriteLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_WriteLogEntriesRequest, Google_Logging_V2_WriteLogEntriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.writeLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteLogEntriesInterceptors() ?? []
    )
  }

  internal func makeListLogEntriesCall(
    _ request: Google_Logging_V2_ListLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogEntriesRequest, Google_Logging_V2_ListLogEntriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogEntriesInterceptors() ?? []
    )
  }

  internal func makeListMonitoredResourceDescriptorsCall(
    _ request: Google_Logging_V2_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListMonitoredResourceDescriptorsRequest, Google_Logging_V2_ListMonitoredResourceDescriptorsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listMonitoredResourceDescriptors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMonitoredResourceDescriptorsInterceptors() ?? []
    )
  }

  internal func makeListLogsCall(
    _ request: Google_Logging_V2_ListLogsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogsRequest, Google_Logging_V2_ListLogsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogsInterceptors() ?? []
    )
  }

  internal func makeTailLogEntriesCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Google_Logging_V2_TailLogEntriesRequest, Google_Logging_V2_TailLogEntriesResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.tailLogEntries.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTailLogEntriesInterceptors() ?? []
    )
  }
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
extension Google_Logging_V2_LoggingServiceV2AsyncClientProtocol {
  internal func deleteLog(
    _ request: Google_Logging_V2_DeleteLogRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.deleteLog.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogInterceptors() ?? []
    )
  }

  internal func writeLogEntries(
    _ request: Google_Logging_V2_WriteLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_WriteLogEntriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.writeLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWriteLogEntriesInterceptors() ?? []
    )
  }

  internal func listLogEntries(
    _ request: Google_Logging_V2_ListLogEntriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_ListLogEntriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogEntries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogEntriesInterceptors() ?? []
    )
  }

  internal func listMonitoredResourceDescriptors(
    _ request: Google_Logging_V2_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_ListMonitoredResourceDescriptorsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listMonitoredResourceDescriptors.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListMonitoredResourceDescriptorsInterceptors() ?? []
    )
  }

  internal func listLogs(
    _ request: Google_Logging_V2_ListLogsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_ListLogsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogs.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogsInterceptors() ?? []
    )
  }

  internal func tailLogEntries<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Google_Logging_V2_TailLogEntriesResponse> where RequestStream: Sequence, RequestStream.Element == Google_Logging_V2_TailLogEntriesRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.tailLogEntries.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTailLogEntriesInterceptors() ?? []
    )
  }

  internal func tailLogEntries<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Google_Logging_V2_TailLogEntriesResponse> where RequestStream: AsyncSequence, RequestStream.Element == Google_Logging_V2_TailLogEntriesRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.tailLogEntries.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTailLogEntriesInterceptors() ?? []
    )
  }
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
internal struct Google_Logging_V2_LoggingServiceV2AsyncClient: Google_Logging_V2_LoggingServiceV2AsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.5) && canImport(_Concurrency)

internal protocol Google_Logging_V2_LoggingServiceV2ClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'deleteLog'.
  func makeDeleteLogInterceptors() -> [ClientInterceptor<Google_Logging_V2_DeleteLogRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'writeLogEntries'.
  func makeWriteLogEntriesInterceptors() -> [ClientInterceptor<Google_Logging_V2_WriteLogEntriesRequest, Google_Logging_V2_WriteLogEntriesResponse>]

  /// - Returns: Interceptors to use when invoking 'listLogEntries'.
  func makeListLogEntriesInterceptors() -> [ClientInterceptor<Google_Logging_V2_ListLogEntriesRequest, Google_Logging_V2_ListLogEntriesResponse>]

  /// - Returns: Interceptors to use when invoking 'listMonitoredResourceDescriptors'.
  func makeListMonitoredResourceDescriptorsInterceptors() -> [ClientInterceptor<Google_Logging_V2_ListMonitoredResourceDescriptorsRequest, Google_Logging_V2_ListMonitoredResourceDescriptorsResponse>]

  /// - Returns: Interceptors to use when invoking 'listLogs'.
  func makeListLogsInterceptors() -> [ClientInterceptor<Google_Logging_V2_ListLogsRequest, Google_Logging_V2_ListLogsResponse>]

  /// - Returns: Interceptors to use when invoking 'tailLogEntries'.
  func makeTailLogEntriesInterceptors() -> [ClientInterceptor<Google_Logging_V2_TailLogEntriesRequest, Google_Logging_V2_TailLogEntriesResponse>]
}

internal enum Google_Logging_V2_LoggingServiceV2ClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "LoggingServiceV2",
    fullName: "google.logging.v2.LoggingServiceV2",
    methods: [
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.deleteLog,
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.writeLogEntries,
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogEntries,
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listMonitoredResourceDescriptors,
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.listLogs,
      Google_Logging_V2_LoggingServiceV2ClientMetadata.Methods.tailLogEntries,
    ]
  )

  internal enum Methods {
    internal static let deleteLog = GRPCMethodDescriptor(
      name: "DeleteLog",
      path: "/google.logging.v2.LoggingServiceV2/DeleteLog",
      type: GRPCCallType.unary
    )

    internal static let writeLogEntries = GRPCMethodDescriptor(
      name: "WriteLogEntries",
      path: "/google.logging.v2.LoggingServiceV2/WriteLogEntries",
      type: GRPCCallType.unary
    )

    internal static let listLogEntries = GRPCMethodDescriptor(
      name: "ListLogEntries",
      path: "/google.logging.v2.LoggingServiceV2/ListLogEntries",
      type: GRPCCallType.unary
    )

    internal static let listMonitoredResourceDescriptors = GRPCMethodDescriptor(
      name: "ListMonitoredResourceDescriptors",
      path: "/google.logging.v2.LoggingServiceV2/ListMonitoredResourceDescriptors",
      type: GRPCCallType.unary
    )

    internal static let listLogs = GRPCMethodDescriptor(
      name: "ListLogs",
      path: "/google.logging.v2.LoggingServiceV2/ListLogs",
      type: GRPCCallType.unary
    )

    internal static let tailLogEntries = GRPCMethodDescriptor(
      name: "TailLogEntries",
      path: "/google.logging.v2.LoggingServiceV2/TailLogEntries",
      type: GRPCCallType.bidirectionalStreaming
    )
  }
}

