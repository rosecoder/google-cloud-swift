//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/logging/v2/logging_metrics.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Service for configuring logs-based metrics.
///
/// Usage: instantiate `Google_Logging_V2_MetricsServiceV2Client`, then call methods of this protocol to make API calls.
internal protocol Google_Logging_V2_MetricsServiceV2ClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol? { get }

  func listLogMetrics(
    _ request: Google_Logging_V2_ListLogMetricsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_ListLogMetricsRequest, Google_Logging_V2_ListLogMetricsResponse>

  func getLogMetric(
    _ request: Google_Logging_V2_GetLogMetricRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_GetLogMetricRequest, Google_Logging_V2_LogMetric>

  func createLogMetric(
    _ request: Google_Logging_V2_CreateLogMetricRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_CreateLogMetricRequest, Google_Logging_V2_LogMetric>

  func updateLogMetric(
    _ request: Google_Logging_V2_UpdateLogMetricRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_UpdateLogMetricRequest, Google_Logging_V2_LogMetric>

  func deleteLogMetric(
    _ request: Google_Logging_V2_DeleteLogMetricRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Logging_V2_DeleteLogMetricRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Logging_V2_MetricsServiceV2ClientProtocol {
  internal var serviceName: String {
    return "google.logging.v2.MetricsServiceV2"
  }

  /// Lists logs-based metrics.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListLogMetrics.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listLogMetrics(
    _ request: Google_Logging_V2_ListLogMetricsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_ListLogMetricsRequest, Google_Logging_V2_ListLogMetricsResponse> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.listLogMetrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogMetricsInterceptors() ?? []
    )
  }

  /// Gets a logs-based metric.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLogMetric.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getLogMetric(
    _ request: Google_Logging_V2_GetLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_GetLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.getLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLogMetricInterceptors() ?? []
    )
  }

  /// Creates a logs-based metric.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateLogMetric.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createLogMetric(
    _ request: Google_Logging_V2_CreateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_CreateLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.createLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateLogMetricInterceptors() ?? []
    )
  }

  /// Creates or updates a logs-based metric.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateLogMetric.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateLogMetric(
    _ request: Google_Logging_V2_UpdateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_UpdateLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.updateLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateLogMetricInterceptors() ?? []
    )
  }

  /// Deletes a logs-based metric.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteLogMetric.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteLogMetric(
    _ request: Google_Logging_V2_DeleteLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Logging_V2_DeleteLogMetricRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.deleteLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogMetricInterceptors() ?? []
    )
  }
}

internal final class Google_Logging_V2_MetricsServiceV2Client: Google_Logging_V2_MetricsServiceV2ClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol?

  /// Creates a client for the google.logging.v2.MetricsServiceV2 service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.5) && canImport(_Concurrency)
/// Service for configuring logs-based metrics.
@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
internal protocol Google_Logging_V2_MetricsServiceV2AsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol? { get }

  func makeListLogMetricsCall(
    _ request: Google_Logging_V2_ListLogMetricsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogMetricsRequest, Google_Logging_V2_ListLogMetricsResponse>

  func makeGetLogMetricCall(
    _ request: Google_Logging_V2_GetLogMetricRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_GetLogMetricRequest, Google_Logging_V2_LogMetric>

  func makeCreateLogMetricCall(
    _ request: Google_Logging_V2_CreateLogMetricRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_CreateLogMetricRequest, Google_Logging_V2_LogMetric>

  func makeUpdateLogMetricCall(
    _ request: Google_Logging_V2_UpdateLogMetricRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_UpdateLogMetricRequest, Google_Logging_V2_LogMetric>

  func makeDeleteLogMetricCall(
    _ request: Google_Logging_V2_DeleteLogMetricRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_DeleteLogMetricRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
extension Google_Logging_V2_MetricsServiceV2AsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Google_Logging_V2_MetricsServiceV2ClientMetadata.serviceDescriptor
  }

  internal var interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeListLogMetricsCall(
    _ request: Google_Logging_V2_ListLogMetricsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_ListLogMetricsRequest, Google_Logging_V2_ListLogMetricsResponse> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.listLogMetrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogMetricsInterceptors() ?? []
    )
  }

  internal func makeGetLogMetricCall(
    _ request: Google_Logging_V2_GetLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_GetLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.getLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLogMetricInterceptors() ?? []
    )
  }

  internal func makeCreateLogMetricCall(
    _ request: Google_Logging_V2_CreateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_CreateLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.createLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateLogMetricInterceptors() ?? []
    )
  }

  internal func makeUpdateLogMetricCall(
    _ request: Google_Logging_V2_UpdateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_UpdateLogMetricRequest, Google_Logging_V2_LogMetric> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.updateLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateLogMetricInterceptors() ?? []
    )
  }

  internal func makeDeleteLogMetricCall(
    _ request: Google_Logging_V2_DeleteLogMetricRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Google_Logging_V2_DeleteLogMetricRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.deleteLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogMetricInterceptors() ?? []
    )
  }
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
extension Google_Logging_V2_MetricsServiceV2AsyncClientProtocol {
  internal func listLogMetrics(
    _ request: Google_Logging_V2_ListLogMetricsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_ListLogMetricsResponse {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.listLogMetrics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListLogMetricsInterceptors() ?? []
    )
  }

  internal func getLogMetric(
    _ request: Google_Logging_V2_GetLogMetricRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_LogMetric {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.getLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLogMetricInterceptors() ?? []
    )
  }

  internal func createLogMetric(
    _ request: Google_Logging_V2_CreateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_LogMetric {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.createLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateLogMetricInterceptors() ?? []
    )
  }

  internal func updateLogMetric(
    _ request: Google_Logging_V2_UpdateLogMetricRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Google_Logging_V2_LogMetric {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.updateLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateLogMetricInterceptors() ?? []
    )
  }

  internal func deleteLogMetric(
    _ request: Google_Logging_V2_DeleteLogMetricRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.deleteLogMetric.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLogMetricInterceptors() ?? []
    )
  }
}

@available(macOS 12, iOS 15, tvOS 15, watchOS 8, *)
internal struct Google_Logging_V2_MetricsServiceV2AsyncClient: Google_Logging_V2_MetricsServiceV2AsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.5) && canImport(_Concurrency)

internal protocol Google_Logging_V2_MetricsServiceV2ClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'listLogMetrics'.
  func makeListLogMetricsInterceptors() -> [ClientInterceptor<Google_Logging_V2_ListLogMetricsRequest, Google_Logging_V2_ListLogMetricsResponse>]

  /// - Returns: Interceptors to use when invoking 'getLogMetric'.
  func makeGetLogMetricInterceptors() -> [ClientInterceptor<Google_Logging_V2_GetLogMetricRequest, Google_Logging_V2_LogMetric>]

  /// - Returns: Interceptors to use when invoking 'createLogMetric'.
  func makeCreateLogMetricInterceptors() -> [ClientInterceptor<Google_Logging_V2_CreateLogMetricRequest, Google_Logging_V2_LogMetric>]

  /// - Returns: Interceptors to use when invoking 'updateLogMetric'.
  func makeUpdateLogMetricInterceptors() -> [ClientInterceptor<Google_Logging_V2_UpdateLogMetricRequest, Google_Logging_V2_LogMetric>]

  /// - Returns: Interceptors to use when invoking 'deleteLogMetric'.
  func makeDeleteLogMetricInterceptors() -> [ClientInterceptor<Google_Logging_V2_DeleteLogMetricRequest, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum Google_Logging_V2_MetricsServiceV2ClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MetricsServiceV2",
    fullName: "google.logging.v2.MetricsServiceV2",
    methods: [
      Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.listLogMetrics,
      Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.getLogMetric,
      Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.createLogMetric,
      Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.updateLogMetric,
      Google_Logging_V2_MetricsServiceV2ClientMetadata.Methods.deleteLogMetric,
    ]
  )

  internal enum Methods {
    internal static let listLogMetrics = GRPCMethodDescriptor(
      name: "ListLogMetrics",
      path: "/google.logging.v2.MetricsServiceV2/ListLogMetrics",
      type: GRPCCallType.unary
    )

    internal static let getLogMetric = GRPCMethodDescriptor(
      name: "GetLogMetric",
      path: "/google.logging.v2.MetricsServiceV2/GetLogMetric",
      type: GRPCCallType.unary
    )

    internal static let createLogMetric = GRPCMethodDescriptor(
      name: "CreateLogMetric",
      path: "/google.logging.v2.MetricsServiceV2/CreateLogMetric",
      type: GRPCCallType.unary
    )

    internal static let updateLogMetric = GRPCMethodDescriptor(
      name: "UpdateLogMetric",
      path: "/google.logging.v2.MetricsServiceV2/UpdateLogMetric",
      type: GRPCCallType.unary
    )

    internal static let deleteLogMetric = GRPCMethodDescriptor(
      name: "DeleteLogMetric",
      path: "/google.logging.v2.MetricsServiceV2/DeleteLogMetric",
      type: GRPCCallType.unary
    )
  }
}

